00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000001 b __tls_guard
00000018 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000028 00000001 B CTRPluginFramework::PrivColor::_useClamp
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700133c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700133c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001378 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070013f8 000004ec T CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)
070018e4 0000007c t CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07001960 0000012c t CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07001a8c 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
07001ab8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001b3c 00000148 T CTRPluginFramework::calcBranch(CTRPluginFramework::MenuEntry*)
07001c84 0000003c T CTRPluginFramework::isCovered(std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long)
07001cc0 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07001cc0 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07001d54 00000278 T CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)
07001fcc 00000188 T CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)
07002154 000000d4 T CTRPluginFramework::rangeWrite(CTRPluginFramework::MenuEntry*)
07002228 000002d0 T CTRPluginFramework::getFreeMemory(CTRPluginFramework::MenuEntry*)
070024f8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
070024f8 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
07002518 00000014 t __tcf_0
0700252c 000000c8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
070025f4 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07002630 000001fc t CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
0700282c 000000d0 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_assign_aux<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
070028fc 000002ec T CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)
07002be8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07002c6c 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07002cdc 000000b4 T CTRPluginFramework::ErrorMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07002d90 0000007c T CTRPluginFramework::AccessCheck(unsigned long&)
07002e0c 00000064 T CTRPluginFramework::Draw::DrawTopScr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int)
07002e70 00000014 T CTRPluginFramework::Draw::DrawPosition(int, int)
07002e84 000000d0 T CTRPluginFramework::RangeWriteManager::SetFreeAddress()
07002f54 00000428 T CTRPluginFramework::RangeWriteManager::SearchWrite()
0700337c 000000c4 T CTRPluginFramework::RangeWriteManager::ReturnWrite()
07003440 00000018 t __tcf_0
07003458 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070034dc 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700354c 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
070035a8 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700368c 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
0700386c 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07003870 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070038e0 0000071c T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
07004000 00000234 T CTRPluginFramework::main()
07004234 0000003c t __tcf_0
07004270 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070042f4 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07004364 00000080 T CTRPluginFramework::getFilePath[abi:cxx11]()
070043e4 00000028 T CTRPluginFramework::fileDelete(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700440c 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07004460 00000254 T CTRPluginFramework::fileWriter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&, unsigned long&)
070046b8 0000080c T CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)
07004ec4 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07004f48 00000230 t CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07005178 00000170 T CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)
070052e8 00000008 t CTRPluginFramework::GetWFAR()::{lambda()#1}::_FUN()
070052f0 00000008 t CTRPluginFramework::GetDSCR()::{lambda()#1}::_FUN()
070052f8 00000008 t CTRPluginFramework::WatchPointManager::Initialize()::{lambda()#1}::_FUN()
07005300 0000009c T CTRPluginFramework::WatchPointManager::Initialize()
0700539c 0000010c T CTRPluginFramework::WatchPointManager::SetWatchPoint(unsigned long, unsigned long, unsigned long)
070054a8 00000090 T CTRPluginFramework::WatchPointManager::DisableWatchPoint(unsigned long)
07005538 00000144 W void std::vector<CTRPluginFramework::WatchPointHit, std::allocator<CTRPluginFramework::WatchPointHit> >::_M_realloc_insert<unsigned long&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::WatchPointHit*, std::vector<CTRPluginFramework::WatchPointHit, std::allocator<CTRPluginFramework::WatchPointHit> > >, unsigned long&)
0700567c 0000007c T CTRPluginFramework::WatchPoint::GetHitData(unsigned long)
070056f8 00000114 T CTRPluginFramework::WatchPointManager::HandleException(ERRF_ExceptionInfo*, CpuRegisters*)
0700580c 0000003c T CTRPluginFramework::__ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07005848 00000070 t _GLOBAL__sub_I__ZN18CTRPluginFramework17WatchPointManager10_singletonE
070058b8 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework17WatchPointManager10_singletonE
07005904 T svcCustomBackdoor
0700590c T svcConvertVAToPA
07005914 T svcFlushDataCacheRange
0700591c T svcInvalidateEntireInstructionCache
07005924 T svcMapProcessMemoryEx
07005938 T svcUnmapProcessMemoryEx
07005940 T svcControlProcess
07005948 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07005b84 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07005bdc 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
07005bf0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07005c18 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
07005c34 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
07005c5c 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
07005c84 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07005d30 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07005e28 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005eb8 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
07006138 00000048 T CTRPluginFramework::Screenshot::Initialize()
07006180 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
070064f4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07006584 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07006884 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070068c0 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07006994 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
070069b8 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070069b8 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07006a28 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07006b28 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07006b78 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07006c58 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07006cb4 00000028 T CTRPluginFramework::ScreenImpl::Release()
07006cdc 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07006d4c 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07006d8c 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
07006e24 00000044 T CTRPluginFramework::ScreenImpl::Copy()
07006e68 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07006f34 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07006f3c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07006f98 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07006fe8 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07007024 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
070070b0 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07007120 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07007150 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
070071b0 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
070071c4 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
070071e0 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
070071fc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07007204 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
0700720c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07007214 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07007230 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700724c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
070072a0 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
070072cc 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07007324 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07007380 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
070073cc 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07007460 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
0700749c 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
070074d4 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07007538 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
070075a8 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
0700763c 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
070076e4 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
0700771c 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
07007738 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07007750 t _store_reg_loop
07007770 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
0700777c 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
0700777c 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
070077a4 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07007890 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
070078cc 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
07007988 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
07007dac 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07007e18 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07007ef8 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07007f04 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07007f38 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07007f44 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07007f5c 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07007f9c 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07007fe0 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07007ff0 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07008004 00000004 T Kernel::Initialize()
07008008 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07008020 0000000c T KProcess::GetCurrent()
0700802c 00000024 T KProcess::PatchCore2Access()
07008050 0000002c T KProcess::PatchCategory(unsigned long)
0700807c 00000014 T KProcess__PatchCategory
07008090 0000002c T KProcess::PatchMaxPriority(unsigned long)
070080bc 00000014 T KProcess__PatchMaxPriority
070080d0 00000028 T KProcess::PatchMaxThreads()
070080f8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
070080f8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07008188 00000044 T CTRPluginFramework::Search::UpdateProgress()
070081cc 00000048 T CTRPluginFramework::Search::Cancel()
07008214 00000184 T CTRPluginFramework::Search::CheckNextRegion()
07008398 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070083f0 0000015c W std::__cxx11::to_string(unsigned long)
0700854c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070085cc 00000008 T CTRPluginFramework::Search::GetHeader() const
070085d4 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0700861c 0000000c T CTRPluginFramework::Search::GetType() const
07008628 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07008640 00000070 T CTRPluginFramework::Search::WriteHeader()
070086b0 00000058 T CTRPluginFramework::Search::WriteResults()
07008708 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07008750 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07008750 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070087b0 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0700889c 00000084 T CTRPluginFramework::Search::CreateIndexTable()
07008920 0000013c T CTRPluginFramework::Search::ExecuteSearch()
07008a5c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
07008ad4 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07008b08 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008b08 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008cf8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
07008d44 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07008d44 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07008f94 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
070091c0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07009218 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07009258 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0700930c 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07009364 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07009398 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07009418 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07009418 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070094b8 00000198 T CTRPluginFramework::SearchMenu::Update()
07009650 0000018c T CTRPluginFramework::SearchMenu::_Edit()
070097dc 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07009858 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009858 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070098c4 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
07009914 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
070099bc 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
07009b18 0000014c T CTRPluginFramework::SearchMenu::_Export()
07009c64 000005b8 T CTRPluginFramework::SearchMenu::Draw()
0700a21c 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
0700a338 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0700a850 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0700a864 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0700a878 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0700a88c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0700a890 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0700a894 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0700a8bc 000000bc t __tcf_1
0700a978 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0700a9b8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700aa10 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700aa50 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
0700aa74 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0700aa88 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0700aa9c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0700aab0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0700aac4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0700aad8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0700aaec 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0700ab00 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0700ab14 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0700ab28 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0700ac78 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0700adc4 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0700ae04 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700ae84 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0700b004 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700b0c4 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0700b128 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
0700bc54 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700bcd4 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0700bd3c 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0700be44 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700be44 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700bfd4 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700c080 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0700c0f0 00000114 W std::__cxx11::to_string(int)
0700c204 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c214 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700c3a4 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c510 00000048 t CTRPluginFramework::Reboot()
0700c558 00000054 t CTRPluginFramework::Shutdown()
0700c5ac 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700c6e8 000001fc t CTRPluginFramework::UpdateScreenshotText()
0700c8e4 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
0700cd44 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0700ce74 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0700cfd8 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700d00c 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0700d050 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0700d6ac 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700d6cc 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700d714 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0700d750 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700d760 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0700d78c 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700d78c 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700d7b4 00000024 W CTRPluginFramework::File::~File()
0700d7b4 00000024 W CTRPluginFramework::File::~File()
0700d7d8 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700d7d8 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700d810 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700d830 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700d830 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700d938 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0700d940 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0700d960 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700daf0 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0700db10 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0700db2c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0700db48 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0700db58 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0700db60 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
0700db68 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0700db70 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0700db78 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700db78 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700dba0 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700dba0 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700dbc8 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0700dd00 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0700dd3c 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700dd3c 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700dd8c 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0700de90 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
0700e5e0 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0700e630 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0700e6d0 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700e7d4 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700e7d4 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700e848 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0700e9e0 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0700eb00 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700eca4 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0700ecec 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0700ed9c 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0700edd8 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700ef0c 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700f04c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700f058 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700f06c 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700f06c 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700f210 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700f210 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700f3d4 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0700f42c 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700f4ec 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700f5d8 000000bc t __tcf_1
0700f694 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700f6ec 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0700f6f8 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0700fa20 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0700fb58 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0700fff0 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07010108 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
07010198 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
070101d0 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
070101fc 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
070102e8 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
0701036c 00000080 T CTRPluginFramework::PluginMenuHome::Init()
070103ec 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07010448 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
07010508 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07010508 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070109b4 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
07010ae4 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
07010b34 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07010bc0 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07010f6c 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07011190 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
070111b4 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07011218 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
0701127c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
0701127c 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070112b8 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070113f0 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
0701156c 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
070115c4 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07011758 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07011770 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07011930 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07011a18 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
07011bd8 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07011cc0 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07011d48 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07011d5c 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07011d80 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07011dd8 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07011e18 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07011e58 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07011eac 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07011ed0 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07011ef8 00000030 W CTRPluginFramework::ARCode::~ARCode()
07011ef8 00000030 W CTRPluginFramework::ARCode::~ARCode()
07011f28 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07011f28 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07011fe4 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07012018 00000014 t __tcf_1
0701202c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070120ac 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
070121cc 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070122b0 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0701230c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07012484 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
070125a0 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070125a0 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070127f4 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
070129c0 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07012ac4 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07012c3c 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07012d5c 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07012d98 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07012ee4 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07012fe8 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07013254 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07013320 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070134dc 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
0701367c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0701368c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0701369c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070136ac 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070136b4 00000024 t std::_Vector_base<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
070136d8 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
070136d8 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07013708 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07013728 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013728 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701380c 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701382c 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0701383c 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
0701388c 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
070138a4 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
070138c8 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
07013978 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
07013988 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070139a8 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07013a90 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07013ae8 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013ae8 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013bbc 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
07013bdc 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07013bdc 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07013bfc 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07013c1c 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
07013c74 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07013c74 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07013cf8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013cf8 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013d58 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013d58 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013db8 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07013dbc 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07013dd0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07013e28 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07013e28 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07013e50 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07013e70 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07013e78 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07013e8c 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07013e98 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
07013ea0 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07013ec4 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
07013ef4 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07013f10 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07013f78 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07013f78 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07014064 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07014064 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07014154 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07014358 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07014394 00000058 T CTRPluginFramework::Menu::CloseAll()
070143ec 00000030 T CTRPluginFramework::Menu::~Menu()
070143ec 00000030 T CTRPluginFramework::Menu::~Menu()
0701441c 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07014428 00000008 T CTRPluginFramework::Menu::GetFolder() const
07014430 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07014438 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
0701447c 000003b4 T CTRPluginFramework::Menu::Draw() const
07014830 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
070148c8 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
07014960 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
07014ba8 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07014d14 00000068 T CTRPluginFramework::Menu::ShowNote()
07014d7c 00000008 T CTRPluginFramework::Menu::CloseNote()
07014d84 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07014d8c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07014d8c 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07014e70 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07014e70 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07014f9c 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07014ff0 00000044 T CTRPluginFramework::Menu::Pop()
07015034 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
070150e8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07015140 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07015168 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
070151a0 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
070151e0 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
070151f4 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
070151f4 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07015270 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07015278 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07015280 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07015288 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07015290 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07015298 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
070152a0 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
070152fc 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
070154c8 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070159a8 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07015b6c 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
07015bac 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
07015c14 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
07015ca4 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
07015d24 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07015da8 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07015f04 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
07016070 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
070160d0 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07016144 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
070161ec 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07016708 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07016710 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07016710 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07016738 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
070167ac 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
0701680c 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
070168f8 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
07016924 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07016a0c 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
07016a38 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07016cf8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07016d5c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07016dbc 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016e10 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016e64 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07016ebc 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07016fb0 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07017004 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07017718 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
07017794 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070177c8 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070177c8 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070179a0 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070179a0 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017b68 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
07017b94 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
07017cac 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07017d84 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07017e54 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07017f24 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
070187e0 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
070188ec 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
070189f8 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
07018ba0 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
07018be8 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07018c3c 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07019690 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07019c0c 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701a188 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0701a1c8 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0701a218 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0701a6b4 00000368 T CTRPluginFramework::KeyboardImpl::Run()
0701aa1c 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701aa1c 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701aa54 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0701aa80 00000030 t CTRPluginFramework::GetIndex(int)
0701aab0 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701abe4 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0701ac58 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701ac58 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701acc4 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0701ad58 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0701af24 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701af50 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701af50 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701af88 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0701b098 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0701b0d4 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b0d4 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b230 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701b230 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701b234 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701b234 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701b238 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701b238 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701b23c 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701b254 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701b26c 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701b284 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701b420 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701b55c 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701b650 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0701b690 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701b6e8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701b728 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
0701b728 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
0701b874 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701b890 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701b8ac 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701b920 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
0701b94c 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701b988 00000010 T CTRPluginFramework::HexEditor::Refresh()
0701b998 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701b9dc 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701ba14 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701ba40 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701bac0 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701bb54 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701bc20 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701bce0 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701bd90 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701bf44 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701bf54 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701bf64 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701bf74 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0701bfb4 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
0701c020 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701c0f4 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701c14c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701c1d0 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701c1d0 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701c3d0 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701c598 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701c67c 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
0701c734 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c994 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701cb18 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701cba8 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701ce58 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701d0c8 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701d2a8 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701d308 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
0701d48c 000001c8 T CTRPluginFramework::HexEditor::_Update()
0701d654 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701d8e0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701d938 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701d978 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0701d9f0 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701da50 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0701daac 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0701db04 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701de48 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701de48 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701e030 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
0701e104 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701e4dc 0000015c T CTRPluginFramework::GuideReader::Draw()
0701e638 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701e6ac 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701e704 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701e704 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701e750 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0701e800 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0701e898 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0701e988 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701ea08 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0701ed68 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0701eea4 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0701eecc 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0701ef80 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0701efb0 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0701f000 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f06c 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0701f2ec 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0701f618 000000e4 T CTRPluginFramework::Converter::Converter()
0701f618 000000e4 T CTRPluginFramework::Converter::Converter()
0701f6fc 00000010 T CTRPluginFramework::Converter::Instance()
0701f70c 00000110 T CTRPluginFramework::Converter::_Draw()
0701f81c 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
0701fa44 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0701fc5c 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701fc88 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0701fcc4 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701fd00 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0701fd3c 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701fd78 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0701fdb4 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701fde0 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0701fe1c 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701fe58 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0701fe94 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701fed0 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0701fefc 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701ff38 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0701ff64 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701ff90 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0701ffbc 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0701fff8 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
07020024 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07020060 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0702008c 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
070200c0 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
070200fc 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07020128 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
07020164 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
07020190 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
070201bc 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
070201e8 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
07020214 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07020240 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0702026c 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
07020298 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070202c4 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07020300 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
0702032c 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07020348 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
0702037c 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0702037c 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07020438 00000028 T CTRPluginFramework::Window::~Window()
07020438 00000028 T CTRPluginFramework::Window::~Window()
07020460 00000064 T CTRPluginFramework::Window::Draw() const
070204c4 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070205a0 00000018 T CTRPluginFramework::Window::DrawButton() const
070205b8 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
070205d0 00000018 T CTRPluginFramework::Window::MustClose() const
070205e8 00000028 T CTRPluginFramework::Window::Close() const
07020610 00000004 T CTRPluginFramework::Window::GetRect() const
07020614 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07020648 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
070206c8 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070206e8 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070206e8 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070206fc 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
070206fc 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07020724 00000024 T CTRPluginFramework::UIContainer::Draw()
07020748 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
0702077c 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07020864 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07020898 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07020898 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
0702090c 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
07020914 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07020948 000000cc T CTRPluginFramework::TouchKeyString::Draw()
07020a14 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07020afc 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
07020b14 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07020b28 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07020b40 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07020b88 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07020b90 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07020b90 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07020c3c 00000008 W CTRPluginFramework::Drawable::operator()()
07020c44 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07020d28 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07020d80 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07020d80 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07020e0c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07020e0c 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07020ec4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07020ec4 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07020f50 0000004c T CTRPluginFramework::TouchKey::Clear()
07020f9c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020f9c 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020fbc 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020fdc 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07020fe4 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
07020fec 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
0702105c 00000070 T CTRPluginFramework::TouchKey::Draw()
070210cc 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070210d4 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070211bc 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070211bc 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07021290 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07021290 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07021360 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070214c8 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070214cc 000002fc T CTRPluginFramework::TextBox::Draw()
070217c8 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
070217f4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702184c 00000094 T CTRPluginFramework::TextBox::TextBox()
0702184c 00000094 T CTRPluginFramework::TextBox::TextBox()
070218e0 0000000c T CTRPluginFramework::TextBox::Open() const
070218ec 0000000c T CTRPluginFramework::TextBox::Close() const
070218f8 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07021900 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07021b28 0000000c T CTRPluginFramework::TextBox::DrawConst() const
07021b34 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
07021bc8 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07021c7c 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
07021ccc 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07021d6c 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
07021fa8 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07021fa8 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
0702212c 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702228c 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
070223b8 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
070224d4 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07022678 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07022840 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
070228a4 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
07022adc 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
07023084 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
07023508 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0702357c 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070235ec 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07023670 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
070237f0 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070239e4 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
07023a84 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07023c70 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
07023ca0 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07023e10 00000020 t __tcf_1
07023e30 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
0702401c 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070241c0 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
070242d4 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07024368 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0702440c 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070246c4 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07024714 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07024818 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07024858 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07024ef4 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0702508c 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070250d8 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070253a0 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07025464 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
070255b0 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070255d0 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
070255f0 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0702561c 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07025650 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07025678 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
070256a0 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070256c0 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
070256f0 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07025738 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0702577c 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070258c0 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
070258ec 00000040 t __tls_init
070258ec 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
0702592c 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07025978 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07025a14 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
07025aa8 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07025b58 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
07025c14 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
07025cd0 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
07025d24 0000000c T CTRPluginFramework::OSDImpl::Lock()
07025d30 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07025d4c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07025d58 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07025e40 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
07025fd4 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07026080 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
070260b0 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
0702618c 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07026220 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
07026284 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07026330 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07026360 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
07026370 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
070264e0 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
07026538 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07026538 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07026668 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
07026748 000000d0 T CTRPluginFramework::InstallOSD()
07026818 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
070268c4 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
070268c4 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
070268ec 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070269a0 000001a4 T CTRPluginFramework::OSDImpl::Update()
07026b44 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
07026b9c 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
07026c64 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
07027244 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070272d0 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07027364 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070273d4 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07027450 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027450 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027470 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027490 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07027528 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07027560 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070275c0 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070275d0 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070275d8 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070275e4 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070275e4 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
0702764c 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
07027740 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07027750 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070277c4 00000024 t fontGetSystemFont
070277e8 00000010 T CTRPluginFramework::Glyph::Width() const
070277f8 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
07027cdc 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07028028 000000c4 T CTRPluginFramework::Font::Initialize()
070280ec 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07028108 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
07028294 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
0702835c 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07028488 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07028514 00000020 T CTRPluginFramework::Font::GetGlyph(char)
07028534 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
0702857c 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
070285f4 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070285f4 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070285f8 00000014 T CTRPluginFramework::FloatingButton::Draw()
0702860c 00000014 T CTRPluginFramework::FloatingButton::operator()()
07028620 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07028638 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
070287d0 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070287d0 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028810 00000094 T CTRPluginFramework::ComboBox::Draw()
070288a4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
0702891c 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
0702891c 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07028970 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
07028990 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07028990 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070289dc 0000003c T CTRPluginFramework::ComboBox::Clear()
07028a18 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07028a98 000000a8 T CTRPluginFramework::ComboBox::operator()()
07028b40 000000e8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028c28 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028c78 0000015c T CTRPluginFramework::Button::Draw()
07028dd4 00000070 T CTRPluginFramework::Button::operator()()
07028e44 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07028fc8 00000038 T CTRPluginFramework::Button::~Button()
07028fc8 00000038 T CTRPluginFramework::Button::~Button()
07029000 00000020 T CTRPluginFramework::Button::~Button()
07029020 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07029020 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070291b4 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070291b4 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070291d4 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070291d4 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0702926c 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
0702926c 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07029280 00000018 T CTRPluginFramework::Button::Enable(bool)
07029298 00000010 T CTRPluginFramework::Button::Enable()
070292a8 00000010 T CTRPluginFramework::Button::Disable()
070292b8 00000010 T CTRPluginFramework::Button::Lock()
070292c8 00000010 T CTRPluginFramework::Button::Execute()
070292d8 00000018 T CTRPluginFramework::Button::SetState(bool)
070292f0 00000010 T CTRPluginFramework::Button::GetState() const
07029300 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07029308 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07029330 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07029354 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07029378 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07029378 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
070293b0 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070293b8 00000008 T CTRPluginFramework::BMPImage::Width() const
070293c0 00000008 T CTRPluginFramework::BMPImage::Height() const
070293c8 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070293d0 00000010 T CTRPluginFramework::BMPImage::data() const
070293e0 0000001c T CTRPluginFramework::BMPImage::end() const
070293fc 00000014 W CTRPluginFramework::BMPImage::DataClear()
07029410 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07029410 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0702949c 00000034 T CTRPluginFramework::BMPImage::Unload()
070294d0 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07029518 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07029548 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07029618 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07029684 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
070296a8 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
070297c4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070297c4 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07029818 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070299f4 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
07029b20 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
07029bf4 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07029bfc 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07029cf8 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
0702a010 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a010 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a0c0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702a118 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
0702a220 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0702a258 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0702a300 00000140 T ARM_Disasm::Decode01(unsigned long)
0702a440 00000028 T ARM_Disasm::Decode10(unsigned long)
0702a468 00000078 T ARM_Disasm::Decode11(unsigned long)
0702a4e0 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0702a534 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0702a584 00000110 T ARM_Disasm::DecodeALU(unsigned long)
0702a694 000000c4 T ARM_Disasm::Decode00(unsigned long)
0702a758 00000030 T ARM_Disasm::Decode(unsigned long)
0702a788 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702a808 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0702ab64 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0702abdc 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0702ac4c 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0702accc 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0702b114 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0702b334 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0702b3d8 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0702b498 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0702b558 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0702b608 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0702b698 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702b810 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0702b924 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0702b988 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702ba1c 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0702bd70 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702c06c 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702c0bc 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702c0bc 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702c134 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702c154 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c154 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c1a0 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702c208 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702c2a0 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
0702c3d0 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0702c3f4 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0702c418 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0702c43c 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0702c464 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0702c48c 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0702c4b4 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0702c5b4 00000050 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0702c604 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702c62c 0000010c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702c738 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0702e188 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0702e238 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0702e258 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0702e2cc 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e418 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702e778 00000020 t __tcf_1
0702e798 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
0702e7b0 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0702e7d8 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702e7f0 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702e840 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e890 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e8d8 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702e8d8 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702e928 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702e948 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702e9f4 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
0702ea34 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0702ea9c 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702eb8c 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702ec90 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702eca0 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0702edb8 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0702edf0 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702f2a8 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702f3fc 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0702fb48 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0702fbf8 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0702fd38 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
0702fd78 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702fdd0 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0702fdf8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702fdf8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702fdf8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702fdf8 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702fe44 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702fe88 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702fe88 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702fea8 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0702fedc 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702ff3c 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702ff7c 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702ff7c 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070300c0 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07030378 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
070303d4 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07030424 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0703048c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07030538 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030538 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070305b0 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
070305cc 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030608 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703063c 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07031a90 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07031b1c 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07031b7c 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07031bb8 00000030 t __tcf_1
07031be8 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07031d14 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
07031d50 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07032044 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
070326cc 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
07032874 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07032930 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07032da4 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07033170 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07033364 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070333bc 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0703344c 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07033488 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07033488 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070334ac 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
070334d4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070334d4 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07033508 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
070335b8 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070335b8 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070336c8 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070336c8 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070337ec 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070338dc 00000084 T CTRPluginFramework::ARCode::Update()
07033960 0000003c T CTRPluginFramework::ARCodeContext::Update()
0703399c 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07033a5c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07033a7c 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
07033aa8 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
07033bb0 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
07033ca4 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
07033d04 00000004 T CTRPluginFramework::Preferences::Initialize()
07033d08 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
07033f1c 000000bc T CTRPluginFramework::Preferences::LoadSettings()
07033fd8 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
07034034 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
070340f0 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
070341ac 00000158 T CTRPluginFramework::Preferences::WriteSettings()
07034304 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07034510 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
070345b8 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
070345e4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703463c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0703467c 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034738 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07034770 0000005c T CTRPluginFramework::InitializeRandomEngine()
070347cc 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703484c 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070348a8 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
070348ec 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07034948 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
070349c8 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034a24 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
07034b00 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07034d9c 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07034ea0 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07034ed4 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035010 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
07035034 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07035734 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703573c 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035780 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07035848 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
0703589c 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0703591c 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07035938 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
0703595c 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07035970 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035984 00000024 t __tcf_0
070359a8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070359a8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070359d0 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07035a1c 00000048 T CTRPluginFramework::LineWriter::Flush()
07035a64 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07035a64 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07035a80 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035ae4 00000018 T CTRPluginFramework::LineWriter::Close()
07035afc 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07035afc 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07035b28 00000018 T CTRPluginFramework::LineReader::~LineReader()
07035b28 00000018 T CTRPluginFramework::LineReader::~LineReader()
07035b40 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
07035b9c 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035c98 00000028 T CTRPluginFramework::Touch::IsDown()
07035cc0 00000028 T CTRPluginFramework::Touch::GetPosition()
07035ce8 00000020 T CTRPluginFramework::Time::AsSeconds() const
07035d08 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
07035d30 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07035d30 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07035d34 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
07035d38 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
07035d68 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07035d80 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
07035d88 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
07035e34 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07035e68 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07035e68 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07035f14 00000048 T CTRPluginFramework::Task::Start() const
07035f5c 0000004c T CTRPluginFramework::Task::Start(void*) const
07035fa8 00000064 T CTRPluginFramework::Task::Wait() const
0703600c 00000010 T CTRPluginFramework::System::IsNew3DS()
0703601c 00000010 T CTRPluginFramework::System::Reboot()
0703602c 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
0703606c 00000010 T CTRPluginFramework::Process::GetHandle()
0703607c 00000010 T CTRPluginFramework::Process::GetTitleID()
0703608c 00000024 T CTRPluginFramework::Process::GetTextSize()
070360b0 00000008 T CTRPluginFramework::Process::Pause()
070360b8 00000010 T CTRPluginFramework::Process::Play(unsigned long)
070360c8 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07036170 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07036174 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
070361c0 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
070361dc 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
070361fc 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
0703621c 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0703623c 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07036260 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070362bc 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070362f4 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07036300 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07036328 00000048 T CTRPluginFramework::Hook::Hook()
07036328 00000048 T CTRPluginFramework::Hook::Hook()
07036370 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07036370 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07036398 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07036398 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
070363ac 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07036410 00000050 T CTRPluginFramework::Hook::~Hook()
07036410 00000050 T CTRPluginFramework::Hook::~Hook()
07036460 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
0703647c 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
070364a4 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
070364b4 0000001c T CTRPluginFramework::Hook::IsEnabled()
070364d0 00000120 T CTRPluginFramework::Hook::Enable()
070365f0 00000030 T CTRPluginFramework::Hook::Disable()
07036620 00000008 T CTRPluginFramework::Hook::GetContext() const
07036628 0000000c T CTRPluginFramework::FwkSettings::Get()
07036634 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
07036700 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07036758 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
0703679c 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07036858 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
0703694c 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
07036a24 00000008 T CTRPluginFramework::File::Tell() const
07036a2c 0000002c T CTRPluginFramework::File::Rewind() const
07036a58 00000030 T CTRPluginFramework::File::Flush() const
07036a88 00000064 T CTRPluginFramework::File::GetSize() const
07036aec 00000008 T CTRPluginFramework::File::IsOpen() const
07036af4 00000044 T CTRPluginFramework::File::File()
07036af4 00000044 T CTRPluginFramework::File::File()
07036b38 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07036b38 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07036b60 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036bf4 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036cc8 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036d4c 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036dec 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07036e00 000000a8 T CTRPluginFramework::File::Close() const
07036ea8 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07037024 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07037024 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07037080 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0703711c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07037174 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
070371ec 00000048 T CTRPluginFramework::Directory::Close() const
07037234 00000008 T CTRPluginFramework::Directory::IsOpen() const
0703723c 00000040 T CTRPluginFramework::Directory::Directory()
0703723c 00000040 T CTRPluginFramework::Directory::Directory()
0703727c 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
070372b0 0000007c T CTRPluginFramework::Directory::~Directory()
070372b0 0000007c T CTRPluginFramework::Directory::~Directory()
0703732c 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0703738c 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
0703738c 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070373d8 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
070373ec 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037484 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037528 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070375fc 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037690 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703773c 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
07037748 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
070377d8 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037814 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070378f0 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07037a3c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07037a3c 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07037a94 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07037a94 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
07037ab0 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07037bcc 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07037c50 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07037cb8 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07037d6c 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07037db0 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07037f9c 00000288 T CTRPluginFramework::Directory::_List() const
07038224 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070382f8 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070383d4 0000003c T CTRPluginFramework::Controller::Update()
07038410 00000018 T CTRPluginFramework::Clock::Clock()
07038410 00000018 T CTRPluginFramework::Clock::Clock()
07038428 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
07038454 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
0703848c 00000034 T CTRPluginFramework::Clock::Restart()
070384c0 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
070384c4 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070384c4 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07038538 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
0703854c 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuEntry const*) const
07038550 00000048 T CTRPluginFramework::PluginMenu::Run() const
07038598 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
070385a0 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070385a8 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070385b8 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
070385c4 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
070385c4 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
070385f4 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
070385f4 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
0703860c 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703860c 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038654 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038654 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038690 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07038690 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
070386d0 00000008 T CTRPluginFramework::MessageBox::operator()() const
070386d8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070386d8 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07038700 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07038758 00000018 T CTRPluginFramework::Hotkey::~Hotkey()
07038758 00000018 T CTRPluginFramework::Hotkey::~Hotkey()
07038770 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07038778 00000038 T CTRPluginFramework::Hotkey::IsPressed() const
070387b0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070387b0 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070387cc 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070387cc 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07038814 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07038844 0000001c T CTRPluginFramework::HotkeyManager::Count()
07038860 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070388e0 0000001c T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070388e0 0000001c T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070388fc 0000014c W void std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::_M_realloc_insert<CTRPluginFramework::Hotkey const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hotkey*, std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> > >, CTRPluginFramework::Hotkey const&)
07038a48 0000004c T CTRPluginFramework::HotkeyManager::operator+=(CTRPluginFramework::Hotkey const&)
07038a94 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
07038b1c 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
07038c54 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
07038cd0 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07038dcc 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07038e94 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07038fdc 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07039010 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039010 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039060 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07039060 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07039090 0000000c T CTRPluginFramework::MenuEntry::SetGameFunc(void (*)(CTRPluginFramework::MenuEntry*)) const
0703909c 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070390a4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070390fc 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070391bc 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070391bc 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039204 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07039204 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07039270 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07039270 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
070392a0 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070392a8 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070392c4 00000044 T CTRPluginFramework::Keyboard::Open() const
07039308 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
070393a0 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
070393a8 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
070393b0 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
070393b8 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070393b8 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07039448 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
07039518 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
070395ac 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0703963c 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07039700 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07039790 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07039854 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070398e4 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
070399a8 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07039a54 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07039b24 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
07039c28 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07039d2c 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07039e30 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07039ea4 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07039f2c 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
07039f9c 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
07039ff8 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
0703a0bc 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0703a0d8 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0703a110 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0703a174 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
0703a1c0 0000000c T CTRPluginFramework::OSD::GetTopScreen()
0703a1cc 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0703a2b4 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703a33c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703a33c 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703a34c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703a34c 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703a368 00000110 T CTRPluginFramework::Color::Fade(float)
0703a478 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0703a4b8 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0703a534 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0703a754 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
0703a81c 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0703a824 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0703a888 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703a8e0 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
0703a8f8 00000028 T OnLoadCro
0703a920 000000ac T CTRPluginFramework::ThreadExit()
0703a9cc 00000054 T abort
0703aa20 000000c8 T __entrypoint
0703aae8 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703ab68 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703abdc 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703ac10 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
0703b300 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703b3b0 0000020c T CTRPluginFramework::Initialize()
0703b5bc 00000044 T CTRPluginFramework::ThreadInit(void*)
0703b600 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
0703b648 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
0703b678 000000b8 t NCSNDCmd_Add
0703b730 00000084 t NCSNDCmd_Execute.constprop.0
0703b7b4 00000068 T ncsndNotifyAptEvent
0703b81c 00000004 t ncsndAptHook
0703b820 000001c8 T ncsndInit
0703b9e8 000000ac T ncsndExit
0703ba94 00000024 T ncsndInitializeSound
0703bab8 00000264 T ncsndPlaySound
0703bd1c 00000040 T ncsndStopSound
0703bd5c 00000090 T ncsndIsPlaying
0703bdec T LoadCROHooked
0703be00 T AR__ExecuteRoutine
0703be28 t stackBak
0703be30 0000003c T __syscall_getreent
0703be6c 0000000c T __aeabi_read_tp
0703be78 0000003c T __getThreadLocalStorage
0703beb4 00000070 T __syscall_gettod_r
0703bf24 00000004 T __syscall_lock_acquire
0703bf28 00000004 T __syscall_lock_release
0703bf2c 00000004 T __syscall_lock_acquire_recursive
0703bf30 00000004 T __syscall_lock_release_recursive
0703bf34 00000054 T initThreadVars
0703bf88 0000005c T __system_initSyscalls
0703bfe4 00000020 T __libctru_exit
0703c004 0000001c T __appExit
0703c020 00000190 T __createThread
0703c1b0 00000110 T __startThread
0703c2c0 00000024 T threadGetHandle
0703c2e4 0000002c T threadFree
0703c310 00000024 T threadJoin
0703c334 00000020 T threadGetCurrent
0703c354 0000003c T threadExit
0703c390 00000020 t _thread_begin
0703c3b0 0000004c T hidInitFake
0703c3fc 0000003c T hidExitFake
0703c438 0000002c T hidSetSharedMem
0703c464 0000003c T fontEnsureMappedExtension
0703c4a0 00000070 T plgLdrExit
0703c510 000000d4 T plgLdrInit
0703c5e4 00000050 T PLGLDR__GetPluginPath
0703c634 00000024 T PLGLDR__FetchEvent
0703c658 000000e8 T PLGLDR__Reply
0703c740 000000b0 T __system_allocateHeaps
0703c7f0 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0703c81c 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
0703c844 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0703c998 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0703ca18 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
0703ca40 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0703ca68 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0703cacc 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0703cb9c 00000004 T __gsp__Update
0703cba0 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0703ce28 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0703ce40 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0703ce60 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0703cea8 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0703cedc 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
0703cf00 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
0703cf24 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
0703cf60 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
0703cf8c 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0703d01c 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0703d050 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0703d0f8 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0703d274 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0703d2b0 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0703d2d0 000000ac T CTRPluginFramework::SystemImpl::Initialize()
0703d37c 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
0703d3cc 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0703d3e4 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
0703d400 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0703d43c 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0703d45c 00000044 T CTRPluginFramework::SystemImpl::Status()
0703d4a0 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
0703d4b0 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0703d4b0 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0703d510 00000098 T CTRPluginFramework::Scheduler::Initialize()
0703d5a8 0000004c T CTRPluginFramework::Scheduler::Exit()
0703d5f4 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
0703d634 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
0703d678 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
0703d6b8 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0703d85c 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0703d960 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0703d9b8 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0703daf8 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0703dc6c 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0703dcb0 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0703dd38 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
0703dd58 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
0703dd6c 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0703dfac 00000044 W CTRPluginFramework::Lock::~Lock()
0703dfac 00000044 W CTRPluginFramework::Lock::~Lock()
0703dff0 000000d4 T CTRPluginFramework::HookManager::HookManager()
0703dff0 000000d4 T CTRPluginFramework::HookManager::HookManager()
0703e0c4 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0703e138 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0703e19c 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0703e26c 0000000c T CTRPluginFramework::HookManager::Lock()
0703e278 0000000c T CTRPluginFramework::HookManager::Unlock()
0703e284 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0703e2ec 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0703e368 000000c8 T __hook__CheckTlsValue
0703e430 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0703e574 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
0703e5f8 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0703e754 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0703e760 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0703e7a4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0703e7c8 00000004 t addrMapNodeDestructor(rbtree_node*)
0703e7cc 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0703e910 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0703e918 0000006c T CTRPluginFramework::Heap::Free(void*)
0703e984 0000000c T CTRPluginFramework::Heap::SpaceFree()
0703e990 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0703e99c 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0703e9bc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703ea14 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703ecc8 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
0703ed04 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0703eed8 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0703eed8 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0703ef9c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0703efa8 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0703efdc 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0703efdc 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0703f07c 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0703f0cc 00000038 T CTRPluginFramework::EventManager::Clear()
0703f104 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0703f2f0 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0703f358 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
0703f648 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0703f714 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0703f71c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703f774 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0703f77c 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0703f780 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0703f784 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0703f7cc 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0703f7f0 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0703f834 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0703f95c 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703f9ec 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0703fbec 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0703fbf8 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0703fc48 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703fed8 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040180 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040410 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07040444 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040760 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07040760 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
070407a4 0000001c T CTRPluginFramework::SubMenu::operator()()
070407c0 000001f8 T CTRPluginFramework::SubMenu::Draw()
070409b8 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
07040a98 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07040aa0 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
07040abc 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
07040af4 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07040af4 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07040b78 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07040d24 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07040d7c 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07040dbc 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07040ed4 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07040f2c 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
07040f3c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07040f70 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07040f9c 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0704100c 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
070410f8 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07041134 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070411b4 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07041214 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07041380 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07041380 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070417f0 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
07041a54 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
07041a94 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07041b40 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07041dfc 0000016c t CTRPluginFramework::ClearSearchFolder()
07041f68 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07042050 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07042640 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0704267c 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0704296c 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07042d18 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07042ddc 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07042ddc 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07042f54 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07042f54 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070430ac 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
0704336c 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
07043560 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07043590 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07043620 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07043620 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07043654 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07043654 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07043674 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
070436c8 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07043710 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07043718 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
07043888 00000218 T __ctrpf_getThreadVars
07043aa0 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07043ad8 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07043b10 0000000c T CTRPluginFramework::Sound::Sound()
07043b10 0000000c T CTRPluginFramework::Sound::Sound()
07043b1c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07043b1c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07043b30 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07043b30 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07043b64 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07043bf4 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
07043c64 00000058 T CTRPluginFramework::Sound::~Sound()
07043c64 00000058 T CTRPluginFramework::Sound::~Sound()
07043cbc 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07043cd4 00000040 T CTRPluginFramework::Sound::Play(int, int)
07043d14 00000008 T CTRPluginFramework::Sound::Play(int)
07043d1c 00000008 T CTRPluginFramework::Sound::Play()
07043d24 00000384 t cwav_initialize
070440a8 000000f4 t cwav_stopImpl.part.0
0704419c 00000004 T cwavUseEnvironment
070441a0 00000034 T cwavSetVAToPACallback
070441d4 00000050 T cwavLoad
07044224 000004d8 T cwavPlay
070446fc 00000064 T cwavStop
07044760 00000170 T cwavFree
070448d0 0000002c W MemBlock::Create(unsigned char*, unsigned long)
070448fc 00000034 W MemPool::DelBlock(MemBlock*)
07044930 0000005c T MemPool::CoalesceRight(MemBlock*)
0704498c 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
07044a88 00000100 T MemPool::Deallocate(MemChunk const&)
07044b88 00000020 T MemPool::GetFreeSpace()
07044ba8 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07044ba8 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07044c6c 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
07044c74 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
07044c8c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07044c8c 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07044cb4 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
07044d84 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
07044e48 00000064 W CTRPluginFramework::Search::~Search()
07044e48 00000064 W CTRPluginFramework::Search::~Search()
07044eac 00000044 T CTRPluginFramework::Search32::~Search32()
07044eac 00000044 T CTRPluginFramework::Search32::~Search32()
07044ef0 00000020 T CTRPluginFramework::Search32::~Search32()
07044f10 00000024 W CTRPluginFramework::Search::~Search()
07044f34 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07044f34 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07045138 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045138 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045158 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07045158 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
070451ec 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070452f8 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
070454ac 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
070455ac 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
07045748 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07045880 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070458cc 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07045a10 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
07045b54 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07045b90 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07045bf8 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07045cd0 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07045d0c 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07045d8c 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07045e84 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07045ed0 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
070461fc 00000004 T cwav_defaultVAToPA
07046200 00000004 T cwavEnvUseEnvironment
07046204 00000008 T cwavEnvGetEnvironment
0704620c 00000004 T cwavEnvInitialize
07046210 00000004 T cwavEnvFinalize
07046214 00000014 T cwavEnvCompatibleEncoding
07046228 00000008 T cwavEnvGetChannelAmount
07046230 00000018 T cwavEnvIsChannelAvailable
07046248 000000f4 T cwavEnvPlay
0704633c 00000004 T cwavEnvChannelIsPlaying
07046340 00000004 T cwavEnvStop
07046344 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07046c64 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047574 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047e5c 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048ab0 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048f34 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070493bc 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049838 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049e60 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704aae8 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b244 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b64c 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704bd20 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704c5c4 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704ceec 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704d810 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704e5f4 00000084 W envGetHandle
0704e678 00000050 W envDestroyHandles
0704e6c8 000000a4 T errfInit
0704e76c 00000058 T errfExit
0704e7c4 0000003c T ERRF_Throw
0704e800 00000090 T ERRF_ExceptionHandler
0704e890 00000094 T fontEnsureMapped
0704e924 00000100 T fontGlyphIndexFromCodePoint
0704ea24 00000070 T fontGetCharWidthInfo
0704ea94 00000074 T osConvertVirtToPhys
0704eb08 00000054 T osGetTimeRef
0704eb5c 000000ec T osGetTime
0704ec48 0000012c T srvInit
0704ed74 00000058 T srvExit
0704edcc 000000a0 T srvGetServiceHandleDirect
0704ee6c 00000038 T srvGetServiceHandle
0704eea4 00000038 T srvPublishToSubscriber
0704eedc 0000000c T __sync_init
0704eee8 00000018 T __sync_fini
0704ef00 0000002c T syncArbitrateAddressWithTimeout
0704ef2c 0000001c T LightLock_Init
0704ef48 000000ac T LightLock_Lock
0704eff4 00000040 T LightLock_Unlock
0704f034 00000024 T RecursiveLock_Init
0704f058 00000030 T RecursiveLock_Lock
0704f088 00000078 T RecursiveLock_TryLock
0704f100 00000054 T RecursiveLock_Unlock
0704f154 00000040 T LightEvent_Init
0704f194 000000a4 T LightEvent_Clear
0704f238 00000048 T LightEvent_Pulse
0704f280 000000c8 T LightEvent_Signal
0704f348 000000a0 T LightEvent_Wait
0704f3e8 00000014 T LightSemaphore_Init
0704f3fc 00000094 T LightSemaphore_Acquire
0704f490 00000064 T LightSemaphore_Release
0704f4f4 000000b4 t mappableFindAddressWithin
0704f5a8 00000028 T mappableInit
0704f5d0 00000080 T mappableAlloc
0704f650 00000004 T mappableFree
0704f654 0000008c T acInit
0704f6e0 0000003c T acExit
0704f71c 000000a4 T amInit
0704f7c0 0000003c T amExit
0704f7fc 00000158 T aptSendCommand
0704f954 00000030 T aptHook
0704f984 00000030 T aptUnhook
0704f9b4 00000028 T APT_PrepareToCloseApplication
0704f9dc 00000048 T APT_CloseApplication
0704fa24 0000007c T APT_CheckNew3DS
0704faa0 00000048 T APT_GetSharedFont
0704fae8 000000a4 T cfguInit
0704fb8c 0000003c T cfguExit
0704fbc8 00000054 T CFGU_GetSystemLanguage
0704fc1c 000000cc T fsInit
0704fce8 0000003c T fsExit
0704fd24 000000cc T FSUSER_OpenFile
0704fdf0 000000bc T FSUSER_DeleteFile
0704feac 000000f8 T FSUSER_RenameFile
0704ffa4 000000bc T FSUSER_DeleteDirectoryRecursively
07050060 000000d4 T FSUSER_CreateFile
07050134 000000c4 T FSUSER_CreateDirectory
070501f8 000000f8 T FSUSER_RenameDirectory
070502f0 000000b4 T FSUSER_OpenDirectory
070503a4 00000094 T FSUSER_OpenArchive
07050438 00000058 T FSFILE_Read
07050490 00000060 T FSFILE_Write
070504f0 00000038 T FSFILE_GetSize
07050528 00000028 T FSFILE_SetSize
07050550 0000003c T FSFILE_Close
0705058c 00000024 T FSFILE_Flush
070505b0 00000028 T FSFILE_SetPriority
070505d8 00000050 T FSDIR_Read
07050628 0000003c T FSDIR_Close
07050664 000000f0 T gspExit
07050754 00000024 W hidShouldUseIrrst
07050778 0000018c T hidInit
07050904 000000e8 T hidExit
070509ec 000002a4 T hidScanInput
07050c90 00000010 T hidKeysHeld
07050ca0 00000010 T hidKeysDown
07050cb0 00000010 T hidKeysUp
07050cc0 00000018 T hidTouchRead
07050cd8 00000160 T irrstInit
07050e38 000000cc T irrstExit
07050f04 000000b4 T irrstScanInput
07050fb8 00000024 T irrstKeysHeld
07050fdc 0000000c T srvPmGetSessionHandle
07050fe8 000000b4 T sslcInit
0705109c 00000048 T sslcExit
070510e4 00000048 T sslcGenerateRandomData
0705112c 00000074 T rbtree_find
070511a0 00000010 T rbtree_init
070511b0 000001b0 t do_insert
07051360 00000008 T rbtree_insert
07051368 00000318 T rbtree_remove
07051680 00000090 T rbtree_rotate
07051710 00000064 T decode_utf16
07051774 0000013c T decode_utf8
070518b0 00000054 T encode_utf16
07051904 000000e0 T encode_utf8
070519e4 000000c0 T utf8_to_utf16
07051aa4 T svcQueryMemory
07051ad4 T svcExitProcess
07051adc T svcCreateThread
07051afc T svcExitThread
07051b04 T svcSleepThread
07051b0c T svcSetThreadPriority
07051b14 T svcReleaseMutex
07051b1c T svcCreateEvent
07051b30 T svcSignalEvent
07051b38 T svcClearEvent
07051b40 T svcMapMemoryBlock
07051b48 T svcUnmapMemoryBlock
07051b50 T svcCreateAddressArbiter
07051b64 T svcArbitrateAddress
07051b7c T svcArbitrateAddressNoTimeout
07051b84 T svcCloseHandle
07051b8c T svcWaitSynchronization
07051b94 T svcWaitSynchronizationN
07051bbc T svcDuplicateHandle
07051bd0 T svcGetSystemTick
07051bd8 T svcGetSystemInfo
07051bf0 T svcGetProcessInfo
07051c08 T svcConnectToPort
07051c1c T svcSendSyncRequest
07051c24 T svcOpenProcess
07051c38 T svcGetProcessId
07051c4c T svcGetThreadId
07051c60 T svcBreak
07051c68 T svcInvalidateProcessDataCache
07051c70 T svcFlushProcessDataCache
07051c78 T svcKernelSetState
07051c80 T svcQueryProcessMemory
07051ca4 0000005c T rbtree_node_next
07051d00 00000004 T operator delete(void*)
07051d04 00000004 T operator delete(void*, std::nothrow_t const&)
07051d08 00000004 T operator delete(void*, unsigned int)
07051d0c 00000004 T operator delete[](void*)
07051d10 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
07051d1c 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
07051d28 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
07051d34 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
07051d40 00000038 t (anonymous namespace)::init()
07051d78 00000024 t (anonymous namespace)::init_static_cond()
07051d9c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07051d9c 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07051dbc 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07051de8 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07051de8 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07051e08 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07051e34 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07051e34 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07051e54 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07051e80 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
07051e80 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
07051ea0 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
07051ecc 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
07051ef8 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
07051f24 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
07051f50 000001a4 T __cxa_guard_acquire
070520f4 000000b0 T __cxa_guard_release
070521a4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070521a4 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070521c4 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
070521f0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
070521f0 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07052200 00000014 T std::get_new_handler()
07052214 0000005c T operator new(unsigned int)
07052270 0000001c T operator new(unsigned int, std::nothrow_t const&)
0705228c 00000004 T operator new[](unsigned int)
07052290 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07052290 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070522b0 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070522dc 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07052414 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0705249c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070524e0 00000004 T std::type_info::~type_info()
070524e0 00000004 T std::type_info::~type_info()
070524e4 00000008 T std::type_info::__is_pointer_p() const
070524e4 00000008 T std::type_info::__is_function_p() const
070524ec 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07052500 00000014 T std::__detail::_List_node_base::_M_unhook()
07052514 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
0705256c 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
070525dc 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
07052860 0000002c T std::__throw_bad_alloc()
0705288c 0000002c T std::__throw_bad_array_new_length()
070528b8 00000040 T std::__throw_logic_error(char const*)
070528f8 00000040 T std::__throw_invalid_argument(char const*)
07052938 00000040 T std::__throw_length_error(char const*)
07052978 00000040 T std::__throw_out_of_range(char const*)
070529b8 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
070529c8 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
07052ab0 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
07052b90 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
07052bd4 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07052c28 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07052c4c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07052c70 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
07052db0 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07052e14 0000000c T std::bad_alloc::what() const
07052e20 00000020 T std::bad_alloc::~bad_alloc()
07052e20 00000020 T std::bad_alloc::~bad_alloc()
07052e40 0000002c T std::bad_alloc::~bad_alloc()
07052e6c 0000000c T std::bad_array_new_length::what() const
07052e78 00000020 T std::bad_array_new_length::~bad_array_new_length()
07052e78 00000020 T std::bad_array_new_length::~bad_array_new_length()
07052e98 0000002c T std::bad_array_new_length::~bad_array_new_length()
07052ec4 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07052f20 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07052f34 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07052f34 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07052f54 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07052f80 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07052fe4 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07053060 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07053134 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0705324c 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07053320 00000044 T __cxa_allocate_exception
07053364 0000002c T __cxa_free_exception
07053390 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07053544 T __cxa_end_cleanup
07053554 00000134 T __cxa_type_match
07053688 000000b4 T __cxa_begin_cleanup
0705373c 000000b4 T __gnu_end_cleanup
070537f0 000000cc T __cxa_begin_catch
070538bc 000000e0 T __cxa_end_catch
0705399c 00000004 T std::exception::~exception()
0705399c 00000004 T std::exception::~exception()
070539a0 00000004 T std::bad_exception::~bad_exception()
070539a0 00000004 T std::bad_exception::~bad_exception()
070539a4 0000000c T transaction clone for std::exception::what() const
070539a4 0000000c T std::exception::what() const
070539b0 0000000c T transaction clone for std::bad_exception::what() const
070539b0 0000000c T std::bad_exception::what() const
070539bc 00000018 T std::bad_exception::~bad_exception()
070539d4 0000003c t eh_globals_dtor(void*)
07053a10 00000038 T __cxa_get_globals_fast
07053a48 00000074 T __cxa_get_globals
07053abc 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
07053afc 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
07053b30 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
07053c9c 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07053cf4 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07053dcc 000006a0 T __gxx_personality_v0
0705446c 00000014 T __cxxabiv1::__terminate(void (*)())
07054480 00000018 T std::terminate()
07054498 0000000c T __cxxabiv1::__unexpected(void (*)())
070544a4 00000018 T std::unexpected()
070544bc 00000014 T std::get_terminate()
070544d0 00000014 T std::get_unexpected()
070544e4 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07054544 00000054 T __cxa_init_primary_exception
07054598 00000054 T __cxa_throw
070545ec 000000b0 T __cxa_rethrow
0705469c 00000008 T std::logic_error::what() const
0705469c 00000008 T std::runtime_error::what() const
070546a4 00000098 T std::logic_error::~logic_error()
070546a4 00000098 T std::logic_error::~logic_error()
0705473c 00000098 T std::length_error::~length_error()
0705473c 00000098 T std::length_error::~length_error()
070547d4 00000098 T std::invalid_argument::~invalid_argument()
070547d4 00000098 T std::invalid_argument::~invalid_argument()
0705486c 00000098 T std::out_of_range::~out_of_range()
0705486c 00000098 T std::out_of_range::~out_of_range()
07054904 000000a0 T std::logic_error::~logic_error()
070549a4 000000a0 T std::length_error::~length_error()
07054a44 000000a0 T std::invalid_argument::~invalid_argument()
07054ae4 000000a0 T std::out_of_range::~out_of_range()
07054b84 000000d4 T std::logic_error::logic_error(char const*)
07054b84 000000d4 T std::logic_error::logic_error(char const*)
07054c58 00000020 T std::invalid_argument::invalid_argument(char const*)
07054c58 00000020 T std::invalid_argument::invalid_argument(char const*)
07054c78 00000020 T std::length_error::length_error(char const*)
07054c78 00000020 T std::length_error::length_error(char const*)
07054c98 00000020 T std::out_of_range::out_of_range(char const*)
07054c98 00000020 T std::out_of_range::out_of_range(char const*)
07054cb8 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07054d3c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07054d40 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07054db0 0000002c T __cxa_call_terminate
07054ddc 00000150 T __cxa_call_unexpected
07054f30 0000027c T log2
070551ac 000000c0 T ceilf
07055270 0000013c T ceil
070553ac 000000c0 T floorf
07055470 00000144 T floor
070555b4 00000068 T roundf
0705561c 00000024 t with_errno
07055640 00000050 T __math_divzero
07055690 0000001c T __math_invalid
070556ac 00000044 T __popcountsi2
070556f0 00000030 T __aeabi_f2lz
070556f0 00000030 T __fixsfdi
07055720 00000040 T __aeabi_f2ulz
07055720 00000040 T __fixunssfdi
07055760 00000120 T __udivmoddi4
07055880 00000018 t selfrel_offset31
07055898 00000090 t search_EIT_table
07055928 00000040 t __gnu_unwind_get_pr_addr
07055968 0000010c t get_eit_entry
07055a74 00000088 t restore_non_core_regs
07055afc 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07055b10 00000004 t _Unwind_DebugHook
07055b14 00000064 t unwind_phase2
07055b78 00000140 t unwind_phase2_forced
07055cb8 000000a4 T __gnu_Unwind_RaiseException
07055d5c 00000028 T __gnu_Unwind_ForcedUnwind
07055d84 00000074 T __gnu_Unwind_Resume
07055df8 00000020 T __gnu_Unwind_Resume_or_Rethrow
07055e18 00000004 T _Unwind_Complete
07055e1c 00000018 T _Unwind_DeleteException
07055e34 0000006c T _Unwind_VRS_Get
07055ea0 0000002c t _Unwind_GetGR
07055ecc 0000006c T _Unwind_VRS_Set
07055f38 0000002c t _Unwind_SetGR
07055f64 000000c0 T __gnu_Unwind_Backtrace
07056024 00000410 t __gnu_unwind_pr_common
07056434 00000008 T __aeabi_unwind_cpp_pr0
0705643c 00000008 W __aeabi_unwind_cpp_pr1
07056444 00000008 W __aeabi_unwind_cpp_pr2
0705644c 00000424 T _Unwind_VRS_Pop
07056870 00000064 t next_unwind_byte
070568d4 0000002c t _Unwind_GetGR.constprop.0
07056900 00000004 t unwind_UCB_from_context
07056904 00000464 T __gnu_unwind_execute
07056d68 00000048 T __gnu_unwind_frame
07056db0 00000010 T _Unwind_GetRegionStart
07056dc0 0000001c T _Unwind_GetLanguageSpecificData
07056ddc 00000008 T _Unwind_GetDataRelBase
07056de4 00000008 T _Unwind_GetTextRelBase
07056dec 0000025c t _strtoull_l.isra.0
07057048 00000030 T _strtoull_r
07057078 00000020 T memalign
07057098 0000014c T _memalign_r
070571e4 00000014 T atexit
070571f8 000000cc T snprintf
070572c4 00000018 T isxdigit
070572dc 00000064 T sprintf
07057340 00000020 T calloc
07057360 000000c0 T _calloc_r
07057420 000000f8 T _malloc_trim_r
07057518 000002e8 T _free_r
07057800 00000018 T isspace
07057818 00000130 T strchr
07057948 000000d8 T memcmp
07057a20 00000148 T _fclose_r
07057b68 0000064c t get_arg
070581b8 00003324 T _svfprintf_r
0705b4dc 00000018 T malloc
0705b4f4 00000018 T free
0705b50c 0000079c T _malloc_r
0705bca8 00000024 T getenv
0705bccc 00000150 T memmove
0705be1c 000000a4 T _vsnprintf_r
0705bec0 00000038 T vsnprintf
0705bef8 000000c8 T _findenv_r
0705bfc0 00000018 T _getenv_r
0705bfd8 000000f4 T memset
0705c0cc 0000000c T __malloc_lock
0705c0d8 0000000c T __malloc_unlock
0705c0e4 00000090 T strlen
0705c174 0000022c T __sflush_r
0705c3a0 00000094 T _fflush_r
0705c434 000000e4 T strncmp
0705c518 00000070 T _fwalk_sglue
0705c588 00000020 T localtime
0705c5a8 000000c4 T strncpy
0705c66c 0000001c t stdio_exit_handler
0705c688 0000005c t cleanup_stdio
0705c6e4 00000154 t global_stdio_init.part.0
0705c838 0000005c T __sinit
0705c894 0000000c T __sfp_lock_acquire
0705c8a0 0000000c T __sfp_lock_release
0705c8ac 00000360 T localtime_r
0705cc0c 00000010 T ctime
0705cc1c 00000048 T strnlen
0705cc64 00000064 t sulp
0705ccc8 000013a4 T _strtod_l
0705e070 00000108 T strtof
0705e178 00000010 T _tzset_unlocked
0705e188 00000664 T _tzset_unlocked_r
0705e7ec 00000020 T realloc
0705e80c 0000012c t iso_year_adjust
0705e938 0000126c t __strftime.isra.0
0705fba4 00000030 T strftime
0705fbd4 0000000c T __gettzinfo
0705fbe0 000001d8 t _strtoul_l.isra.0
0705fdb8 00000030 T _strtoul_r
0705fde8 00000034 T strtoul
0705fe1c 00000024 T __locale_mb_cur_max
0705fe40 0000004c T time
0705fe8c 00000024 T _localeconv_r
0705feb0 00000254 T __tzcalc_limits
07060104 000000f0 T strcpy
070601f4 000000e0 T memchr
070602d4 000000f0 T __utf8_wctomb
070603c4 0000011c T memcpy
070604e0 00000084 T __libc_init_array
07060564 0000000c T __errno
07060570 00000010 T nan
07060580 0000000c T nanf
07060590 00000088 T frexp
07060618 0000012c T __smakebuf_r
07060744 000000a0 T _wcrtomb_r
070607e4 00000028 T _wcsrtombs_r
0706080c 000000b0 T __register_exitproc
070608bc 0000000c T abs
070608c8 00000044 T __sread
0706090c 00000008 T __seofread
07060914 00000068 T __swrite
0706097c 00000044 T __sseek
070609c0 00000008 T __sclose
070609c8 00000074 T siscanf
07060a3c 0000000c T __env_lock
07060a48 0000000c T __env_unlock
07060a54 000000cc T sniprintf
07060b20 0000064c t get_arg
0706116c 0000018c T __ssprint_r
070612f8 00002230 T _svfiprintf_r
07063528 00000050 t get_arg
07063578 000000e0 T _sungetc_r
07063658 0000006c T __ssrefill_r
070636c4 000000c4 T _sfread_r
07063788 000022cc T __ssvfiscanf_r
07065a54 0000000c T labs
07065a60 000000f0 t rshift
07065b50 0000089c T __gethex
070663ec 000001b4 t quorem
070665a0 00001218 T _dtoa_r
070677b8 0000004c T __match
07067804 0000029c T __hexnan
07067aa0 00000088 T _Balloc
07067b28 0000001c T _Bfree
07067b44 000000f4 T __multadd
07067c38 00000110 T __s2b
07067d48 00000060 T __hi0bits
07067da8 0000009c T __lo0bits
07067e44 000000a4 T __i2b
07067ee8 00000204 T __multiply
070680ec 00000128 T __pow5mult
07068214 00000140 T __lshift
07068354 00000058 T __mcmp
070683ac 000001fc T __mdiff
070685a8 00000068 T __ulp
07068610 000000d0 T __b2d
070686e0 00000124 T __d2b
07068804 00000078 T __ratio
0706887c 00000088 T __copybits
07068904 0000005c T __any_on
07068960 00000020 T asctime
07068980 00000268 T gmtime_r
07068be8 00000080 T asctime_r
07068c68 000004a0 T _realloc_r
07069108 0000000c T __tz_lock
07069114 0000000c T __tz_unlock
07069120 000002f8 T __utf8_mbtowc
07069418 000001b0 t _strtol_l.part.0
070695c8 00000060 T _strtol_r
07069628 00000234 t _strtoll_l.isra.0
0706985c 00000030 T _strtoll_r
0706988c 00000008 T iswspace
07069894 000000b4 T _mbrtowc_r
07069948 00000038 T iswspace_l
07069980 00000188 T _wcsnrtombs_l
07069b08 00000064 T _wcsnrtombs_r
07069b6c 000000f0 T __sccl
07069c5c 00000064 T siprintf
07069cc0 000000a8 T __submore
07069d68 00000090 T category
07069df8 0000005c T __assert_func
07069e54 0000003c T fiprintf
07069e90 0000064c t get_arg
0706a4dc 00000030 T __sprint_r
0706a50c 00002304 T _vfiprintf_r
0706c810 000000b8 t __sbprintf
0706c8c8 00000138 T __swsetup_r
0706ca00 000004b4 T __sfvwrite_r
0706ceb4 00000078 T _fstat_r
0706cf2c 0000002c T __getreent
0706cf58 00000030 T _gettimeofday_r
0706cf88 0000003c T __get_handle
0706cfc4 000000f4 T _close_r
0706d0b8 00000008 t null_write
0706d0c0 00000008 T _isatty_r
0706d0c8 00000084 T _lseek_r
0706d14c 00000080 T _read_r
0706d1cc 00000078 W _sbrk_r
0706d244 0000001c T __libc_lock_acquire
0706d260 0000001c T __libc_lock_release
0706d27c 0000001c T __libc_lock_acquire_recursive
0706d298 0000001c T __libc_lock_release_recursive
0706d2b4 00000080 T _write_r
0706d334 00000038 T __aeabi_d2lz
0706d334 00000038 T __fixdfdi
0706d370 00000040 T __aeabi_d2ulz
0706d370 00000040 T __fixunsdfdi
0706d3b0 T _fini
07071014 00000038 R vtable for CTRPluginFramework::Search
0707104c 00000023 r CTRPluginFramework::g_copyrightText
0707106f 0000001e r CTRPluginFramework::g_ctrpfText
07071090 00000014 V vtable for CTRPluginFramework::MenuItem
070710a4 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
070710b8 0000001c R vtable for CTRPluginFramework::MenuEntryTools
070710d4 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
070710f0 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
070710f8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07071100 00000038 r CTRPluginFramework::stable
07071138 00000038 r CTRPluginFramework::ktable
07071170 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07071190 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
070711b0 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
070711d0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
070711d8 0000001c R vtable for CTRPluginFramework::TouchKey
070711f4 0000001c R vtable for CTRPluginFramework::TextBox
07071210 00000a00 r font
07071c10 00000058 r CTRPluginFramework::g_OSDPattern
07071c68 0000001c R vtable for CTRPluginFramework::NumericTextBox
07071c84 0000001c R vtable for CTRPluginFramework::FloatingButton
07071ca0 0000001c R vtable for CTRPluginFramework::ComboBox
07071cbc 0000001c R vtable for CTRPluginFramework::Button
07071cd8 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07071ce0 00000040 r RegNames
07071d20 00000010 r shift_names
07071d30 00000040 r cond_names
07071d70 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
07071d8c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07071d94 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
07071d9c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07071da4 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07071db8 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07071dc4 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07071e48 00000008 R CTRPluginFramework::Time::Zero
07071e50 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
07071e6c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
07071e74 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
07071e8c 00000004 R CTRPluginFramework::Color::Turquoise
07071e90 00000004 R CTRPluginFramework::Color::SkyBlue
07071e94 00000004 R CTRPluginFramework::Color::Orange
07071e98 00000004 R CTRPluginFramework::Color::LimeGreen
07071e9c 00000004 R CTRPluginFramework::Color::ForestGreen
07071ea0 00000004 R CTRPluginFramework::Color::Gainsboro
07071ea4 00000004 R CTRPluginFramework::Color::DimGrey
07071ea8 00000004 R CTRPluginFramework::Color::DeepSkyBlue
07071eac 00000004 R CTRPluginFramework::Color::DarkGrey
07071eb0 00000004 R CTRPluginFramework::Color::Brown
07071eb4 00000004 R CTRPluginFramework::Color::BlackGrey
07071eb8 00000004 R CTRPluginFramework::Color::Green
07071ebc 00000004 R CTRPluginFramework::Color::Gray
07071ec0 00000004 R CTRPluginFramework::Color::Silver
07071ec4 00000004 R CTRPluginFramework::Color::Magenta
07071ec8 00000004 R CTRPluginFramework::Color::Cyan
07071ecc 00000004 R CTRPluginFramework::Color::Yellow
07071ed0 00000004 R CTRPluginFramework::Color::Blue
07071ed4 00000004 R CTRPluginFramework::Color::Lime
07071ed8 00000004 R CTRPluginFramework::Color::Red
07071edc 00000004 R CTRPluginFramework::Color::White
07071ee0 00000004 R CTRPluginFramework::Color::Black
07072568 00000384 r UserManualFilled15_array
070728ec 00000384 r Unsplash15_array
07072c70 00000384 r UnCheckedCheckbox_array
07072ff4 000009c4 r TrashFilled25_array
070739b8 000009c4 r Trash25_array
0707437c 00000384 r Star15_array
07074700 00000384 r Shutdown15_array
07074a84 00000384 r Settings15_array
07074e08 00000384 r Search15_array
0707518c 000009c4 r Save25_array
07075b50 00001900 r Rocket40_array
07077450 00000384 r Restart15_array
070777d4 00000384 r RAM15_array
07077b58 000009c4 r PlusFilled25_array
0707851c 000009c4 r Plus25_array
07078ee0 00000384 r More15_array
07079264 00000384 r Maintenance15_array
070795e8 000009c4 r KeyboardFilled25_array
07079fac 000009c4 r Keyboard25_array
0707a970 000009c4 r InfoFilled25_array
0707b334 000009c4 r Info25_array
0707bcf8 00000384 r HandCursor15_array
0707c07c 00000384 r Grid15_array
0707c400 000009c4 r GameControllerFilled25_array
0707cdc4 000009c4 r GameController25_array
0707d788 00000384 r GameController15_array
0707db0c 00000384 r FolderFilled_array
0707de90 00000384 r File15_array
0707e214 00000384 r EnterKeyFilled15_array
0707e598 00000384 r EnterKey15_array
0707e91c 000009c4 r EditFilled25_array
0707f2e0 000009c4 r Edit25_array
0707fca4 000009c4 r DuplicateFilled25_array
07080668 000009c4 r Duplicate25_array
0708102c 00000e10 r DefaultKeyboardCustomIcon_array
07081e3c 000009c4 r CutFilled25_array
07082800 000009c4 r Cut25_array
070831c4 00000384 r Controller15_array
07083548 00000640 r CloseWindowFilled20_array
07083b88 00000640 r CloseWindow20_array
070841c8 000009c4 r ClipboardFilled25_array
07084b8c 000009c4 r Clipboard25_array
07085550 00000384 r ClearSymbolFilled15_array
070858d4 00000384 r ClearSymbol15_array
07085c58 00000384 r CheckedCheckbox_array
07085fdc 00000384 r CapsLockOnFilled15_array
07086360 00000384 r CapsLockOn15_array
070866e4 000009c4 r AddFavoriteFilled25_array
070870a8 000009c4 r AddFavorite25_array
07087a6c 00000384 r About15_array
07087df0 00000014 r CTRPluginFramework::defaultSoundFiles
07087e04 00000038 R vtable for CTRPluginFramework::Search32
07087e3c 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07087e64 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
07087e70 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
07087e9c 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07087ea8 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07087ed4 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07087ee0 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07087f08 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07087f14 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07087f28 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
07087f3c 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
07087f50 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07087f64 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07087f88 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07087f94 00000014 R vtable for __gnu_cxx::recursive_init_error
07087fa8 00000001 R std::nothrow
07087fac 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07087fd4 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07087fe0 0000002c R vtable for __cxxabiv1::__si_class_type_info
0708800c 0000000d R typeinfo name for std::type_info
0708801c 00000008 R typeinfo for std::type_info
07088024 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07088034 00000404 R std::__detail::__prime_list
07088438 00000018 V typeinfo name for std::_Sp_make_shared_tag
07088450 0000000d R typeinfo name for std::bad_alloc
07088460 0000000c R typeinfo for std::bad_alloc
0708846c 00000014 R vtable for std::bad_alloc
07088480 00000019 R typeinfo name for std::bad_array_new_length
0708849c 0000000c R typeinfo for std::bad_array_new_length
070884a8 00000014 R vtable for std::bad_array_new_length
070884bc 00000022 R typeinfo name for __cxxabiv1::__class_type_info
070884e0 0000000c R typeinfo for __cxxabiv1::__class_type_info
070884ec 0000002c R vtable for __cxxabiv1::__class_type_info
07088518 0000000d R typeinfo name for std::exception
07088528 00000008 R typeinfo for std::exception
07088530 00000012 R typeinfo name for std::bad_exception
07088544 0000000c R typeinfo for std::bad_exception
07088550 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07088570 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07088578 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0708859c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
070885a4 00000014 R vtable for std::bad_exception
070885b8 00000010 R typeinfo name for std::logic_error
070885c8 0000000c R typeinfo for std::logic_error
070885d4 00000015 R typeinfo name for std::invalid_argument
070885ec 0000000c R typeinfo for std::invalid_argument
070885f8 00000011 R typeinfo name for std::length_error
0708860c 0000000c R typeinfo for std::length_error
07088618 00000011 R typeinfo name for std::out_of_range
0708862c 0000000c R typeinfo for std::out_of_range
07088638 00000014 R vtable for std::logic_error
0708864c 00000014 R vtable for std::invalid_argument
07088660 00000014 R vtable for std::length_error
07088674 00000014 R vtable for std::out_of_range
07088688 00000890 R __log2_data
07088f18 00000101 R _ctype_
0708901c 00000010 r zeroes.0
0708902c 00000010 r blanks.1
0708903c 00000014 r fpinan.0
07089050 00000014 r fpi.1
07089068 00000028 r tinytens
07089090 00000060 R __month_lengths
070890f0 000000fc R _C_time_locale
070891ec 00000010 r zeroes.0
070891fc 00000010 r blanks.1
0708920c 0000006c R __action_table
07089278 0000006c R __state_table
070892e4 00000100 R __chclass
070893e4 00000022 r basefix.0
07089408 00000100 R __hexdig
07089508 0000000c r p05.0
07089518 00000028 R __mprec_bigtens
07089540 000000c8 R __mprec_tens
07089608 00000024 r mon_name.0
0708962c 00000015 r day_name.1
07089644 00003528 r categories
0708cb6c 00000010 r zeroes.0
0708cb7c 00000010 r blanks.1
0708cb8c 00000080 R dotab_stdnull
0708cc0c R __tdata_align
0708cd6c R __exidx_start
0708cfb4 R __exidx_end
0708cfb4 00000004 d CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::minValue
0708cfb8 00000001 d CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::display
0708cfbc 00000004 D CTRPluginFramework::RangeWriteManager::freeAddress
0708cfc0 00000001 d CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::isFirstTime
0708cfc4 00000004 d CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::watchKind
0708cfc8 00000004 D cwavCurrentVAPAConvCallback
0708cfcc 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708cfe4 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708cffc 00000004 D CTRPluginFramework::Screenshot::Screens
0708d000 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708d004 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0708d008 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0708d00c 00000004 D CTRPluginFramework::RendererPriv::g_customColor
0708d010 000001f4 D opcode_names
0708d204 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0708d208 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708d220 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708d238 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708d250 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0708d254 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708d26c 00000004 D CTRPluginFramework::FwkSettings::Header
0708d270 00000001 D CTRPluginFramework::g_keepRunning
0708d274 00000004 D g_charPerSheet
0708d278 00000004 D UserManualFilled15
0708d27c 00000004 D Unsplash15
0708d280 00000004 D UnCheckedCheckbox
0708d284 00000004 D TrashFilled25
0708d288 00000004 D Trash25
0708d28c 00000004 D Star15
0708d290 00000004 D Shutdown15
0708d294 00000004 D Settings15
0708d298 00000004 D Search15
0708d29c 00000004 D Save25
0708d2a0 00000004 D Rocket40
0708d2a4 00000004 D Restart15
0708d2a8 00000004 D RAM15
0708d2ac 00000004 D PlusFilled25
0708d2b0 00000004 D Plus25
0708d2b4 00000004 D More15
0708d2b8 00000004 D Maintenance15
0708d2bc 00000004 D KeyboardFilled25
0708d2c0 00000004 D Keyboard25
0708d2c4 00000004 D InfoFilled25
0708d2c8 00000004 D Info25
0708d2cc 00000004 D HandCursor15
0708d2d0 00000004 D Grid15
0708d2d4 00000004 D GameControllerFilled25
0708d2d8 00000004 D GameController25
0708d2dc 00000004 D GameController15
0708d2e0 00000004 D FolderFilled
0708d2e4 00000004 D File15
0708d2e8 00000004 D EnterKeyFilled15
0708d2ec 00000004 D EnterKey15
0708d2f0 00000004 D EditFilled25
0708d2f4 00000004 D Edit25
0708d2f8 00000004 D DuplicateFilled25
0708d2fc 00000004 D Duplicate25
0708d300 00000004 D DefaultKeyboardCustomIcon
0708d304 00000004 D CutFilled25
0708d308 00000004 D Cut25
0708d30c 00000004 D Controller15
0708d310 00000004 D CloseWindowFilled20
0708d314 00000004 D CloseWindow20
0708d318 00000004 D ClipboardFilled25
0708d31c 00000004 D Clipboard25
0708d320 00000004 D ClearSymbolFilled15
0708d324 00000004 D ClearSymbol15
0708d328 00000004 D CheckedCheckbox
0708d32c 00000004 D CapsLockOnFilled15
0708d330 00000004 D CapsLockOn15
0708d334 00000004 D AddFavoriteFilled25
0708d338 00000004 D AddFavorite25
0708d33c 00000004 D About15
0708d340 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
0708d341 00000001 D CTRPluginFramework::SystemImpl::Language
0708d344 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708d35c 00000001 D CTRPluginFramework::EventManager::_refresh
0708d360 00000004 d kCount
0708d364 00000004 d kInterval
0708d368 00000004 d kDelay
0708d36c 00000004 D __cxxabiv1::__unexpected_handler
0708d370 00000004 D __cxxabiv1::__terminate_handler
0708d374 00000004 D __malloc_sbrk_base
0708d378 00000004 D __malloc_trim_threshold
0708d380 00000408 D __malloc_av_
0708d788 0000000c D __sglue
0708d794 00000008 D _tzname
0708d7a0 00000058 d tzinfo
0708d7f8 0000016c D __global_locale
0708d964 00000004 D _impure_ptr
0708d968 00000120 D _impure_data
0708da88 00000004 D environ
0708da8c 00001000 d handles
0708ea8c 0000000c d __stderr_handle
0708ea98 0000000c d __stdout_handle
0708eaa4 0000000c d __stdin_handle
0708eab0 0000008c D devoptab_list
0708eb50 d _GLOBAL_OFFSET_TABLE_
0708eb5c D __tdata_lma
0708eb68 d __frame_dummy_init_array_entry
0708eb68 D __init_array_start
0708eb68 B __preinit_array_end
0708eb68 B __preinit_array_start
0708eb68 D __tdata_lma_end
0708ebd4 d __do_global_dtors_aux_fini_array_entry
0708ebd4 D __init_array_end
0708ec34 D __bss_start__
0708ec34 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::number1
0708ec38 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcAdd
0708ec39 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcSub
0708ec3a 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcMul
0708ec3b 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcDiv
0708ec3c 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::number2
0708ec40 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::answer
0708ec44 00000014 b CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::address
0708ec58 00000004 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::address
0708ec5c 00000001 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::patched
0708ec60 00000004 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::opcode
0708ec64 00000004 b CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::menu
0708ec68 00000001 b CTRPluginFramework::getFreeMemory(CTRPluginFramework::MenuEntry*)::getFlag
0708ec6c 00000004 b CTRPluginFramework::getFreeMemory(CTRPluginFramework::MenuEntry*)::ptr
0708ec70 0000000c b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::valueHistory
0708ec7c 00000004 b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::address
0708ec80 00000004 b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::oldAddress
0708ec84 00000004 b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::maxValue
0708ec88 00000004 b guard variable for CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::valueHistory
0708ec8c 00000004 B CTRPluginFramework::Draw::posY
0708ec90 00000004 B CTRPluginFramework::Draw::posX
0708ec94 00000001 B CTRPluginFramework::RangeWriteManager::searched
0708ec98 00000004 B CTRPluginFramework::RangeWriteManager::startAddress
0708ec9c 00000004 B CTRPluginFramework::RangeWriteManager::endAddress
0708eca0 00000004 B CTRPluginFramework::RangeWriteManager::targetValue
0708eca4 00000004 B CTRPluginFramework::RangeWriteManager::writeValue
0708eca8 00000004 B CTRPluginFramework::RangeWriteManager::hits
0708ecac 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708ecb8 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708ecbc 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708ecc0 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708ecc4 0000000c b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::kInputList
0708ecd0 00000004 b guard variable for CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::kInputList
0708ecd4 00000004 b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::startAddress
0708ecd8 00000004 b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::endAddress
0708ecdc 00000004 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::byte
0708ece0 00000004 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::address
0708ece4 00000001 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::isWatched
0708ece8 00000050 B CTRPluginFramework::WatchPointManager::_singleton
0708ed38 0000005c B CTRPluginFramework::exceptionData
0708ed98 00001000 B CTRPluginFramework::stack
0708fd98 00000004 b ncsndMutex
0708fd9c 00000004 b ncsndCmdCurOff
0708fda0 00000004 b ncsndCmdStartOff
0708fda4 00000004 B ncsndSharedMem
0708fda8 00000004 B ncsndCSNDHandle
0708fdac 00000004 b ncsndRefCount
0708fdb0 00000004 B ncsndChannels
0708fdb4 00000010 B ncsndOffsets
0708fdc4 00000004 B ncsndSharedMemSize
0708fdc8 00000004 b ncsndSharedMemBlock
0708fdcc 00000001 b ncsndCookieHooked
0708fdd0 0000000c b ncsndCookie
0708fddc b saved_stack
0708fde4 00000004 b cwavListCount
0708fde8 00000004 b cwavList
0708fdec 00000004 b cwavAddedToList
0708fdf0 b completed.1
0708fdf4 b object.0
0708fe0c 00000004 b CTRPluginFramework::isReady
0708fe10 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708fe18 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708fe20 00000008 B CTRPluginFramework::Screenshot::_task
0708fe28 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708fe30 00000008 B CTRPluginFramework::Screenshot::_timer
0708fe38 00000004 B CTRPluginFramework::Screenshot::_display
0708fe3c 00000004 B CTRPluginFramework::Screenshot::_filecount
0708fe40 00000004 B CTRPluginFramework::Screenshot::_mode
0708fe44 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708fe48 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708fe50 00000008 B CTRPluginFramework::Screenshot::Timer
0708fe58 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708fe5c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708fe60 00000004 B CTRPluginFramework::ScreenImpl::Top
0708fe64 000000ac b CTRPluginFramework::_botBuf
0708ff10 000000ac b CTRPluginFramework::_topBuf
0708ffbc 00000044 b CTRPluginFramework::g_previousException
07090000 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
07090004 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
07090008 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
07090010 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0709001c 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
07090028 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
07090038 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0709003c 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
070900a0 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
070900a4 00000004 B CTRPluginFramework::ProcessImpl::MainThread
070900a8 00000008 B CTRPluginFramework::ProcessImpl::TitleId
070900b0 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
070900b4 00000004 B CTRPluginFramework::ProcessImpl::Status
070900b8 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
070900bc 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
070900c0 00000004 B CTRPluginFramework::_pool
070900c4 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070900c8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
070900d0 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070900d8 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
070900e0 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070900e4 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
070900ec 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
070900f0 00000004 b CTRPluginFramework::g_screenshotEntry
070900f4 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
070900f8 00000004 b CTRPluginFramework::g_OpenFileLock
070900fc 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
07090100 00000040 b CTRPluginFramework::g_hookExportFile
07090140 00000004 b CTRPluginFramework::g_HookMode
07090144 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
07090148 00000008 b CTRPluginFramework::g_textXpos
07090150 00000004 b CTRPluginFramework::g_mode
07090154 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07090158 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
07090164 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
07090168 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0709016c 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
07090170 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07090178 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07090180 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07090188 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07090190 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07090194 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0709019c 00000004 b CTRPluginFramework::g_radioId
070901a0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
070901a4 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070901a8 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
070901b0 00000004 b CTRPluginFramework::__pmARinstance
070901b4 00000004 B CTRPluginFramework::MenuItem::_uidCounter
070901b8 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
070901bc 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
070901c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070901c8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
070901d0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070901d4 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
070901e4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070901e8 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
070901f0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
070901f4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
07090204 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07090208 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07090218 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0709021c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0709022c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07090230 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07090240 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07090244 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07090254 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
07090260 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0709026c 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
07090278 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0709027c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0709028c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
07090290 00000004 B CTRPluginFramework::__g_hexEditor
07090294 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07090298 00000010 b CTRPluginFramework::GuideReader::Draw()::background
070902a8 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070902b0 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
070902c0 00000001 b CTRPluginFramework::g_progressLoop
070902c4 00000004 b CTRPluginFramework::__converter
070902c8 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
070902d8 00000028 B CTRPluginFramework::Window::TopWindow
07090300 00000028 B CTRPluginFramework::Window::BottomWindow
07090328 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0709032c 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07090338 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0709033c 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07090340 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
07090348 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
07090349 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0709034c 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
07090358 00000050 b CTRPluginFramework::g_fpsCounter
070903a8 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
070903b0 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
070903b8 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
070903c0 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
070903c8 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
070903d0 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
070903d1 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
070903d2 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
070903d4 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
070903f4 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
07090400 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0709040c 0000000c B CTRPluginFramework::OSDImpl::Notifications
07090418 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0709043c 0000000c B CTRPluginFramework::OSDImpl::RecLock
07090448 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07090460 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07090478 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0709047c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07090480 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
07090484 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
07090488 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
070904a4 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
070904a8 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
070904ac 0000000c B CTRPluginFramework::Font::_mutex
070904b8 00000004 B CTRPluginFramework::g_glyphAllocated
070904bc 00000004 B CTRPluginFramework::g_fontAllocated
070904c0 00000004 b CTRPluginFramework::g_context
070904c4 00000001 b CTRPluginFramework::ToggleFloat
070904c5 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
070904c8 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
070904cc 00000004 B CTRPluginFramework::ARHandler::ActiveData
070904d0 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
070904d4 00000008 B CTRPluginFramework::ARHandler::Storage
070904dc 00000010 B CTRPluginFramework::ARHandler::Data
070904ec 00000008 B CTRPluginFramework::ARHandler::Offset
070904f8 00000fa0 b CTRPluginFramework::arStack
07091498 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
0709149c 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
070914a8 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070914ac 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
070914b8 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
070914b9 00000001 b CTRPluginFramework::g_newCondDataToggle
070914ba 00000001 b CTRPluginFramework::g_condAgainstData
070914bc 00000004 b CTRPluginFramework::__arCodeEditor
070914c0 0000000c B CTRPluginFramework::g_codeTypes
070914cc 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
070914cd 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
070914d0 000000a8 B CTRPluginFramework::Preferences::Settings
07091578 00000008 B CTRPluginFramework::Preferences::Backlights
07091580 00000008 B CTRPluginFramework::Preferences::Flags
07091588 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0709158c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07091590 000009c4 b CTRPluginFramework::g_rng
07091f54 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
07091f58 00000004 B CTRPluginFramework::System::OnAbort
07091f5c 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
07091f60 00000004 B CTRPluginFramework::Process::OnPauseResume
07091f64 00000004 B CTRPluginFramework::Process::exceptionCallback
07091f68 00000004 B CTRPluginFramework::Controller::_keysReleased
07091f6c 00000004 B CTRPluginFramework::Controller::_keysHeld
07091f70 00000004 B CTRPluginFramework::Controller::_keysDown
07091f74 00000004 b CTRPluginFramework::g_runningInstance
07091f78 0000001c b CTRPluginFramework::g_dummy
07091f94 00000180 b CTRPluginFramework::g_keyName
07092114 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07092118 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0709211c 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
0709211e 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07092120 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
0709213c 00000004 b g_onLoadCroLock
07092140 00000004 b g_onSharedMemMapHook
07092144 00000004 b g_onLoadCroHook
07092148 00000008 b CTRPluginFramework::g_mainThread
07092150 00000004 B CTRPluginFramework::g_keepEvent
07092154 00000004 B CTRPluginFramework::g_keepThreadHandle
07092158 00000004 B CTRPluginFramework::g_continueGameEvent
07092160 00000008 B CTRPluginFramework::_sdmcArchive
07092168 00001000 b CTRPluginFramework::keepThreadStack
07093168 00000004 b g_mainThreadVars
0709316c 00000001 b properInit
0709316d 00000001 b fakeInit
07093170 00000004 b plgLdrRefCount
07093174 00000004 b plgReply
07093178 00000004 b plgEvent
0709317c 00000004 b plgLdrArbiter
07093180 00000004 b plgLdrHandle
07093184 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
07093188 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
0709318c 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
07093194 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
0709319c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
070931a0 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
070931a8 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
070931b0 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
070931b8 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
070931bc 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
070931c0 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
070931c4 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
070931c8 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
070931cc 00000008 b CTRPluginFramework::g_sleepEvent
070931d4 00000004 B CTRPluginFramework::SystemImpl::AptStatus
070931d8 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
070931dc 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
070931e0 00000001 B CTRPluginFramework::SystemImpl::IsCitra
070931e1 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
070931e2 00000001 B _g_isCitra
070931e4 000000a8 B CTRPluginFramework::Scheduler::_singleton
0709328c 0000001c B CTRPluginFramework::HookManager::_singleton
070932a8 00000008 b CTRPluginFramework::Heap::g_heapPool
070932b0 0000000c b CTRPluginFramework::Heap::_mutex
070932bc 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
070932c0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
070932c4 0000000c b sAddrMap
070932d0 0000000c B CTRPluginFramework::FSPath::FSMutex
070932dc 00000004 B CTRPluginFramework::EventManager::_firstTouch
070932e0 00000001 B CTRPluginFramework::EventManager::_isTouching
070932e4 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
070932e8 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
070932f4 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
070932f8 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07093308 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0709330c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
0709331c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
07093320 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
07093330 00000018 b __threads
07093348 0000000c b __mutex
07093354 00000004 b errfRefCount
07093358 00000004 b errfHandle
0709335c 00000004 b sharedFontAddr
07093360 00000004 B g_sharedFont
07093364 00000004 b srvRefCount
07093368 00000004 b srvHandle
0709336c 00000004 b arbiter
07093370 00000004 b currentAddr
07093374 00000004 b maxAddr
07093378 00000004 b minAddr
0709337c 00000004 b acRefCount
07093380 00000004 b acHandle
07093384 00000004 b amRefCount
07093388 00000004 b amHandle
0709338c 00000001 b flagValue.0
0709338d 00000001 b flagInit.1
07093390 00000004 b serviceName.6
07093394 0000000c b aptFirstHook
070933a0 00000004 b aptLockHandle
070933a4 00000004 b cfguRefCount
070933a8 00000004 b cfguHandle
070933b0 00000080 b fsExemptArchives
07093430 00000004 b fsuRefCount
07093434 00000004 b fsuHandle
07093438 00000001 b gspRunEvents
0709343c 00000004 b gspEventThread
07093440 00000004 b gspEvent
07093444 00000001 b gspGpuRight
07093448 00000004 b gspSharedMem
0709344c 00000004 b gspSharedMemHandle
07093450 00000004 b gspRefCount
07093454 00000004 b gspGpuHandle
07093458 00000001 b usingIrrst
0709345c 00000004 b hidRefCount
07093460 00000006 b gRate
07093468 00000006 b aVec
07093470 00000004 b cPos
07093474 00000004 b tPos
07093478 00000004 b kRepeat
0709347c 00000004 b kUp
07093480 00000004 b kDown
07093484 00000004 b kHeld
07093488 00000004 b kOld
0709348c 00000004 B hidSharedMem
07093490 00000014 B hidEvents
070934a4 00000004 B hidMemHandle
070934a8 00000004 B hidHandle
070934ac 00000004 b irrstRefCount
070934b0 00000004 b csPos
070934b4 00000004 b kHeld
070934b8 00000004 B irrstSharedMem
070934bc 00000004 B irrstEvent
070934c0 00000004 B irrstMemHandle
070934c4 00000004 B irrstHandle
070934c8 00000004 b srvPmHandle
070934cc 00000004 b __sslc_refcount
070934d0 00000004 B __sslc_servhandle
070934d4 00000004 V __ctru_heap_size
070934d8 00000004 B __ctru_linear_heap
070934dc 00000004 B __ctru_heap
070934e0 00000004 b (anonymous namespace)::get_static_cond()::once
070934e8 00000008 b (anonymous namespace)::fake_cond
070934f0 00000004 b (anonymous namespace)::static_cond
070934f4 00000004 b (anonymous namespace)::get_static_mutex()::once
070934f8 00000010 b (anonymous namespace)::fake_mutex
07093508 00000004 b (anonymous namespace)::static_mutex
0709350c 00000004 b (anonymous namespace)::__new_handler
07093510 0000001c b (anonymous namespace)::emergency_pool
0709352c 00000004 b init
07093530 00000001 B __eh_globals_init::_S_init
07093534 0000000c b (anonymous namespace)::eh_globals
07093540 00000010 V std::string::_Rep::_S_empty_rep_storage
07093550 00000028 B __malloc_current_mallinfo
07093578 00000004 B __malloc_max_total_mem
0709357c 00000004 B __malloc_max_sbrked_mem
07093580 00000004 B __malloc_top_pad
07093584 0000000c b __malloc_recursive_mutex
07093590 0000000c b __sfp_recursive_mutex
070935a0 00000168 B __sf
07093708 00000004 B __stdio_exit_handler
0709370c 00000004 b prev_tzenv
07093710 0000000c b __tzname_dst
0709371c 0000000c b __tzname_std
07093728 00000004 B _timezone
0709372c 00000004 B _daylight
07093730 00000190 B __atexit0
070938c0 00000004 B __atexit
070938c4 0000000c B __atexit_recursive_mutex
070938d0 00000004 b initial_env
070938d4 0000000c b __env_recursive_mutex
070938e0 00000004 b __tz_mutex
070938e4 00000004 b __hndl_lock
070938e8 00000004 B fake_heap_start
070938ec 00000004 B fake_heap_end
070938f0 00000004 b heap_start.0
070938f4 B __tls_start
07093920 B __bss_end__
07093920 A __end__
07093920 B __tls_end
