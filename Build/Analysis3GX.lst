00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000001 b __tls_guard
00000018 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000028 00000001 B CTRPluginFramework::PrivColor::_useClamp
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700133c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700133c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001378 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070013f8 000004ec T CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)
070018e4 0000007c t CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07001960 00000164 t CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07001ac4 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
07001af0 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07001b20 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07001b60 0000006c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07001bcc 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07001c78 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001cfc 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07001d58 00000140 T CTRPluginFramework::calcBranch(CTRPluginFramework::MenuEntry*)
07001e98 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07001e98 00000098 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::initializer_list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07001f30 0000013c T CTRPluginFramework::rangeWrite(CTRPluginFramework::MenuEntry*)
0700206c 00000338 T CTRPluginFramework::getFreeMemory(CTRPluginFramework::MenuEntry*)
070023a4 000003e4 T CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)
07002788 00000164 T CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)
070028ec 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
070028ec 00000020 W std::vector<unsigned long, std::allocator<unsigned long> >::~vector()
0700290c 00000014 t __tcf_0
07002920 000000c8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
070029e8 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07002a24 00000054 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07002a24 00000054 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
07002a78 000001d8 t CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07002c50 000000d0 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_assign_aux<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
07002d20 0000058c T CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)
070032ac 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07003330 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070033a0 00000070 T CTRPluginFramework::ErrorMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07003410 00000054 T CTRPluginFramework::ConfMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07003464 0000007c T CTRPluginFramework::AccessCheck(unsigned long&)
070034e0 00000090 T CTRPluginFramework::VectorU32ToString(std::vector<unsigned long, std::allocator<unsigned long> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::WriteMode)
07003570 0000003c T CTRPluginFramework::isCovered(std::vector<unsigned long, std::allocator<unsigned long> >, unsigned long)
070035ac 00000014 T CTRPluginFramework::GetBranch(unsigned long, unsigned long)
070035c0 00000064 T CTRPluginFramework::Draw::DrawTopScr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, int)
07003624 00000014 T CTRPluginFramework::Draw::DrawPosition(int, int)
07003638 000003cc T CTRPluginFramework::RangeWriteManager::SearchWrite()
07003a04 000000c4 T CTRPluginFramework::RangeWriteManager::ReturnWrite()
07003ac8 00000070 T CTRPluginFramework::RangeWriteManager::FreeAddressConf()
07003b38 00000018 t __tcf_0
07003b50 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07003bd4 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07003c44 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07003d28 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07003f08 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07003f0c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07003f7c 00000720 T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
070046a0 00000268 T CTRPluginFramework::main()
07004908 0000003c t __tcf_0
07004944 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070049c8 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07004a38 00000080 T CTRPluginFramework::getFilePath[abi:cxx11]()
07004ab8 00000028 T CTRPluginFramework::fileDelete(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07004ae0 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07004b34 00000254 T CTRPluginFramework::fileWriter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&, unsigned long&)
07004d88 0000080c T CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)
07005594 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07005618 00000230 t CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07005848 00000170 T CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)
070059b8 00000008 t CTRPluginFramework::GetWFAR()::{lambda()#1}::_FUN()
070059c0 00000008 t CTRPluginFramework::GetDSCR()::{lambda()#1}::_FUN()
070059c8 00000008 t CTRPluginFramework::WatchPointManager::Initialize()::{lambda()#1}::_FUN()
070059d0 0000009c T CTRPluginFramework::WatchPointManager::Initialize()
07005a6c 0000010c T CTRPluginFramework::WatchPointManager::SetWatchPoint(unsigned long, unsigned long, unsigned long)
07005b78 00000090 T CTRPluginFramework::WatchPointManager::DisableWatchPoint(unsigned long)
07005c08 00000144 W void std::vector<CTRPluginFramework::WatchPointHit, std::allocator<CTRPluginFramework::WatchPointHit> >::_M_realloc_insert<unsigned long&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::WatchPointHit*, std::vector<CTRPluginFramework::WatchPointHit, std::allocator<CTRPluginFramework::WatchPointHit> > >, unsigned long&)
07005d4c 0000007c T CTRPluginFramework::WatchPoint::GetHitData(unsigned long)
07005dc8 00000114 T CTRPluginFramework::WatchPointManager::HandleException(ERRF_ExceptionInfo*, CpuRegisters*)
07005edc 0000003c T CTRPluginFramework::__ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07005f18 00000070 t _GLOBAL__sub_I__ZN18CTRPluginFramework17WatchPointManager10_singletonE
07005f88 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework17WatchPointManager10_singletonE
07005fd4 T svcCustomBackdoor
07005fdc T svcConvertVAToPA
07005fe4 T svcFlushDataCacheRange
07005fec T svcInvalidateEntireInstructionCache
07005ff4 T svcMapProcessMemoryEx
07006008 T svcUnmapProcessMemoryEx
07006010 T svcControlProcess
07006018 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
07006254 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070062ac 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
070062c0 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
070062e8 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
07006304 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
0700632c 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
07006354 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07006400 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
070064f8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07006588 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
07006808 00000048 T CTRPluginFramework::Screenshot::Initialize()
07006850 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
07006bc4 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07006c54 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
07006f54 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07006f90 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
07007064 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
07007088 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07007088 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070070f8 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
070071f8 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07007248 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07007328 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
07007384 00000028 T CTRPluginFramework::ScreenImpl::Release()
070073ac 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
0700741c 00000040 T CTRPluginFramework::ScreenImpl::Flush()
0700745c 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
070074f4 00000044 T CTRPluginFramework::ScreenImpl::Copy()
07007538 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07007604 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0700760c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07007668 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
070076b8 0000003c T CTRPluginFramework::ScreenImpl::Clean()
070076f4 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07007780 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
070077f0 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07007820 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07007880 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07007894 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
070078b0 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
070078cc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
070078d4 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
070078dc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
070078e4 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07007900 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
0700791c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07007970 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
0700799c 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
070079f4 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07007a50 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07007a9c 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07007b30 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
07007b6c 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
07007ba4 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07007c08 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
07007c78 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07007d0c 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
07007db4 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
07007dec 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
07007e08 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07007e20 t _store_reg_loop
07007e40 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07007e4c 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07007e4c 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07007e74 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07007f60 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
07007f9c 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
07008058 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
0700847c 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
070084e8 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
070085c8 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
070085d4 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07008608 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07008614 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700862c 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
0700866c 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
070086b0 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
070086c0 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
070086d4 00000004 T Kernel::Initialize()
070086d8 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
070086f0 0000000c T KProcess::GetCurrent()
070086fc 00000024 T KProcess::PatchCore2Access()
07008720 0000002c T KProcess::PatchCategory(unsigned long)
0700874c 00000014 T KProcess__PatchCategory
07008760 0000002c T KProcess::PatchMaxPriority(unsigned long)
0700878c 00000014 T KProcess__PatchMaxPriority
070087a0 00000028 T KProcess::PatchMaxThreads()
070087c8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
070087c8 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07008858 00000044 T CTRPluginFramework::Search::UpdateProgress()
0700889c 00000048 T CTRPluginFramework::Search::Cancel()
070088e4 00000184 T CTRPluginFramework::Search::CheckNextRegion()
07008a68 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07008ac0 0000015c W std::__cxx11::to_string(unsigned long)
07008c1c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07008c9c 00000008 T CTRPluginFramework::Search::GetHeader() const
07008ca4 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07008cec 0000000c T CTRPluginFramework::Search::GetType() const
07008cf8 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07008d10 00000070 T CTRPluginFramework::Search::WriteHeader()
07008d80 00000058 T CTRPluginFramework::Search::WriteResults()
07008dd8 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07008e20 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07008e20 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07008e80 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
07008f6c 00000084 T CTRPluginFramework::Search::CreateIndexTable()
07008ff0 0000013c T CTRPluginFramework::Search::ExecuteSearch()
0700912c 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070091a4 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
070091d8 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070091d8 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070093c8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
07009414 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07009414 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07009664 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07009890 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070098e8 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07009928 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
070099dc 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07009a34 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07009a68 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07009ae8 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07009ae8 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07009b7c 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07009b7c 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07009c1c 00000198 T CTRPluginFramework::SearchMenu::Update()
07009db4 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07009f40 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
07009fbc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009fbc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700a028 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0700a078 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
0700a120 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0700a27c 0000014c T CTRPluginFramework::SearchMenu::_Export()
0700a3c8 000005b8 T CTRPluginFramework::SearchMenu::Draw()
0700a980 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
0700aaa0 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0700afb8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0700afcc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0700afe0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0700aff4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0700aff8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0700affc 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0700b024 000000bc t __tcf_1
0700b0e0 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0700b120 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700b178 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700b1b8 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
0700b1dc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0700b1f0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0700b204 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0700b218 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0700b22c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0700b240 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0700b254 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0700b268 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0700b27c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0700b290 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0700b3e0 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0700b52c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0700b56c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700b5ec 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0700b76c 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700b82c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0700b890 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
0700c3bc 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c43c 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0700c4a4 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0700c5ac 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700c5ac 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700c73c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700c7e8 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0700c858 00000114 W std::__cxx11::to_string(int)
0700c96c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c97c 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700cb0c 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700cc78 00000048 t CTRPluginFramework::Reboot()
0700ccc0 00000054 t CTRPluginFramework::Shutdown()
0700cd14 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700ce50 000001fc t CTRPluginFramework::UpdateScreenshotText()
0700d04c 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
0700d4ac 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0700d5dc 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0700d740 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700d774 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0700d7b8 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0700de14 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700de34 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700de7c 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0700deb8 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700dec8 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0700def4 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700def4 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700df1c 00000024 W CTRPluginFramework::File::~File()
0700df1c 00000024 W CTRPluginFramework::File::~File()
0700df40 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700df40 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700df78 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700df98 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700df98 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700e0a0 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0700e0a8 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0700e0c8 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700e258 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0700e278 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0700e294 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0700e2b0 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0700e2c0 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0700e2c8 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
0700e2d0 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0700e2d8 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0700e2e0 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700e2e0 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700e308 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700e308 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700e330 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700e330 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700e358 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0700e490 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0700e4cc 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700e4cc 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700e51c 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0700e620 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
0700ed70 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0700edc0 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0700ee60 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700ef64 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0700f0fc 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0700f21c 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700f3c0 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0700f408 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0700f4b8 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0700f4f4 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700f628 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700f768 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700f774 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700f788 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700f788 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700f92c 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700f92c 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700faf0 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0700fb48 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700fc08 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700fcf4 000000bc t __tcf_1
0700fdb0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700fe08 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0700fe14 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0701013c 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
07010270 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
07010708 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
07010820 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
070108b0 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
070108e8 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
07010914 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
07010a00 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07010a84 00000080 T CTRPluginFramework::PluginMenuHome::Init()
07010b04 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07010b60 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
07010c20 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07010c20 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070110cc 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
070111fc 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0701124c 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
070112d8 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07011684 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
070118a8 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
070118cc 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07011930 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07011994 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07011994 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
070119d0 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
07011b08 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07011c84 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
07011cdc 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07011e70 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07011e88 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
07012048 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
07012130 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
070122f0 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
070123d8 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07012460 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07012474 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07012498 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070124f0 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07012530 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07012570 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
070125c4 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
070125e8 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07012610 00000030 W CTRPluginFramework::ARCode::~ARCode()
07012610 00000030 W CTRPluginFramework::ARCode::~ARCode()
07012640 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07012640 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
070126fc 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07012730 00000014 t __tcf_1
07012744 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070127c4 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
070128e4 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
070129c8 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07012a24 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
07012b9c 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
07012cb8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07012cb8 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07012f0c 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
070130d8 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070131dc 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07013354 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07013474 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
070134b0 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
070135fc 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07013700 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
0701396c 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07013a38 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
07013bf4 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07013d94 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07013da4 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
07013db4 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
07013dc4 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
07013dcc 00000024 t std::_Vector_base<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
07013df0 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07013df0 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
07013e20 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
07013e40 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013e40 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013f24 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013f44 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07013f54 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07013fa4 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
07013fbc 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
07013fe0 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
07014090 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
070140a0 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070140c0 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
070141a8 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
07014200 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014200 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070142d4 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
070142f4 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
070142f4 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07014314 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07014334 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
0701438c 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0701438c 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07014410 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014410 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014470 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07014470 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070144d0 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
070144d4 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
070144e8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07014540 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07014540 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07014568 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07014588 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07014590 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
070145a4 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
070145b0 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
070145b8 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
070145dc 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
0701460c 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07014628 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07014690 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07014690 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701477c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701477c 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0701486c 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
07014a70 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07014aac 00000058 T CTRPluginFramework::Menu::CloseAll()
07014b04 00000030 T CTRPluginFramework::Menu::~Menu()
07014b04 00000030 T CTRPluginFramework::Menu::~Menu()
07014b34 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
07014b40 00000008 T CTRPluginFramework::Menu::GetFolder() const
07014b48 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
07014b50 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
07014b94 000003b4 T CTRPluginFramework::Menu::Draw() const
07014f48 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
07014fe0 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
07015078 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
070152c0 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0701542c 00000068 T CTRPluginFramework::Menu::ShowNote()
07015494 00000008 T CTRPluginFramework::Menu::CloseNote()
0701549c 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
070154a4 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
070154a4 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07015588 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07015588 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
070156b4 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07015708 00000044 T CTRPluginFramework::Menu::Pop()
0701574c 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07015800 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07015858 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07015880 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
070158b8 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
070158f8 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
0701590c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0701590c 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07015988 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07015990 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07015998 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
070159a0 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
070159a8 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
070159b0 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
070159b8 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07015a14 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
07015be0 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070160c0 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07016284 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
070162c4 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701632c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070163bc 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
0701643c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
070164c0 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0701661c 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
07016788 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
070167e8 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
0701685c 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07016904 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07016e20 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07016e28 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07016e28 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07016e50 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
07016ec4 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07016f24 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07017010 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
0701703c 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07017124 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
07017150 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07017410 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07017474 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
070174d4 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07017528 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701757c 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
070175d4 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070176c8 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0701771c 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07017e30 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
07017eac 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07017ee0 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017ee0 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070180b8 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070180b8 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07018280 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
070182ac 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
070183c4 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
0701849c 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701856c 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
0701863c 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
07018ef8 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07019004 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07019110 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
070192b8 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
07019300 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07019354 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07019da8 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
0701a324 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0701a8a0 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
0701a8e0 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0701a930 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0701adcc 00000368 T CTRPluginFramework::KeyboardImpl::Run()
0701b134 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701b134 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701b16c 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0701b198 00000030 t CTRPluginFramework::GetIndex(int)
0701b1c8 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701b2fc 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0701b370 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701b370 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701b3dc 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0701b470 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0701b63c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701b668 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701b668 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701b6a0 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0701b7b0 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0701b7ec 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b7ec 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701b948 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701b948 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701b94c 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701b94c 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701b950 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701b950 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701b954 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701b96c 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701b984 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701b99c 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701bb38 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701bc74 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701bd68 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0701bda8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701be00 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701be40 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
0701be40 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
0701bf8c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701bfa8 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701bfc4 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701c038 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
0701c064 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701c0a0 00000010 T CTRPluginFramework::HexEditor::Refresh()
0701c0b0 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701c0f4 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701c12c 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701c158 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701c1d8 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701c26c 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701c338 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701c3f8 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701c4a8 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701c65c 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701c66c 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701c67c 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701c68c 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0701c6cc 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
0701c738 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701c80c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701c864 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701c8e8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701c8e8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701cae8 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701ccb0 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701cd94 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
0701ce4c 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701d0ac 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701d230 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701d2c0 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701d570 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701d7e0 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701d9c0 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701da20 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
0701dba4 000001c8 T CTRPluginFramework::HexEditor::_Update()
0701dd6c 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701dff8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701e050 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701e090 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0701e108 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701e168 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0701e1c4 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0701e21c 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701e560 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701e560 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701e748 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
0701e81c 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701ebf4 0000015c T CTRPluginFramework::GuideReader::Draw()
0701ed50 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701edc4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701ee1c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701ee1c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701ee68 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0701ef18 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0701efb0 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0701f0a0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701f120 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0701f480 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0701f5bc 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0701f5e4 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0701f698 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0701f6c8 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0701f718 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701f784 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0701fa04 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0701fd30 000000e4 T CTRPluginFramework::Converter::Converter()
0701fd30 000000e4 T CTRPluginFramework::Converter::Converter()
0701fe14 00000010 T CTRPluginFramework::Converter::Instance()
0701fe24 00000110 T CTRPluginFramework::Converter::_Draw()
0701ff34 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
0702015c 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
07020374 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
070203a0 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
070203dc 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
07020418 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
07020454 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
07020490 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
070204cc 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
070204f8 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
07020534 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
07020570 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
070205ac 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
070205e8 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
07020614 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
07020650 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0702067c 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
070206a8 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
070206d4 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
07020710 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0702073c 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
07020778 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
070207a4 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
070207d8 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
07020814 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
07020840 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0702087c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
070208a8 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
070208d4 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
07020900 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0702092c 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
07020958 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
07020984 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
070209b0 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
070209dc 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07020a18 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07020a44 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07020a60 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07020a94 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07020a94 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07020b50 00000028 T CTRPluginFramework::Window::~Window()
07020b50 00000028 T CTRPluginFramework::Window::~Window()
07020b78 00000064 T CTRPluginFramework::Window::Draw() const
07020bdc 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07020cb8 00000018 T CTRPluginFramework::Window::DrawButton() const
07020cd0 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
07020ce8 00000018 T CTRPluginFramework::Window::MustClose() const
07020d00 00000028 T CTRPluginFramework::Window::Close() const
07020d28 00000004 T CTRPluginFramework::Window::GetRect() const
07020d2c 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07020d60 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
07020de0 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
07020e00 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07020e00 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07020e14 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07020e14 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07020e3c 00000024 T CTRPluginFramework::UIContainer::Draw()
07020e60 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07020e94 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
07020f7c 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
07020fb0 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07020fb0 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07021024 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0702102c 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07021060 000000cc T CTRPluginFramework::TouchKeyString::Draw()
0702112c 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07021214 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0702122c 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07021240 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07021258 00000048 T CTRPluginFramework::TouchKeyString::operator()()
070212a0 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
070212a8 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
070212a8 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07021354 00000008 W CTRPluginFramework::Drawable::operator()()
0702135c 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07021440 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07021498 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07021498 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07021524 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07021524 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
070215dc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
070215dc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07021668 0000004c T CTRPluginFramework::TouchKey::Clear()
070216b4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070216b4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070216d4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
070216f4 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
070216fc 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
07021704 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07021774 00000070 T CTRPluginFramework::TouchKey::Draw()
070217e4 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
070217ec 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
070218d4 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070218d4 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070219a8 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
070219a8 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07021a78 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07021be0 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07021be4 000002fc T CTRPluginFramework::TextBox::Draw()
07021ee0 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
07021f0c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07021f64 00000094 T CTRPluginFramework::TextBox::TextBox()
07021f64 00000094 T CTRPluginFramework::TextBox::TextBox()
07021ff8 0000000c T CTRPluginFramework::TextBox::Open() const
07022004 0000000c T CTRPluginFramework::TextBox::Close() const
07022010 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07022018 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07022240 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0702224c 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
070222e0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07022394 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
070223e4 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07022484 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
070226c0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
070226c0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07022844 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070229a4 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
07022ad0 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
07022bec 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07022d90 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07022f58 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07022fbc 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
070231f4 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
0702379c 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
07023c20 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07023c94 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
07023d04 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07023d88 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
07023f08 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070240fc 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0702419c 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07024388 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
070243b8 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07024528 00000020 t __tcf_1
07024548 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
07024734 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
070248d8 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
070249ec 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07024a80 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07024b24 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07024ddc 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
07024e2c 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07024f30 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07024f70 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0702560c 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070257a4 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
070257f0 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
07025ab8 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
07025b7c 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
07025cc8 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
07025ce8 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
07025d08 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07025d34 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07025d68 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07025d90 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
07025db8 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
07025dd8 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
07025e08 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07025e50 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07025e94 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
07025fd8 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
07026004 00000040 t __tls_init
07026004 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07026044 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07026090 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702612c 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070261c0 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07026270 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702632c 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
070263e8 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
0702643c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07026448 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07026464 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07026470 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07026558 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
070266ec 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07026798 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
070267c8 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
070268a4 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07026938 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
0702699c 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07026a48 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07026a78 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
07026a88 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
07026bf8 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
07026c50 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07026c50 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07026d80 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
07026e60 000000d0 T CTRPluginFramework::InstallOSD()
07026f30 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
07026fdc 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07026fdc 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
07027004 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070270b8 000001a4 T CTRPluginFramework::OSDImpl::Update()
0702725c 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
070272b4 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0702737c 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
0702795c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
070279e8 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
07027a7c 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
07027aec 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07027b68 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027b68 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027b88 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027ba8 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07027c40 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07027c78 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
07027cd8 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
07027ce8 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
07027cf0 0000000c T CTRPluginFramework::NumericTextBox::Clear()
07027cfc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07027cfc 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07027d64 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
07027e58 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07027e68 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
07027edc 00000024 t fontGetSystemFont
07027f00 00000010 T CTRPluginFramework::Glyph::Width() const
07027f10 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
070283f4 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07028740 000000c4 T CTRPluginFramework::Font::Initialize()
07028804 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07028820 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
070289ac 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07028a74 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07028ba0 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
07028c2c 00000020 T CTRPluginFramework::Font::GetGlyph(char)
07028c4c 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07028c94 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
07028d0c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07028d0c 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07028d10 00000014 T CTRPluginFramework::FloatingButton::Draw()
07028d24 00000014 T CTRPluginFramework::FloatingButton::operator()()
07028d38 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07028d50 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
07028ee8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028ee8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028f28 00000094 T CTRPluginFramework::ComboBox::Draw()
07028fbc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
07029034 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07029034 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07029088 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
070290a8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070290a8 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070290f4 0000003c T CTRPluginFramework::ComboBox::Clear()
07029130 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070291b0 000000a8 T CTRPluginFramework::ComboBox::operator()()
07029258 000000e8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029340 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029390 0000015c T CTRPluginFramework::Button::Draw()
070294ec 00000070 T CTRPluginFramework::Button::operator()()
0702955c 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
070296e0 00000038 T CTRPluginFramework::Button::~Button()
070296e0 00000038 T CTRPluginFramework::Button::~Button()
07029718 00000020 T CTRPluginFramework::Button::~Button()
07029738 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07029738 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070298cc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070298cc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
070298ec 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070298ec 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07029984 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07029984 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07029998 00000018 T CTRPluginFramework::Button::Enable(bool)
070299b0 00000010 T CTRPluginFramework::Button::Enable()
070299c0 00000010 T CTRPluginFramework::Button::Disable()
070299d0 00000010 T CTRPluginFramework::Button::Lock()
070299e0 00000010 T CTRPluginFramework::Button::Execute()
070299f0 00000018 T CTRPluginFramework::Button::SetState(bool)
07029a08 00000010 T CTRPluginFramework::Button::GetState() const
07029a18 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07029a20 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07029a48 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
07029a6c 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07029a90 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07029a90 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07029ac8 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
07029ad0 00000008 T CTRPluginFramework::BMPImage::Width() const
07029ad8 00000008 T CTRPluginFramework::BMPImage::Height() const
07029ae0 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
07029ae8 00000010 T CTRPluginFramework::BMPImage::data() const
07029af8 0000001c T CTRPluginFramework::BMPImage::end() const
07029b14 00000014 W CTRPluginFramework::BMPImage::DataClear()
07029b28 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07029b28 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07029bb4 00000034 T CTRPluginFramework::BMPImage::Unload()
07029be8 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07029c30 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07029c60 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07029d30 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
07029d9c 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
07029dc0 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
07029edc 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07029edc 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07029f30 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0702a10c 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
0702a238 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
0702a30c 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
0702a314 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0702a410 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
0702a728 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a728 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702a7d8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702a830 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
0702a938 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
0702a970 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0702aa18 00000140 T ARM_Disasm::Decode01(unsigned long)
0702ab58 00000028 T ARM_Disasm::Decode10(unsigned long)
0702ab80 00000078 T ARM_Disasm::Decode11(unsigned long)
0702abf8 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0702ac4c 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0702ac9c 00000110 T ARM_Disasm::DecodeALU(unsigned long)
0702adac 000000c4 T ARM_Disasm::Decode00(unsigned long)
0702ae70 00000030 T ARM_Disasm::Decode(unsigned long)
0702aea0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702af20 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0702b27c 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0702b2f4 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0702b364 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0702b3e4 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0702b82c 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0702ba4c 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0702baf0 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0702bbb0 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0702bc70 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0702bd20 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0702bdb0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702bf28 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0702c03c 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0702c0a0 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702c134 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0702c488 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702c784 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702c7d4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702c7d4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702c84c 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702c86c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c86c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702c8b8 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702c920 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702c9b8 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
0702cae8 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0702cb0c 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0702cb30 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0702cb54 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0702cb7c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0702cba4 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0702cbcc 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0702cccc 00000050 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0702cd1c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702cd44 0000010c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702ce50 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0702e8a0 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0702e950 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0702e970 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0702e9e4 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702eb30 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702ee90 00000020 t __tcf_1
0702eeb0 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
0702eec8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0702eef0 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702ef08 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702ef58 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702efa8 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702eff0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702eff0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702f040 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702f060 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702f10c 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
0702f14c 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0702f1b4 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702f2a4 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702f3a8 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702f3b8 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0702f4d0 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0702f508 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702f9c0 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702fb14 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
07030260 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
07030310 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
07030450 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
07030490 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070304e8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07030510 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030510 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
07030510 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
07030510 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0703055c 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070305a0 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070305a0 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
070305c0 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
070305f4 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07030654 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07030694 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
07030694 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
070307d8 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07030a90 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
07030aec 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
07030b3c 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07030ba4 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07030c50 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030c50 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030cc8 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
07030ce4 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030d20 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07030d54 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
070321a8 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07032234 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07032294 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
070322d0 00000030 t __tcf_1
07032300 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0703242c 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
07032468 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0703275c 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
07032de4 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
07032f8c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07033048 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
070334bc 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07033888 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
07033a7c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07033ad4 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07033b64 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07033ba0 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07033ba0 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07033bc4 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
07033bec 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07033bec 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07033c20 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
07033cd0 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07033cd0 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
07033de0 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07033de0 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07033f04 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07033ff4 00000084 T CTRPluginFramework::ARCode::Update()
07034078 0000003c T CTRPluginFramework::ARCodeContext::Update()
070340b4 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07034174 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07034194 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
070341c0 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
070342c8 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
070343bc 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
0703441c 00000004 T CTRPluginFramework::Preferences::Initialize()
07034420 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
07034634 000000bc T CTRPluginFramework::Preferences::LoadSettings()
070346f0 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0703474c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07034808 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
070348c4 00000158 T CTRPluginFramework::Preferences::WriteSettings()
07034a1c 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07034c28 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07034cd0 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
07034cfc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07034d54 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07034d94 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034e50 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07034e88 0000005c T CTRPluginFramework::InitializeRandomEngine()
07034ee4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07034f64 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07034fc0 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
07035004 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07035060 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
070350e0 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703513c 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
07035218 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070354b4 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
070355b8 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070355ec 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035728 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
0703574c 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07035e4c 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035e54 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035e98 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07035f60 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
07035fb4 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07036034 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07036050 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
07036074 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07036088 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703609c 00000024 t __tcf_0
070360c0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070360c0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070360e8 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07036134 00000048 T CTRPluginFramework::LineWriter::Flush()
0703617c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703617c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07036198 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070361fc 00000018 T CTRPluginFramework::LineWriter::Close()
07036214 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07036214 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07036240 00000018 T CTRPluginFramework::LineReader::~LineReader()
07036240 00000018 T CTRPluginFramework::LineReader::~LineReader()
07036258 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
070362b4 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070363b0 00000028 T CTRPluginFramework::Touch::IsDown()
070363d8 00000028 T CTRPluginFramework::Touch::GetPosition()
07036400 00000020 T CTRPluginFramework::Time::AsSeconds() const
07036420 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
07036448 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07036448 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
0703644c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
07036450 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
07036480 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07036498 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
070364a0 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
0703654c 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07036580 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07036580 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
0703662c 00000048 T CTRPluginFramework::Task::Start() const
07036674 0000004c T CTRPluginFramework::Task::Start(void*) const
070366c0 00000064 T CTRPluginFramework::Task::Wait() const
07036724 00000010 T CTRPluginFramework::System::IsNew3DS()
07036734 00000010 T CTRPluginFramework::System::Reboot()
07036744 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07036784 00000010 T CTRPluginFramework::Process::GetHandle()
07036794 00000010 T CTRPluginFramework::Process::GetTitleID()
070367a4 00000024 T CTRPluginFramework::Process::GetTextSize()
070367c8 00000008 T CTRPluginFramework::Process::Pause()
070367d0 00000010 T CTRPluginFramework::Process::Play(unsigned long)
070367e0 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07036888 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
0703688c 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
070368d8 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
070368f4 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
07036914 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07036934 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07036954 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07036978 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070369d4 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07036a0c 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07036a18 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07036a40 00000048 T CTRPluginFramework::Hook::Hook()
07036a40 00000048 T CTRPluginFramework::Hook::Hook()
07036a88 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07036a88 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07036ab0 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07036ab0 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
07036ac4 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07036b28 00000050 T CTRPluginFramework::Hook::~Hook()
07036b28 00000050 T CTRPluginFramework::Hook::~Hook()
07036b78 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07036b94 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
07036bbc 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
07036bcc 0000001c T CTRPluginFramework::Hook::IsEnabled()
07036be8 00000120 T CTRPluginFramework::Hook::Enable()
07036d08 00000030 T CTRPluginFramework::Hook::Disable()
07036d38 00000008 T CTRPluginFramework::Hook::GetContext() const
07036d40 0000000c T CTRPluginFramework::FwkSettings::Get()
07036d4c 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
07036e18 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07036e70 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
07036eb4 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07036f70 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07037064 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0703713c 00000008 T CTRPluginFramework::File::Tell() const
07037144 0000002c T CTRPluginFramework::File::Rewind() const
07037170 00000030 T CTRPluginFramework::File::Flush() const
070371a0 00000064 T CTRPluginFramework::File::GetSize() const
07037204 00000008 T CTRPluginFramework::File::IsOpen() const
0703720c 00000044 T CTRPluginFramework::File::File()
0703720c 00000044 T CTRPluginFramework::File::File()
07037250 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07037250 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07037278 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703730c 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070373e0 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037464 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037504 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07037518 000000a8 T CTRPluginFramework::File::Close() const
070375c0 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0703773c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0703773c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07037798 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07037834 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703788c 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
07037904 00000048 T CTRPluginFramework::Directory::Close() const
0703794c 00000008 T CTRPluginFramework::Directory::IsOpen() const
07037954 00000040 T CTRPluginFramework::Directory::Directory()
07037954 00000040 T CTRPluginFramework::Directory::Directory()
07037994 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
070379c8 0000007c T CTRPluginFramework::Directory::~Directory()
070379c8 0000007c T CTRPluginFramework::Directory::~Directory()
07037a44 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07037aa4 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07037aa4 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07037af0 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
07037b04 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037b9c 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037c40 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037d14 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037da8 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07037e54 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
07037e60 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
07037ef0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037f2c 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038008 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07038154 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07038154 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
070381ac 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070381ac 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070381c8 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070382e4 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07038368 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070383d0 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07038484 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
070384c8 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070386b4 00000288 T CTRPluginFramework::Directory::_List() const
0703893c 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07038a10 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07038aec 0000003c T CTRPluginFramework::Controller::Update()
07038b28 00000018 T CTRPluginFramework::Clock::Clock()
07038b28 00000018 T CTRPluginFramework::Clock::Clock()
07038b40 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
07038b6c 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07038ba4 00000034 T CTRPluginFramework::Clock::Restart()
07038bd8 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
07038bdc 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07038bdc 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07038c50 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
07038c64 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuEntry const*) const
07038c68 00000048 T CTRPluginFramework::PluginMenu::Run() const
07038cb0 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
07038cb8 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
07038cc0 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
07038cd0 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
07038cdc 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07038cdc 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
07038d0c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07038d0c 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07038d24 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038d24 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038d6c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038d6c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038da8 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07038da8 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07038de8 00000008 T CTRPluginFramework::MessageBox::operator()() const
07038df0 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07038df0 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07038e18 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07038e70 00000018 T CTRPluginFramework::Hotkey::~Hotkey()
07038e70 00000018 T CTRPluginFramework::Hotkey::~Hotkey()
07038e88 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07038e90 00000038 T CTRPluginFramework::Hotkey::IsPressed() const
07038ec8 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07038ec8 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
07038ee4 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07038ee4 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
07038f2c 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
07038f5c 0000001c T CTRPluginFramework::HotkeyManager::Count()
07038f78 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07038ff8 0000001c T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038ff8 0000001c T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039014 0000014c W void std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::_M_realloc_insert<CTRPluginFramework::Hotkey const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hotkey*, std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> > >, CTRPluginFramework::Hotkey const&)
07039160 0000004c T CTRPluginFramework::HotkeyManager::operator+=(CTRPluginFramework::Hotkey const&)
070391ac 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
07039234 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
0703936c 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070393e8 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
070394e4 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
070395ac 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
070396f4 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07039728 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039728 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07039778 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07039778 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
070397a8 0000000c T CTRPluginFramework::MenuEntry::SetGameFunc(void (*)(CTRPluginFramework::MenuEntry*)) const
070397b4 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
070397bc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07039814 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070398d4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070398d4 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703991c 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0703991c 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07039988 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07039988 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
070399b8 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
070399c0 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
070399dc 00000044 T CTRPluginFramework::Keyboard::Open() const
07039a20 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07039ab8 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
07039ac0 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07039ac8 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
07039ad0 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07039ad0 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07039b60 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
07039c30 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07039cc4 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07039d54 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07039e18 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07039ea8 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
07039f6c 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07039ffc 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0703a0c0 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0703a16c 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
0703a23c 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0703a340 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
0703a444 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0703a548 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
0703a5bc 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0703a644 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
0703a6b4 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
0703a710 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
0703a7d4 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
0703a7f0 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0703a828 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
0703a88c 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
0703a8d8 0000000c T CTRPluginFramework::OSD::GetTopScreen()
0703a8e4 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0703a9cc 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703aa54 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703aa54 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703aa64 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703aa64 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703aa80 00000110 T CTRPluginFramework::Color::Fade(float)
0703ab90 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0703abd0 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0703ac4c 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0703ae6c 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
0703af34 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0703af3c 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0703afa0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703aff8 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
0703b010 00000028 T OnLoadCro
0703b038 000000ac T CTRPluginFramework::ThreadExit()
0703b0e4 00000054 T abort
0703b138 000000c8 T __entrypoint
0703b200 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703b280 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703b2f4 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703b328 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
0703ba18 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703bac8 0000020c T CTRPluginFramework::Initialize()
0703bcd4 00000044 T CTRPluginFramework::ThreadInit(void*)
0703bd18 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
0703bd60 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
0703bd90 000000b8 t NCSNDCmd_Add
0703be48 00000084 t NCSNDCmd_Execute.constprop.0
0703becc 00000068 T ncsndNotifyAptEvent
0703bf34 00000004 t ncsndAptHook
0703bf38 000001c8 T ncsndInit
0703c100 000000ac T ncsndExit
0703c1ac 00000024 T ncsndInitializeSound
0703c1d0 00000264 T ncsndPlaySound
0703c434 00000040 T ncsndStopSound
0703c474 00000090 T ncsndIsPlaying
0703c504 T LoadCROHooked
0703c518 T AR__ExecuteRoutine
0703c540 t stackBak
0703c548 0000003c T __syscall_getreent
0703c584 0000000c T __aeabi_read_tp
0703c590 0000003c T __getThreadLocalStorage
0703c5cc 00000070 T __syscall_gettod_r
0703c63c 00000004 T __syscall_lock_acquire
0703c640 00000004 T __syscall_lock_release
0703c644 00000004 T __syscall_lock_acquire_recursive
0703c648 00000004 T __syscall_lock_release_recursive
0703c64c 00000054 T initThreadVars
0703c6a0 0000005c T __system_initSyscalls
0703c6fc 00000020 T __libctru_exit
0703c71c 0000001c T __appExit
0703c738 00000190 T __createThread
0703c8c8 00000110 T __startThread
0703c9d8 00000024 T threadGetHandle
0703c9fc 0000002c T threadFree
0703ca28 00000024 T threadJoin
0703ca4c 00000020 T threadGetCurrent
0703ca6c 0000003c T threadExit
0703caa8 00000020 t _thread_begin
0703cac8 0000004c T hidInitFake
0703cb14 0000003c T hidExitFake
0703cb50 0000002c T hidSetSharedMem
0703cb7c 0000003c T fontEnsureMappedExtension
0703cbb8 00000070 T plgLdrExit
0703cc28 000000d4 T plgLdrInit
0703ccfc 00000050 T PLGLDR__GetPluginPath
0703cd4c 00000024 T PLGLDR__FetchEvent
0703cd70 000000e8 T PLGLDR__Reply
0703ce58 000000b0 T __system_allocateHeaps
0703cf08 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0703cf34 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
0703cf5c 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0703d0b0 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0703d130 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
0703d158 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0703d180 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0703d1e4 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0703d2b4 00000004 T __gsp__Update
0703d2b8 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0703d540 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0703d558 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0703d578 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0703d5c0 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0703d5f4 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
0703d618 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
0703d63c 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
0703d678 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
0703d6a4 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0703d734 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0703d768 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0703d810 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0703d98c 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0703d9c8 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0703d9e8 000000ac T CTRPluginFramework::SystemImpl::Initialize()
0703da94 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
0703dae4 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0703dafc 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
0703db18 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0703db54 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0703db74 00000044 T CTRPluginFramework::SystemImpl::Status()
0703dbb8 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
0703dbc8 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0703dbc8 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0703dc28 00000098 T CTRPluginFramework::Scheduler::Initialize()
0703dcc0 0000004c T CTRPluginFramework::Scheduler::Exit()
0703dd0c 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
0703dd4c 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
0703dd90 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
0703ddd0 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0703df74 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0703e078 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0703e0d0 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0703e210 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0703e384 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0703e3c8 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0703e450 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
0703e470 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
0703e484 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0703e6c4 00000044 W CTRPluginFramework::Lock::~Lock()
0703e6c4 00000044 W CTRPluginFramework::Lock::~Lock()
0703e708 000000d4 T CTRPluginFramework::HookManager::HookManager()
0703e708 000000d4 T CTRPluginFramework::HookManager::HookManager()
0703e7dc 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0703e850 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0703e8b4 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0703e984 0000000c T CTRPluginFramework::HookManager::Lock()
0703e990 0000000c T CTRPluginFramework::HookManager::Unlock()
0703e99c 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0703ea04 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0703ea80 000000c8 T __hook__CheckTlsValue
0703eb48 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0703ec8c 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
0703ed10 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0703ee6c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0703ee78 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0703eebc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0703eee0 00000004 t addrMapNodeDestructor(rbtree_node*)
0703eee4 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0703f028 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0703f030 0000006c T CTRPluginFramework::Heap::Free(void*)
0703f09c 0000000c T CTRPluginFramework::Heap::SpaceFree()
0703f0a8 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0703f0b4 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0703f0d4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703f12c 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703f3e0 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
0703f41c 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0703f5f0 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0703f5f0 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0703f6b4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0703f6c0 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0703f6f4 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0703f6f4 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0703f794 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0703f7e4 00000038 T CTRPluginFramework::EventManager::Clear()
0703f81c 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0703fa08 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0703fa70 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
0703fd60 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0703fe2c 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0703fe34 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703fe8c 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0703fe94 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0703fe98 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0703fe9c 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0703fee4 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0703ff08 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0703ff4c 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
07040074 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
07040104 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
07040304 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07040310 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
07040360 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070405f0 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040898 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040b28 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
07040b5c 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040e78 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07040e78 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07040ebc 0000001c T CTRPluginFramework::SubMenu::operator()()
07040ed8 000001f8 T CTRPluginFramework::SubMenu::Draw()
070410d0 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
070411b0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
070411b8 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
070411d4 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
0704120c 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0704120c 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07041290 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0704143c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07041494 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
070414d4 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
070415ec 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07041644 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
07041654 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07041688 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
070416b4 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07041724 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07041810 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0704184c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
070418cc 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0704192c 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
07041a98 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07041a98 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07041f08 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0704216c 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070421ac 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
07042258 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07042514 0000016c t CTRPluginFramework::ClearSearchFolder()
07042680 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07042768 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
07042d58 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
07042d94 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
07043084 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07043430 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
070434f4 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070434f4 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0704366c 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0704366c 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
070437c4 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
07043a84 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
07043c78 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
07043ca8 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07043d38 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07043d38 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07043d6c 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07043d6c 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
07043d8c 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07043de0 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07043e28 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07043e30 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
07043fa0 00000218 T __ctrpf_getThreadVars
070441b8 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
070441f0 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07044228 0000000c T CTRPluginFramework::Sound::Sound()
07044228 0000000c T CTRPluginFramework::Sound::Sound()
07044234 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07044234 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07044248 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07044248 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
0704427c 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
0704430c 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
0704437c 00000058 T CTRPluginFramework::Sound::~Sound()
0704437c 00000058 T CTRPluginFramework::Sound::~Sound()
070443d4 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
070443ec 00000040 T CTRPluginFramework::Sound::Play(int, int)
0704442c 00000008 T CTRPluginFramework::Sound::Play(int)
07044434 00000008 T CTRPluginFramework::Sound::Play()
0704443c 00000384 t cwav_initialize
070447c0 000000f4 t cwav_stopImpl.part.0
070448b4 00000004 T cwavUseEnvironment
070448b8 00000034 T cwavSetVAToPACallback
070448ec 00000050 T cwavLoad
0704493c 000004d8 T cwavPlay
07044e14 00000064 T cwavStop
07044e78 00000170 T cwavFree
07044fe8 0000002c W MemBlock::Create(unsigned char*, unsigned long)
07045014 00000034 W MemPool::DelBlock(MemBlock*)
07045048 0000005c T MemPool::CoalesceRight(MemBlock*)
070450a4 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
070451a0 00000100 T MemPool::Deallocate(MemChunk const&)
070452a0 00000020 T MemPool::GetFreeSpace()
070452c0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070452c0 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07045384 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
0704538c 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
070453a4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
070453a4 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
070453cc 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
0704549c 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
07045560 00000064 W CTRPluginFramework::Search::~Search()
07045560 00000064 W CTRPluginFramework::Search::~Search()
070455c4 00000044 T CTRPluginFramework::Search32::~Search32()
070455c4 00000044 T CTRPluginFramework::Search32::~Search32()
07045608 00000020 T CTRPluginFramework::Search32::~Search32()
07045628 00000024 W CTRPluginFramework::Search::~Search()
0704564c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
0704564c 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07045850 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045850 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07045870 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07045870 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07045904 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07045a10 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
07045bc4 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
07045cc4 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
07045e60 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07045f98 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07045fe4 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07046128 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
0704626c 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070462a8 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07046310 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
070463e8 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07046424 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
070464a4 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
0704659c 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
070465e8 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07046914 00000004 T cwav_defaultVAToPA
07046918 00000004 T cwavEnvUseEnvironment
0704691c 00000008 T cwavEnvGetEnvironment
07046924 00000004 T cwavEnvInitialize
07046928 00000004 T cwavEnvFinalize
0704692c 00000014 T cwavEnvCompatibleEncoding
07046940 00000008 T cwavEnvGetChannelAmount
07046948 00000018 T cwavEnvIsChannelAvailable
07046960 000000f4 T cwavEnvPlay
07046a54 00000004 T cwavEnvChannelIsPlaying
07046a58 00000004 T cwavEnvStop
07046a5c 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704737c 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047c8c 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048574 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070491c8 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704964c 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049ad4 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049f50 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a578 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b200 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b95c 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704bd64 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704c438 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704ccdc 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704d604 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704df28 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704ed0c 00000084 W envGetHandle
0704ed90 00000050 W envDestroyHandles
0704ede0 000000a4 T errfInit
0704ee84 00000058 T errfExit
0704eedc 0000003c T ERRF_Throw
0704ef18 00000090 T ERRF_ExceptionHandler
0704efa8 00000094 T fontEnsureMapped
0704f03c 00000100 T fontGlyphIndexFromCodePoint
0704f13c 00000070 T fontGetCharWidthInfo
0704f1ac 00000074 T osConvertVirtToPhys
0704f220 00000054 T osGetTimeRef
0704f274 000000ec T osGetTime
0704f360 0000012c T srvInit
0704f48c 00000058 T srvExit
0704f4e4 000000a0 T srvGetServiceHandleDirect
0704f584 00000038 T srvGetServiceHandle
0704f5bc 00000038 T srvPublishToSubscriber
0704f5f4 0000000c T __sync_init
0704f600 00000018 T __sync_fini
0704f618 0000002c T syncArbitrateAddressWithTimeout
0704f644 0000001c T LightLock_Init
0704f660 000000ac T LightLock_Lock
0704f70c 00000040 T LightLock_Unlock
0704f74c 00000024 T RecursiveLock_Init
0704f770 00000030 T RecursiveLock_Lock
0704f7a0 00000078 T RecursiveLock_TryLock
0704f818 00000054 T RecursiveLock_Unlock
0704f86c 00000040 T LightEvent_Init
0704f8ac 000000a4 T LightEvent_Clear
0704f950 00000048 T LightEvent_Pulse
0704f998 000000c8 T LightEvent_Signal
0704fa60 000000a0 T LightEvent_Wait
0704fb00 00000014 T LightSemaphore_Init
0704fb14 00000094 T LightSemaphore_Acquire
0704fba8 00000064 T LightSemaphore_Release
0704fc0c 000000b4 t mappableFindAddressWithin
0704fcc0 00000028 T mappableInit
0704fce8 00000080 T mappableAlloc
0704fd68 00000004 T mappableFree
0704fd6c 0000008c T acInit
0704fdf8 0000003c T acExit
0704fe34 000000a4 T amInit
0704fed8 0000003c T amExit
0704ff14 00000158 T aptSendCommand
0705006c 00000030 T aptHook
0705009c 00000030 T aptUnhook
070500cc 00000028 T APT_PrepareToCloseApplication
070500f4 00000048 T APT_CloseApplication
0705013c 0000007c T APT_CheckNew3DS
070501b8 00000048 T APT_GetSharedFont
07050200 000000a4 T cfguInit
070502a4 0000003c T cfguExit
070502e0 00000054 T CFGU_GetSystemLanguage
07050334 000000cc T fsInit
07050400 0000003c T fsExit
0705043c 000000cc T FSUSER_OpenFile
07050508 000000bc T FSUSER_DeleteFile
070505c4 000000f8 T FSUSER_RenameFile
070506bc 000000bc T FSUSER_DeleteDirectoryRecursively
07050778 000000d4 T FSUSER_CreateFile
0705084c 000000c4 T FSUSER_CreateDirectory
07050910 000000f8 T FSUSER_RenameDirectory
07050a08 000000b4 T FSUSER_OpenDirectory
07050abc 00000094 T FSUSER_OpenArchive
07050b50 00000058 T FSFILE_Read
07050ba8 00000060 T FSFILE_Write
07050c08 00000038 T FSFILE_GetSize
07050c40 00000028 T FSFILE_SetSize
07050c68 0000003c T FSFILE_Close
07050ca4 00000024 T FSFILE_Flush
07050cc8 00000028 T FSFILE_SetPriority
07050cf0 00000050 T FSDIR_Read
07050d40 0000003c T FSDIR_Close
07050d7c 000000f0 T gspExit
07050e6c 00000024 W hidShouldUseIrrst
07050e90 0000018c T hidInit
0705101c 000000e8 T hidExit
07051104 000002a4 T hidScanInput
070513a8 00000010 T hidKeysHeld
070513b8 00000010 T hidKeysDown
070513c8 00000010 T hidKeysUp
070513d8 00000018 T hidTouchRead
070513f0 00000160 T irrstInit
07051550 000000cc T irrstExit
0705161c 000000b4 T irrstScanInput
070516d0 00000024 T irrstKeysHeld
070516f4 0000000c T srvPmGetSessionHandle
07051700 000000b4 T sslcInit
070517b4 00000048 T sslcExit
070517fc 00000048 T sslcGenerateRandomData
07051844 00000074 T rbtree_find
070518b8 00000010 T rbtree_init
070518c8 000001b0 t do_insert
07051a78 00000008 T rbtree_insert
07051a80 00000318 T rbtree_remove
07051d98 00000090 T rbtree_rotate
07051e28 00000064 T decode_utf16
07051e8c 0000013c T decode_utf8
07051fc8 00000054 T encode_utf16
0705201c 000000e0 T encode_utf8
070520fc 000000c0 T utf8_to_utf16
070521bc T svcQueryMemory
070521ec T svcExitProcess
070521f4 T svcCreateThread
07052214 T svcExitThread
0705221c T svcSleepThread
07052224 T svcSetThreadPriority
0705222c T svcReleaseMutex
07052234 T svcCreateEvent
07052248 T svcSignalEvent
07052250 T svcClearEvent
07052258 T svcMapMemoryBlock
07052260 T svcUnmapMemoryBlock
07052268 T svcCreateAddressArbiter
0705227c T svcArbitrateAddress
07052294 T svcArbitrateAddressNoTimeout
0705229c T svcCloseHandle
070522a4 T svcWaitSynchronization
070522ac T svcWaitSynchronizationN
070522d4 T svcDuplicateHandle
070522e8 T svcGetSystemTick
070522f0 T svcGetSystemInfo
07052308 T svcGetProcessInfo
07052320 T svcConnectToPort
07052334 T svcSendSyncRequest
0705233c T svcOpenProcess
07052350 T svcGetProcessId
07052364 T svcGetThreadId
07052378 T svcBreak
07052380 T svcInvalidateProcessDataCache
07052388 T svcFlushProcessDataCache
07052390 T svcKernelSetState
07052398 T svcQueryProcessMemory
070523bc 0000005c T rbtree_node_next
07052418 00000004 T operator delete(void*)
0705241c 00000004 T operator delete(void*, std::nothrow_t const&)
07052420 00000004 T operator delete(void*, unsigned int)
07052424 00000004 T operator delete[](void*)
07052428 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
07052434 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
07052440 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
0705244c 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
07052458 00000038 t (anonymous namespace)::init()
07052490 00000024 t (anonymous namespace)::init_static_cond()
070524b4 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
070524b4 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
070524d4 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07052500 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07052500 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07052520 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
0705254c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0705254c 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0705256c 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07052598 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
07052598 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
070525b8 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
070525e4 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
07052610 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0705263c 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
07052668 000001a4 T __cxa_guard_acquire
0705280c 000000b0 T __cxa_guard_release
070528bc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070528bc 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
070528dc 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07052908 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07052908 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07052918 00000014 T std::get_new_handler()
0705292c 0000005c T operator new(unsigned int)
07052988 0000001c T operator new(unsigned int, std::nothrow_t const&)
070529a4 00000004 T operator new[](unsigned int)
070529a8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070529a8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070529c8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
070529f4 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07052b2c 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07052bb4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07052bf8 00000004 T std::type_info::~type_info()
07052bf8 00000004 T std::type_info::~type_info()
07052bfc 00000008 T std::type_info::__is_pointer_p() const
07052bfc 00000008 T std::type_info::__is_function_p() const
07052c04 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07052c18 00000014 T std::__detail::_List_node_base::_M_unhook()
07052c2c 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
07052c84 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
07052cf4 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
07052f78 0000002c T std::__throw_bad_alloc()
07052fa4 0000002c T std::__throw_bad_array_new_length()
07052fd0 00000040 T std::__throw_logic_error(char const*)
07053010 00000040 T std::__throw_invalid_argument(char const*)
07053050 00000040 T std::__throw_length_error(char const*)
07053090 00000040 T std::__throw_out_of_range(char const*)
070530d0 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
070530e0 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
070531c8 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
070532a8 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
070532ec 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07053340 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
07053364 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
07053388 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
070534c8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0705352c 0000000c T std::bad_alloc::what() const
07053538 00000020 T std::bad_alloc::~bad_alloc()
07053538 00000020 T std::bad_alloc::~bad_alloc()
07053558 0000002c T std::bad_alloc::~bad_alloc()
07053584 0000000c T std::bad_array_new_length::what() const
07053590 00000020 T std::bad_array_new_length::~bad_array_new_length()
07053590 00000020 T std::bad_array_new_length::~bad_array_new_length()
070535b0 0000002c T std::bad_array_new_length::~bad_array_new_length()
070535dc 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07053638 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0705364c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0705364c 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0705366c 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07053698 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
070536fc 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07053778 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0705384c 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
07053964 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07053a38 00000044 T __cxa_allocate_exception
07053a7c 0000002c T __cxa_free_exception
07053aa8 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
07053c5c T __cxa_end_cleanup
07053c6c 00000134 T __cxa_type_match
07053da0 000000b4 T __cxa_begin_cleanup
07053e54 000000b4 T __gnu_end_cleanup
07053f08 000000cc T __cxa_begin_catch
07053fd4 000000e0 T __cxa_end_catch
070540b4 00000004 T std::exception::~exception()
070540b4 00000004 T std::exception::~exception()
070540b8 00000004 T std::bad_exception::~bad_exception()
070540b8 00000004 T std::bad_exception::~bad_exception()
070540bc 0000000c T transaction clone for std::exception::what() const
070540bc 0000000c T std::exception::what() const
070540c8 0000000c T transaction clone for std::bad_exception::what() const
070540c8 0000000c T std::bad_exception::what() const
070540d4 00000018 T std::bad_exception::~bad_exception()
070540ec 0000003c t eh_globals_dtor(void*)
07054128 00000038 T __cxa_get_globals_fast
07054160 00000074 T __cxa_get_globals
070541d4 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
07054214 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
07054248 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
070543b4 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0705440c 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
070544e4 000006a0 T __gxx_personality_v0
07054b84 00000014 T __cxxabiv1::__terminate(void (*)())
07054b98 00000018 T std::terminate()
07054bb0 0000000c T __cxxabiv1::__unexpected(void (*)())
07054bbc 00000018 T std::unexpected()
07054bd4 00000014 T std::get_terminate()
07054be8 00000014 T std::get_unexpected()
07054bfc 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
07054c5c 00000054 T __cxa_init_primary_exception
07054cb0 00000054 T __cxa_throw
07054d04 000000b0 T __cxa_rethrow
07054db4 00000008 T std::logic_error::what() const
07054db4 00000008 T std::runtime_error::what() const
07054dbc 00000098 T std::logic_error::~logic_error()
07054dbc 00000098 T std::logic_error::~logic_error()
07054e54 00000098 T std::length_error::~length_error()
07054e54 00000098 T std::length_error::~length_error()
07054eec 00000098 T std::invalid_argument::~invalid_argument()
07054eec 00000098 T std::invalid_argument::~invalid_argument()
07054f84 00000098 T std::out_of_range::~out_of_range()
07054f84 00000098 T std::out_of_range::~out_of_range()
0705501c 000000a0 T std::logic_error::~logic_error()
070550bc 000000a0 T std::length_error::~length_error()
0705515c 000000a0 T std::invalid_argument::~invalid_argument()
070551fc 000000a0 T std::out_of_range::~out_of_range()
0705529c 000000d4 T std::logic_error::logic_error(char const*)
0705529c 000000d4 T std::logic_error::logic_error(char const*)
07055370 00000020 T std::invalid_argument::invalid_argument(char const*)
07055370 00000020 T std::invalid_argument::invalid_argument(char const*)
07055390 00000020 T std::length_error::length_error(char const*)
07055390 00000020 T std::length_error::length_error(char const*)
070553b0 00000020 T std::out_of_range::out_of_range(char const*)
070553b0 00000020 T std::out_of_range::out_of_range(char const*)
070553d0 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07055454 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07055458 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
070554c8 0000002c T __cxa_call_terminate
070554f4 00000150 T __cxa_call_unexpected
07055648 0000027c T log2
070558c4 000000c0 T ceilf
07055988 0000013c T ceil
07055ac4 000000c0 T floorf
07055b88 00000144 T floor
07055ccc 00000068 T roundf
07055d34 00000024 t with_errno
07055d58 00000050 T __math_divzero
07055da8 0000001c T __math_invalid
07055dc4 00000044 T __popcountsi2
07055e08 00000030 T __aeabi_f2lz
07055e08 00000030 T __fixsfdi
07055e38 00000040 T __aeabi_f2ulz
07055e38 00000040 T __fixunssfdi
07055e78 00000120 T __udivmoddi4
07055f98 00000018 t selfrel_offset31
07055fb0 00000090 t search_EIT_table
07056040 00000040 t __gnu_unwind_get_pr_addr
07056080 0000010c t get_eit_entry
0705618c 00000088 t restore_non_core_regs
07056214 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07056228 00000004 t _Unwind_DebugHook
0705622c 00000064 t unwind_phase2
07056290 00000140 t unwind_phase2_forced
070563d0 000000a4 T __gnu_Unwind_RaiseException
07056474 00000028 T __gnu_Unwind_ForcedUnwind
0705649c 00000074 T __gnu_Unwind_Resume
07056510 00000020 T __gnu_Unwind_Resume_or_Rethrow
07056530 00000004 T _Unwind_Complete
07056534 00000018 T _Unwind_DeleteException
0705654c 0000006c T _Unwind_VRS_Get
070565b8 0000002c t _Unwind_GetGR
070565e4 0000006c T _Unwind_VRS_Set
07056650 0000002c t _Unwind_SetGR
0705667c 000000c0 T __gnu_Unwind_Backtrace
0705673c 00000410 t __gnu_unwind_pr_common
07056b4c 00000008 T __aeabi_unwind_cpp_pr0
07056b54 00000008 W __aeabi_unwind_cpp_pr1
07056b5c 00000008 W __aeabi_unwind_cpp_pr2
07056b64 00000424 T _Unwind_VRS_Pop
07056f88 00000064 t next_unwind_byte
07056fec 0000002c t _Unwind_GetGR.constprop.0
07057018 00000004 t unwind_UCB_from_context
0705701c 00000464 T __gnu_unwind_execute
07057480 00000048 T __gnu_unwind_frame
070574c8 00000010 T _Unwind_GetRegionStart
070574d8 0000001c T _Unwind_GetLanguageSpecificData
070574f4 00000008 T _Unwind_GetDataRelBase
070574fc 00000008 T _Unwind_GetTextRelBase
07057504 0000025c t _strtoull_l.isra.0
07057760 00000030 T _strtoull_r
07057790 00000020 T memalign
070577b0 0000014c T _memalign_r
070578fc 00000014 T atexit
07057910 000000cc T snprintf
070579dc 00000018 T isxdigit
070579f4 00000064 T sprintf
07057a58 00000020 T calloc
07057a78 000000c0 T _calloc_r
07057b38 000000f8 T _malloc_trim_r
07057c30 000002e8 T _free_r
07057f18 00000018 T isspace
07057f30 00000130 T strchr
07058060 000000d8 T memcmp
07058138 00000148 T _fclose_r
07058280 0000064c t get_arg
070588d0 00003324 T _svfprintf_r
0705bbf4 00000018 T malloc
0705bc0c 00000018 T free
0705bc24 0000079c T _malloc_r
0705c3c0 00000024 T getenv
0705c3e4 00000150 T memmove
0705c534 000000a4 T _vsnprintf_r
0705c5d8 00000038 T vsnprintf
0705c610 000000c8 T _findenv_r
0705c6d8 00000018 T _getenv_r
0705c6f0 000000f4 T memset
0705c7e4 0000000c T __malloc_lock
0705c7f0 0000000c T __malloc_unlock
0705c7fc 00000090 T strlen
0705c88c 0000022c T __sflush_r
0705cab8 00000094 T _fflush_r
0705cb4c 000000e4 T strncmp
0705cc30 00000070 T _fwalk_sglue
0705cca0 00000020 T localtime
0705ccc0 000000c4 T strncpy
0705cd84 0000001c t stdio_exit_handler
0705cda0 0000005c t cleanup_stdio
0705cdfc 00000154 t global_stdio_init.part.0
0705cf50 0000005c T __sinit
0705cfac 0000000c T __sfp_lock_acquire
0705cfb8 0000000c T __sfp_lock_release
0705cfc4 00000360 T localtime_r
0705d324 00000010 T ctime
0705d334 00000048 T strnlen
0705d37c 00000064 t sulp
0705d3e0 000013a4 T _strtod_l
0705e788 00000108 T strtof
0705e890 00000010 T _tzset_unlocked
0705e8a0 00000664 T _tzset_unlocked_r
0705ef04 00000020 T realloc
0705ef24 0000012c t iso_year_adjust
0705f050 0000126c t __strftime.isra.0
070602bc 00000030 T strftime
070602ec 0000000c T __gettzinfo
070602f8 000001d8 t _strtoul_l.isra.0
070604d0 00000030 T _strtoul_r
07060500 00000034 T strtoul
07060534 00000024 T __locale_mb_cur_max
07060558 0000004c T time
070605a4 00000024 T _localeconv_r
070605c8 00000254 T __tzcalc_limits
0706081c 000000f0 T strcpy
0706090c 000000e0 T memchr
070609ec 000000f0 T __utf8_wctomb
07060adc 0000011c T memcpy
07060bf8 00000084 T __libc_init_array
07060c7c 0000000c T __errno
07060c88 00000010 T nan
07060c98 0000000c T nanf
07060ca8 00000088 T frexp
07060d30 0000012c T __smakebuf_r
07060e5c 000000a0 T _wcrtomb_r
07060efc 00000028 T _wcsrtombs_r
07060f24 000000b0 T __register_exitproc
07060fd4 0000000c T abs
07060fe0 00000044 T __sread
07061024 00000008 T __seofread
0706102c 00000068 T __swrite
07061094 00000044 T __sseek
070610d8 00000008 T __sclose
070610e0 00000074 T siscanf
07061154 0000000c T __env_lock
07061160 0000000c T __env_unlock
0706116c 000000cc T sniprintf
07061238 0000064c t get_arg
07061884 0000018c T __ssprint_r
07061a10 00002230 T _svfiprintf_r
07063c40 00000050 t get_arg
07063c90 000000e0 T _sungetc_r
07063d70 0000006c T __ssrefill_r
07063ddc 000000c4 T _sfread_r
07063ea0 000022cc T __ssvfiscanf_r
0706616c 0000000c T labs
07066178 000000f0 t rshift
07066268 0000089c T __gethex
07066b04 000001b4 t quorem
07066cb8 00001218 T _dtoa_r
07067ed0 0000004c T __match
07067f1c 0000029c T __hexnan
070681b8 00000088 T _Balloc
07068240 0000001c T _Bfree
0706825c 000000f4 T __multadd
07068350 00000110 T __s2b
07068460 00000060 T __hi0bits
070684c0 0000009c T __lo0bits
0706855c 000000a4 T __i2b
07068600 00000204 T __multiply
07068804 00000128 T __pow5mult
0706892c 00000140 T __lshift
07068a6c 00000058 T __mcmp
07068ac4 000001fc T __mdiff
07068cc0 00000068 T __ulp
07068d28 000000d0 T __b2d
07068df8 00000124 T __d2b
07068f1c 00000078 T __ratio
07068f94 00000088 T __copybits
0706901c 0000005c T __any_on
07069078 00000020 T asctime
07069098 00000268 T gmtime_r
07069300 00000080 T asctime_r
07069380 000004a0 T _realloc_r
07069820 0000000c T __tz_lock
0706982c 0000000c T __tz_unlock
07069838 000002f8 T __utf8_mbtowc
07069b30 000001b0 t _strtol_l.part.0
07069ce0 00000060 T _strtol_r
07069d40 00000234 t _strtoll_l.isra.0
07069f74 00000030 T _strtoll_r
07069fa4 00000008 T iswspace
07069fac 000000b4 T _mbrtowc_r
0706a060 00000038 T iswspace_l
0706a098 00000188 T _wcsnrtombs_l
0706a220 00000064 T _wcsnrtombs_r
0706a284 000000f0 T __sccl
0706a374 00000064 T siprintf
0706a3d8 000000a8 T __submore
0706a480 00000090 T category
0706a510 0000005c T __assert_func
0706a56c 0000003c T fiprintf
0706a5a8 0000064c t get_arg
0706abf4 00000030 T __sprint_r
0706ac24 00002304 T _vfiprintf_r
0706cf28 000000b8 t __sbprintf
0706cfe0 00000138 T __swsetup_r
0706d118 000004b4 T __sfvwrite_r
0706d5cc 00000078 T _fstat_r
0706d644 0000002c T __getreent
0706d670 00000030 T _gettimeofday_r
0706d6a0 0000003c T __get_handle
0706d6dc 000000f4 T _close_r
0706d7d0 00000008 t null_write
0706d7d8 00000008 T _isatty_r
0706d7e0 00000084 T _lseek_r
0706d864 00000080 T _read_r
0706d8e4 00000078 W _sbrk_r
0706d95c 0000001c T __libc_lock_acquire
0706d978 0000001c T __libc_lock_release
0706d994 0000001c T __libc_lock_acquire_recursive
0706d9b0 0000001c T __libc_lock_release_recursive
0706d9cc 00000080 T _write_r
0706da4c 00000038 T __aeabi_d2lz
0706da4c 00000038 T __fixdfdi
0706da88 00000040 T __aeabi_d2ulz
0706da88 00000040 T __fixunsdfdi
0706dac8 T _fini
07071940 00000038 R vtable for CTRPluginFramework::Search
07071978 00000023 r CTRPluginFramework::g_copyrightText
0707199b 0000001e r CTRPluginFramework::g_ctrpfText
070719bc 00000014 V vtable for CTRPluginFramework::MenuItem
070719d0 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
070719e4 0000001c R vtable for CTRPluginFramework::MenuEntryTools
07071a00 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07071a20 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07071a28 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07071a30 00000038 r CTRPluginFramework::stable
07071a68 00000038 r CTRPluginFramework::ktable
07071aa0 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07071ac0 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07071ae0 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07071b00 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07071b08 0000001c R vtable for CTRPluginFramework::TouchKey
07071b24 0000001c R vtable for CTRPluginFramework::TextBox
07071b40 00000a00 r font
07072540 00000058 r CTRPluginFramework::g_OSDPattern
07072598 0000001c R vtable for CTRPluginFramework::NumericTextBox
070725b4 0000001c R vtable for CTRPluginFramework::FloatingButton
070725d0 0000001c R vtable for CTRPluginFramework::ComboBox
070725ec 0000001c R vtable for CTRPluginFramework::Button
07072608 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07072610 00000040 r RegNames
07072650 00000010 r shift_names
07072660 00000040 r cond_names
070726a0 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
070726bc 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
070726c4 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
070726cc 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
070726d4 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
070726e8 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
070726f4 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
07072778 00000008 R CTRPluginFramework::Time::Zero
07072780 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0707279c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
070727a4 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
070727bc 00000004 R CTRPluginFramework::Color::Turquoise
070727c0 00000004 R CTRPluginFramework::Color::SkyBlue
070727c4 00000004 R CTRPluginFramework::Color::Orange
070727c8 00000004 R CTRPluginFramework::Color::LimeGreen
070727cc 00000004 R CTRPluginFramework::Color::ForestGreen
070727d0 00000004 R CTRPluginFramework::Color::Gainsboro
070727d4 00000004 R CTRPluginFramework::Color::DimGrey
070727d8 00000004 R CTRPluginFramework::Color::DeepSkyBlue
070727dc 00000004 R CTRPluginFramework::Color::DarkGrey
070727e0 00000004 R CTRPluginFramework::Color::Brown
070727e4 00000004 R CTRPluginFramework::Color::BlackGrey
070727e8 00000004 R CTRPluginFramework::Color::Green
070727ec 00000004 R CTRPluginFramework::Color::Gray
070727f0 00000004 R CTRPluginFramework::Color::Silver
070727f4 00000004 R CTRPluginFramework::Color::Magenta
070727f8 00000004 R CTRPluginFramework::Color::Cyan
070727fc 00000004 R CTRPluginFramework::Color::Yellow
07072800 00000004 R CTRPluginFramework::Color::Blue
07072804 00000004 R CTRPluginFramework::Color::Lime
07072808 00000004 R CTRPluginFramework::Color::Red
0707280c 00000004 R CTRPluginFramework::Color::White
07072810 00000004 R CTRPluginFramework::Color::Black
07072e98 00000384 r UserManualFilled15_array
0707321c 00000384 r Unsplash15_array
070735a0 00000384 r UnCheckedCheckbox_array
07073924 000009c4 r TrashFilled25_array
070742e8 000009c4 r Trash25_array
07074cac 00000384 r Star15_array
07075030 00000384 r Shutdown15_array
070753b4 00000384 r Settings15_array
07075738 00000384 r Search15_array
07075abc 000009c4 r Save25_array
07076480 00001900 r Rocket40_array
07077d80 00000384 r Restart15_array
07078104 00000384 r RAM15_array
07078488 000009c4 r PlusFilled25_array
07078e4c 000009c4 r Plus25_array
07079810 00000384 r More15_array
07079b94 00000384 r Maintenance15_array
07079f18 000009c4 r KeyboardFilled25_array
0707a8dc 000009c4 r Keyboard25_array
0707b2a0 000009c4 r InfoFilled25_array
0707bc64 000009c4 r Info25_array
0707c628 00000384 r HandCursor15_array
0707c9ac 00000384 r Grid15_array
0707cd30 000009c4 r GameControllerFilled25_array
0707d6f4 000009c4 r GameController25_array
0707e0b8 00000384 r GameController15_array
0707e43c 00000384 r FolderFilled_array
0707e7c0 00000384 r File15_array
0707eb44 00000384 r EnterKeyFilled15_array
0707eec8 00000384 r EnterKey15_array
0707f24c 000009c4 r EditFilled25_array
0707fc10 000009c4 r Edit25_array
070805d4 000009c4 r DuplicateFilled25_array
07080f98 000009c4 r Duplicate25_array
0708195c 00000e10 r DefaultKeyboardCustomIcon_array
0708276c 000009c4 r CutFilled25_array
07083130 000009c4 r Cut25_array
07083af4 00000384 r Controller15_array
07083e78 00000640 r CloseWindowFilled20_array
070844b8 00000640 r CloseWindow20_array
07084af8 000009c4 r ClipboardFilled25_array
070854bc 000009c4 r Clipboard25_array
07085e80 00000384 r ClearSymbolFilled15_array
07086204 00000384 r ClearSymbol15_array
07086588 00000384 r CheckedCheckbox_array
0708690c 00000384 r CapsLockOnFilled15_array
07086c90 00000384 r CapsLockOn15_array
07087014 000009c4 r AddFavoriteFilled25_array
070879d8 000009c4 r AddFavorite25_array
0708839c 00000384 r About15_array
07088720 00000014 r CTRPluginFramework::defaultSoundFiles
07088734 00000038 R vtable for CTRPluginFramework::Search32
0708876c 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07088794 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
070887a0 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
070887cc 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
070887d8 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07088804 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07088810 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
07088838 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
07088844 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
07088858 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
0708886c 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
07088880 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07088894 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
070888b8 0000000c R typeinfo for __gnu_cxx::recursive_init_error
070888c4 00000014 R vtable for __gnu_cxx::recursive_init_error
070888d8 00000001 R std::nothrow
070888dc 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07088904 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07088910 0000002c R vtable for __cxxabiv1::__si_class_type_info
0708893c 0000000d R typeinfo name for std::type_info
0708894c 00000008 R typeinfo for std::type_info
07088954 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07088964 00000404 R std::__detail::__prime_list
07088d68 00000018 V typeinfo name for std::_Sp_make_shared_tag
07088d80 0000000d R typeinfo name for std::bad_alloc
07088d90 0000000c R typeinfo for std::bad_alloc
07088d9c 00000014 R vtable for std::bad_alloc
07088db0 00000019 R typeinfo name for std::bad_array_new_length
07088dcc 0000000c R typeinfo for std::bad_array_new_length
07088dd8 00000014 R vtable for std::bad_array_new_length
07088dec 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07088e10 0000000c R typeinfo for __cxxabiv1::__class_type_info
07088e1c 0000002c R vtable for __cxxabiv1::__class_type_info
07088e48 0000000d R typeinfo name for std::exception
07088e58 00000008 R typeinfo for std::exception
07088e60 00000012 R typeinfo name for std::bad_exception
07088e74 0000000c R typeinfo for std::bad_exception
07088e80 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07088ea0 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07088ea8 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
07088ecc 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07088ed4 00000014 R vtable for std::bad_exception
07088ee8 00000010 R typeinfo name for std::logic_error
07088ef8 0000000c R typeinfo for std::logic_error
07088f04 00000015 R typeinfo name for std::invalid_argument
07088f1c 0000000c R typeinfo for std::invalid_argument
07088f28 00000011 R typeinfo name for std::length_error
07088f3c 0000000c R typeinfo for std::length_error
07088f48 00000011 R typeinfo name for std::out_of_range
07088f5c 0000000c R typeinfo for std::out_of_range
07088f68 00000014 R vtable for std::logic_error
07088f7c 00000014 R vtable for std::invalid_argument
07088f90 00000014 R vtable for std::length_error
07088fa4 00000014 R vtable for std::out_of_range
07088fb8 00000890 R __log2_data
07089848 00000101 R _ctype_
0708994c 00000010 r zeroes.0
0708995c 00000010 r blanks.1
0708996c 00000014 r fpinan.0
07089980 00000014 r fpi.1
07089998 00000028 r tinytens
070899c0 00000060 R __month_lengths
07089a20 000000fc R _C_time_locale
07089b1c 00000010 r zeroes.0
07089b2c 00000010 r blanks.1
07089b3c 0000006c R __action_table
07089ba8 0000006c R __state_table
07089c14 00000100 R __chclass
07089d14 00000022 r basefix.0
07089d38 00000100 R __hexdig
07089e38 0000000c r p05.0
07089e48 00000028 R __mprec_bigtens
07089e70 000000c8 R __mprec_tens
07089f38 00000024 r mon_name.0
07089f5c 00000015 r day_name.1
07089f74 00003528 r categories
0708d49c 00000010 r zeroes.0
0708d4ac 00000010 r blanks.1
0708d4bc 00000080 R dotab_stdnull
0708d53c R __tdata_align
0708d69c R __exidx_start
0708d8e4 R __exidx_end
0708d8e4 00000004 d CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::minValue
0708d8e8 00000001 d CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::display
0708d8e9 00000001 d CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::firstRun
0708d8ec 00000001 d CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::isFirstTime
0708d8f0 00000004 d CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::watchKind
0708d8f4 00000004 D cwavCurrentVAPAConvCallback
0708d8f8 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708d910 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708d928 00000004 D CTRPluginFramework::Screenshot::Screens
0708d92c 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708d930 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0708d934 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0708d938 00000004 D CTRPluginFramework::RendererPriv::g_customColor
0708d93c 000001f4 D opcode_names
0708db30 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0708db34 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708db4c 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708db64 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708db7c 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0708db80 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708db98 00000004 D CTRPluginFramework::FwkSettings::Header
0708db9c 00000001 D CTRPluginFramework::g_keepRunning
0708dba0 00000004 D g_charPerSheet
0708dba4 00000004 D UserManualFilled15
0708dba8 00000004 D Unsplash15
0708dbac 00000004 D UnCheckedCheckbox
0708dbb0 00000004 D TrashFilled25
0708dbb4 00000004 D Trash25
0708dbb8 00000004 D Star15
0708dbbc 00000004 D Shutdown15
0708dbc0 00000004 D Settings15
0708dbc4 00000004 D Search15
0708dbc8 00000004 D Save25
0708dbcc 00000004 D Rocket40
0708dbd0 00000004 D Restart15
0708dbd4 00000004 D RAM15
0708dbd8 00000004 D PlusFilled25
0708dbdc 00000004 D Plus25
0708dbe0 00000004 D More15
0708dbe4 00000004 D Maintenance15
0708dbe8 00000004 D KeyboardFilled25
0708dbec 00000004 D Keyboard25
0708dbf0 00000004 D InfoFilled25
0708dbf4 00000004 D Info25
0708dbf8 00000004 D HandCursor15
0708dbfc 00000004 D Grid15
0708dc00 00000004 D GameControllerFilled25
0708dc04 00000004 D GameController25
0708dc08 00000004 D GameController15
0708dc0c 00000004 D FolderFilled
0708dc10 00000004 D File15
0708dc14 00000004 D EnterKeyFilled15
0708dc18 00000004 D EnterKey15
0708dc1c 00000004 D EditFilled25
0708dc20 00000004 D Edit25
0708dc24 00000004 D DuplicateFilled25
0708dc28 00000004 D Duplicate25
0708dc2c 00000004 D DefaultKeyboardCustomIcon
0708dc30 00000004 D CutFilled25
0708dc34 00000004 D Cut25
0708dc38 00000004 D Controller15
0708dc3c 00000004 D CloseWindowFilled20
0708dc40 00000004 D CloseWindow20
0708dc44 00000004 D ClipboardFilled25
0708dc48 00000004 D Clipboard25
0708dc4c 00000004 D ClearSymbolFilled15
0708dc50 00000004 D ClearSymbol15
0708dc54 00000004 D CheckedCheckbox
0708dc58 00000004 D CapsLockOnFilled15
0708dc5c 00000004 D CapsLockOn15
0708dc60 00000004 D AddFavoriteFilled25
0708dc64 00000004 D AddFavorite25
0708dc68 00000004 D About15
0708dc6c 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
0708dc6d 00000001 D CTRPluginFramework::SystemImpl::Language
0708dc70 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708dc88 00000001 D CTRPluginFramework::EventManager::_refresh
0708dc8c 00000004 d kCount
0708dc90 00000004 d kInterval
0708dc94 00000004 d kDelay
0708dc98 00000004 D __cxxabiv1::__unexpected_handler
0708dc9c 00000004 D __cxxabiv1::__terminate_handler
0708dca0 00000004 D __malloc_sbrk_base
0708dca4 00000004 D __malloc_trim_threshold
0708dca8 00000408 D __malloc_av_
0708e0b0 0000000c D __sglue
0708e0bc 00000008 D _tzname
0708e0c8 00000058 d tzinfo
0708e120 0000016c D __global_locale
0708e28c 00000004 D _impure_ptr
0708e290 00000120 D _impure_data
0708e3b0 00000004 D environ
0708e3b4 00001000 d handles
0708f3b4 0000000c d __stderr_handle
0708f3c0 0000000c d __stdout_handle
0708f3cc 0000000c d __stdin_handle
0708f3d8 0000008c D devoptab_list
0708f478 d _GLOBAL_OFFSET_TABLE_
0708f484 D __tdata_lma
0708f490 d __frame_dummy_init_array_entry
0708f490 D __init_array_start
0708f490 B __preinit_array_end
0708f490 B __preinit_array_start
0708f490 D __tdata_lma_end
0708f4fc d __do_global_dtors_aux_fini_array_entry
0708f4fc D __init_array_end
0708f55c D __bss_start__
0708f55c 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::number1
0708f560 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcAdd
0708f561 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcSub
0708f562 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcMul
0708f563 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcDiv
0708f564 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::number2
0708f568 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::answer
0708f56c 00000014 b CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::address
0708f580 00000004 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::address
0708f584 00000040 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::regData
0708f5c4 00000004 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::opcode
0708f5c8 00000001 b CTRPluginFramework::getFreeMemory(CTRPluginFramework::MenuEntry*)::getFlag
0708f5cc 00000004 b CTRPluginFramework::getFreeMemory(CTRPluginFramework::MenuEntry*)::ptr
0708f5d0 00000001 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::patched
0708f5d4 00000004 b CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::menu
0708f5d8 0000000c b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::valueHistory
0708f5e4 00000004 b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::address
0708f5e8 00000004 b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::oldAddress
0708f5ec 00000004 b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::maxValue
0708f5f0 00000004 b guard variable for CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::valueHistory
0708f5f4 00000004 B CTRPluginFramework::Draw::posY
0708f5f8 00000004 B CTRPluginFramework::Draw::posX
0708f5fc 00000001 B CTRPluginFramework::RangeWriteManager::searched
0708f600 00000004 B CTRPluginFramework::RangeWriteManager::startAddress
0708f604 00000004 B CTRPluginFramework::RangeWriteManager::endAddress
0708f608 00000004 B CTRPluginFramework::RangeWriteManager::targetValue
0708f60c 00000004 B CTRPluginFramework::RangeWriteManager::writeValue
0708f610 00000004 B CTRPluginFramework::RangeWriteManager::hits
0708f614 00002000 B CTRPluginFramework::RangeWriteManager::freeAddress
07091614 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
07091620 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
07091624 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
07091628 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0709162c 0000000c b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::kInputList
07091638 00000004 b guard variable for CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::kInputList
0709163c 00000004 b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::startAddress
07091640 00000004 b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::endAddress
07091644 00000004 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::byte
07091648 00000004 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::address
0709164c 00000001 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::isWatched
07091650 00000050 B CTRPluginFramework::WatchPointManager::_singleton
070916a0 0000005c B CTRPluginFramework::exceptionData
07091700 00001000 B CTRPluginFramework::stack
07092700 00000004 b ncsndMutex
07092704 00000004 b ncsndCmdCurOff
07092708 00000004 b ncsndCmdStartOff
0709270c 00000004 B ncsndSharedMem
07092710 00000004 B ncsndCSNDHandle
07092714 00000004 b ncsndRefCount
07092718 00000004 B ncsndChannels
0709271c 00000010 B ncsndOffsets
0709272c 00000004 B ncsndSharedMemSize
07092730 00000004 b ncsndSharedMemBlock
07092734 00000001 b ncsndCookieHooked
07092738 0000000c b ncsndCookie
07092744 b saved_stack
0709274c 00000004 b cwavListCount
07092750 00000004 b cwavList
07092754 00000004 b cwavAddedToList
07092758 b completed.1
0709275c b object.0
07092774 00000004 b CTRPluginFramework::isReady
07092778 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
07092780 00000008 B CTRPluginFramework::Screenshot::_readyEvent
07092788 00000008 B CTRPluginFramework::Screenshot::_task
07092790 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
07092798 00000008 B CTRPluginFramework::Screenshot::_timer
070927a0 00000004 B CTRPluginFramework::Screenshot::_display
070927a4 00000004 B CTRPluginFramework::Screenshot::_filecount
070927a8 00000004 B CTRPluginFramework::Screenshot::_mode
070927ac 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
070927b0 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
070927b8 00000008 B CTRPluginFramework::Screenshot::Timer
070927c0 00000001 B CTRPluginFramework::Screenshot::IsEnabled
070927c4 00000004 B CTRPluginFramework::ScreenImpl::Bottom
070927c8 00000004 B CTRPluginFramework::ScreenImpl::Top
070927cc 000000ac b CTRPluginFramework::_botBuf
07092878 000000ac b CTRPluginFramework::_topBuf
07092924 00000044 b CTRPluginFramework::g_previousException
07092968 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0709296c 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
07092970 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
07092978 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
07092984 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
07092990 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
070929a0 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
070929a4 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
07092a08 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
07092a0c 00000004 B CTRPluginFramework::ProcessImpl::MainThread
07092a10 00000008 B CTRPluginFramework::ProcessImpl::TitleId
07092a18 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
07092a1c 00000004 B CTRPluginFramework::ProcessImpl::Status
07092a20 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
07092a24 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
07092a28 00000004 B CTRPluginFramework::_pool
07092a2c 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07092a30 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
07092a38 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07092a40 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
07092a48 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07092a4c 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
07092a54 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
07092a58 00000004 b CTRPluginFramework::g_screenshotEntry
07092a5c 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
07092a60 00000004 b CTRPluginFramework::g_OpenFileLock
07092a64 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
07092a68 00000040 b CTRPluginFramework::g_hookExportFile
07092aa8 00000004 b CTRPluginFramework::g_HookMode
07092aac 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
07092ab0 00000008 b CTRPluginFramework::g_textXpos
07092ab8 00000004 b CTRPluginFramework::g_mode
07092abc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
07092ac0 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
07092acc 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
07092ad0 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
07092ad4 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
07092ad8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07092ae0 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07092ae8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07092af0 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
07092af8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07092afc 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
07092b04 00000004 b CTRPluginFramework::g_radioId
07092b08 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
07092b0c 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07092b10 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
07092b18 00000004 b CTRPluginFramework::__pmARinstance
07092b1c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
07092b20 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
07092b24 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
07092b28 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07092b30 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
07092b38 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07092b3c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
07092b4c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07092b50 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
07092b58 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
07092b5c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
07092b6c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07092b70 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
07092b80 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07092b84 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
07092b94 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07092b98 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
07092ba8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07092bac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
07092bbc 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
07092bc8 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
07092bd4 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
07092be0 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07092be4 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
07092bf4 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
07092bf8 00000004 B CTRPluginFramework::__g_hexEditor
07092bfc 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
07092c00 00000010 b CTRPluginFramework::GuideReader::Draw()::background
07092c10 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07092c18 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
07092c28 00000001 b CTRPluginFramework::g_progressLoop
07092c2c 00000004 b CTRPluginFramework::__converter
07092c30 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
07092c40 00000028 B CTRPluginFramework::Window::TopWindow
07092c68 00000028 B CTRPluginFramework::Window::BottomWindow
07092c90 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07092c94 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
07092ca0 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
07092ca4 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
07092ca8 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
07092cb0 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
07092cb1 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
07092cb4 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
07092cc0 00000050 b CTRPluginFramework::g_fpsCounter
07092d10 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
07092d18 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
07092d20 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
07092d28 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
07092d30 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
07092d38 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
07092d39 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
07092d3a 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
07092d3c 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
07092d5c 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
07092d68 0000000c B CTRPluginFramework::OSDImpl::Callbacks
07092d74 0000000c B CTRPluginFramework::OSDImpl::Notifications
07092d80 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
07092da4 0000000c B CTRPluginFramework::OSDImpl::RecLock
07092db0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
07092dc8 00000018 B CTRPluginFramework::OSDImpl::TopScreen
07092de0 00000004 B CTRPluginFramework::OSDImpl::OSDHook
07092de4 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
07092de8 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
07092dec 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
07092df0 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
07092e0c 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
07092e10 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
07092e14 0000000c B CTRPluginFramework::Font::_mutex
07092e20 00000004 B CTRPluginFramework::g_glyphAllocated
07092e24 00000004 B CTRPluginFramework::g_fontAllocated
07092e28 00000004 b CTRPluginFramework::g_context
07092e2c 00000001 b CTRPluginFramework::ToggleFloat
07092e2d 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
07092e30 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
07092e34 00000004 B CTRPluginFramework::ARHandler::ActiveData
07092e38 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
07092e3c 00000008 B CTRPluginFramework::ARHandler::Storage
07092e44 00000010 B CTRPluginFramework::ARHandler::Data
07092e54 00000008 B CTRPluginFramework::ARHandler::Offset
07092e60 00000fa0 b CTRPluginFramework::arStack
07093e00 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07093e04 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07093e10 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07093e14 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07093e20 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07093e21 00000001 b CTRPluginFramework::g_newCondDataToggle
07093e22 00000001 b CTRPluginFramework::g_condAgainstData
07093e24 00000004 b CTRPluginFramework::__arCodeEditor
07093e28 0000000c B CTRPluginFramework::g_codeTypes
07093e34 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07093e35 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07093e38 000000a8 B CTRPluginFramework::Preferences::Settings
07093ee0 00000008 B CTRPluginFramework::Preferences::Backlights
07093ee8 00000008 B CTRPluginFramework::Preferences::Flags
07093ef0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
07093ef4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07093ef8 000009c4 b CTRPluginFramework::g_rng
070948bc 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070948c0 00000004 B CTRPluginFramework::System::OnAbort
070948c4 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
070948c8 00000004 B CTRPluginFramework::Process::OnPauseResume
070948cc 00000004 B CTRPluginFramework::Process::exceptionCallback
070948d0 00000004 B CTRPluginFramework::Controller::_keysReleased
070948d4 00000004 B CTRPluginFramework::Controller::_keysHeld
070948d8 00000004 B CTRPluginFramework::Controller::_keysDown
070948dc 00000004 b CTRPluginFramework::g_runningInstance
070948e0 0000001c b CTRPluginFramework::g_dummy
070948fc 00000180 b CTRPluginFramework::g_keyName
07094a7c 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07094a80 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07094a84 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07094a86 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07094a88 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
07094aa4 00000004 b g_onLoadCroLock
07094aa8 00000004 b g_onSharedMemMapHook
07094aac 00000004 b g_onLoadCroHook
07094ab0 00000008 b CTRPluginFramework::g_mainThread
07094ab8 00000004 B CTRPluginFramework::g_keepEvent
07094abc 00000004 B CTRPluginFramework::g_keepThreadHandle
07094ac0 00000004 B CTRPluginFramework::g_continueGameEvent
07094ac8 00000008 B CTRPluginFramework::_sdmcArchive
07094ad0 00001000 b CTRPluginFramework::keepThreadStack
07095ad0 00000004 b g_mainThreadVars
07095ad4 00000001 b properInit
07095ad5 00000001 b fakeInit
07095ad8 00000004 b plgLdrRefCount
07095adc 00000004 b plgReply
07095ae0 00000004 b plgEvent
07095ae4 00000004 b plgLdrArbiter
07095ae8 00000004 b plgLdrHandle
07095aec 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
07095af0 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
07095af4 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
07095afc 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
07095b04 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
07095b08 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
07095b10 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
07095b18 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
07095b20 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
07095b24 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
07095b28 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
07095b2c 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
07095b30 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
07095b34 00000008 b CTRPluginFramework::g_sleepEvent
07095b3c 00000004 B CTRPluginFramework::SystemImpl::AptStatus
07095b40 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07095b44 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
07095b48 00000001 B CTRPluginFramework::SystemImpl::IsCitra
07095b49 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07095b4a 00000001 B _g_isCitra
07095b4c 000000a8 B CTRPluginFramework::Scheduler::_singleton
07095bf4 0000001c B CTRPluginFramework::HookManager::_singleton
07095c10 00000008 b CTRPluginFramework::Heap::g_heapPool
07095c18 0000000c b CTRPluginFramework::Heap::_mutex
07095c24 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
07095c28 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07095c2c 0000000c b sAddrMap
07095c38 0000000c B CTRPluginFramework::FSPath::FSMutex
07095c44 00000004 B CTRPluginFramework::EventManager::_firstTouch
07095c48 00000001 B CTRPluginFramework::EventManager::_isTouching
07095c4c 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
07095c50 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
07095c5c 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07095c60 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07095c70 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
07095c74 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
07095c84 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
07095c88 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
07095c98 00000018 b __threads
07095cb0 0000000c b __mutex
07095cbc 00000004 b errfRefCount
07095cc0 00000004 b errfHandle
07095cc4 00000004 b sharedFontAddr
07095cc8 00000004 B g_sharedFont
07095ccc 00000004 b srvRefCount
07095cd0 00000004 b srvHandle
07095cd4 00000004 b arbiter
07095cd8 00000004 b currentAddr
07095cdc 00000004 b maxAddr
07095ce0 00000004 b minAddr
07095ce4 00000004 b acRefCount
07095ce8 00000004 b acHandle
07095cec 00000004 b amRefCount
07095cf0 00000004 b amHandle
07095cf4 00000001 b flagValue.0
07095cf5 00000001 b flagInit.1
07095cf8 00000004 b serviceName.6
07095cfc 0000000c b aptFirstHook
07095d08 00000004 b aptLockHandle
07095d0c 00000004 b cfguRefCount
07095d10 00000004 b cfguHandle
07095d18 00000080 b fsExemptArchives
07095d98 00000004 b fsuRefCount
07095d9c 00000004 b fsuHandle
07095da0 00000001 b gspRunEvents
07095da4 00000004 b gspEventThread
07095da8 00000004 b gspEvent
07095dac 00000001 b gspGpuRight
07095db0 00000004 b gspSharedMem
07095db4 00000004 b gspSharedMemHandle
07095db8 00000004 b gspRefCount
07095dbc 00000004 b gspGpuHandle
07095dc0 00000001 b usingIrrst
07095dc4 00000004 b hidRefCount
07095dc8 00000006 b gRate
07095dd0 00000006 b aVec
07095dd8 00000004 b cPos
07095ddc 00000004 b tPos
07095de0 00000004 b kRepeat
07095de4 00000004 b kUp
07095de8 00000004 b kDown
07095dec 00000004 b kHeld
07095df0 00000004 b kOld
07095df4 00000004 B hidSharedMem
07095df8 00000014 B hidEvents
07095e0c 00000004 B hidMemHandle
07095e10 00000004 B hidHandle
07095e14 00000004 b irrstRefCount
07095e18 00000004 b csPos
07095e1c 00000004 b kHeld
07095e20 00000004 B irrstSharedMem
07095e24 00000004 B irrstEvent
07095e28 00000004 B irrstMemHandle
07095e2c 00000004 B irrstHandle
07095e30 00000004 b srvPmHandle
07095e34 00000004 b __sslc_refcount
07095e38 00000004 B __sslc_servhandle
07095e3c 00000004 V __ctru_heap_size
07095e40 00000004 B __ctru_linear_heap
07095e44 00000004 B __ctru_heap
07095e48 00000004 b (anonymous namespace)::get_static_cond()::once
07095e50 00000008 b (anonymous namespace)::fake_cond
07095e58 00000004 b (anonymous namespace)::static_cond
07095e5c 00000004 b (anonymous namespace)::get_static_mutex()::once
07095e60 00000010 b (anonymous namespace)::fake_mutex
07095e70 00000004 b (anonymous namespace)::static_mutex
07095e74 00000004 b (anonymous namespace)::__new_handler
07095e78 0000001c b (anonymous namespace)::emergency_pool
07095e94 00000004 b init
07095e98 00000001 B __eh_globals_init::_S_init
07095e9c 0000000c b (anonymous namespace)::eh_globals
07095ea8 00000010 V std::string::_Rep::_S_empty_rep_storage
07095eb8 00000028 B __malloc_current_mallinfo
07095ee0 00000004 B __malloc_max_total_mem
07095ee4 00000004 B __malloc_max_sbrked_mem
07095ee8 00000004 B __malloc_top_pad
07095eec 0000000c b __malloc_recursive_mutex
07095ef8 0000000c b __sfp_recursive_mutex
07095f08 00000168 B __sf
07096070 00000004 B __stdio_exit_handler
07096074 00000004 b prev_tzenv
07096078 0000000c b __tzname_dst
07096084 0000000c b __tzname_std
07096090 00000004 B _timezone
07096094 00000004 B _daylight
07096098 00000190 B __atexit0
07096228 00000004 B __atexit
0709622c 0000000c B __atexit_recursive_mutex
07096238 00000004 b initial_env
0709623c 0000000c b __env_recursive_mutex
07096248 00000004 b __tz_mutex
0709624c 00000004 b __hndl_lock
07096250 00000004 B fake_heap_start
07096254 00000004 B fake_heap_end
07096258 00000004 b heap_start.0
0709625c B __tls_start
07096288 B __bss_end__
07096288 A __end__
07096288 B __tls_end
