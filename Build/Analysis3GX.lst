00000000 d _TLS_MODULE_BASE_
00000000 00000001 D CTRPluginFramework::PrivColor::_format
00000000 a shift
00000000 a shift
00000004 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00000008 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
0000000c 00000008 B CTRPluginFramework::Renderer::_rendererContext
00000014 00000001 b __tls_guard
00000018 00000010 B CTRPluginFramework::PrivColor::_clampArea
00000028 00000001 B CTRPluginFramework::PrivColor::_useClamp
07000100 A __start__
07000100 T _start
07000104 T __service_ptr
07000108 t startup
07000128 t ClearMem
0700013c t ClrLoop
07000154 T _init
0700016c T initLib
0700018c T __ctru_exit
07000198 t .udivsi3_skip_div0_test
07000198 T __aeabi_uidiv
07000198 000001ec T __udivsi3
07000384 00000020 T __aeabi_uidivmod
070003a4 T __aeabi_idiv
070003a4 00000220 T __divsi3
070003ac t .divsi3_skip_div0_test
070005c4 00000020 T __aeabi_idivmod
070005e4 00000004 W __aeabi_idiv0
070005e4 00000004 W __aeabi_ldiv0
070005e8 0000019c T __aeabi_frsub
070005f0 00000194 T __aeabi_fsub
070005f0 00000194 T __subsf3
070005f4 00000190 T __addsf3
070005f4 00000190 T __aeabi_fadd
07000784 00000028 T __aeabi_ui2f
07000784 00000028 T __floatunsisf
0700078c 00000020 T __aeabi_i2f
0700078c 00000020 T __floatsisf
070007ac 0000008c T __aeabi_ul2f
070007ac 0000008c T __floatundisf
070007bc 0000007c T __aeabi_l2f
070007bc 0000007c T __floatdisf
07000838 T __aeabi_ldivmod
0700090c 00000014 T __restore_core_regs
0700090c 00000014 T restore_core_regs
07000920 T __gnu_Unwind_Restore_VFP
07000928 T __gnu_Unwind_Save_VFP
07000930 T __gnu_Unwind_Restore_VFP_D
07000938 T __gnu_Unwind_Save_VFP_D
07000940 T __gnu_Unwind_Restore_VFP_D_16_to_31
07000948 T __gnu_Unwind_Save_VFP_D_16_to_31
07000950 T __gnu_Unwind_Restore_WMMXD
07000994 T __gnu_Unwind_Save_WMMXD
070009d8 T __gnu_Unwind_Restore_WMMXC
070009ec T __gnu_Unwind_Save_WMMXC
07000a00 00000024 T ___Unwind_RaiseException
07000a00 00000024 T _Unwind_RaiseException
07000a24 00000024 T ___Unwind_Resume
07000a24 00000024 T _Unwind_Resume
07000a48 00000024 T ___Unwind_Resume_or_Rethrow
07000a48 00000024 T _Unwind_Resume_or_Rethrow
07000a6c 00000024 T ___Unwind_ForcedUnwind
07000a6c 00000024 T _Unwind_ForcedUnwind
07000a90 00000024 T ___Unwind_Backtrace
07000a90 00000024 T _Unwind_Backtrace
07000ac8 00000390 T strcmp
07000e50 T __aeabi_drsub
07000e58 000002b0 T __aeabi_dsub
07000e58 000002b0 T __subdf3
07000e5c 000002ac T __adddf3
07000e5c 000002ac T __aeabi_dadd
07001108 00000024 T __aeabi_ui2d
07001108 00000024 T __floatunsidf
0700112c 00000028 T __aeabi_i2d
0700112c 00000028 T __floatsidf
07001154 00000048 T __aeabi_f2d
07001154 00000048 T __extendsfdf2
0700119c 00000074 T __aeabi_ul2d
0700119c 00000074 T __floatundidf
070011b0 00000060 T __aeabi_l2d
070011b0 00000060 T __floatdidf
07001210 T __aeabi_uldivmod
0700124c t __do_global_dtors_aux
0700128c t frame_dummy
070012b8 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
0700133c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
0700133c 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
07001378 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070013f8 000004ec T CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)
070018e4 000000c8 t CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
070019ac 00000080 t CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07001a2c 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07001ab0 00000080 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<char const* const*>(char const* const*, char const* const*, std::forward_iterator_tag) [clone .isra.0]
07001b30 0000005c W CTRPluginFramework::Color::operator std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >() const
07001b8c 000000ec T CTRPluginFramework::calcBranch(CTRPluginFramework::MenuEntry*)
07001c78 00000104 T CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)
07001d7c 000001a4 T CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)
07001f20 00000150 T CTRPluginFramework::rangeWrite(CTRPluginFramework::MenuEntry*)
07002070 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070020f4 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07002164 00000070 T CTRPluginFramework::Draw::topScrDraw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
070021d4 00000010 T CTRPluginFramework::Draw::topScrDraw(int)
070021e4 000000b4 T CTRPluginFramework::RangeWriteManager::ErrorMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07002298 00000084 T CTRPluginFramework::RangeWriteManager::AccessCheck(unsigned long&)
0700231c 000000d8 T CTRPluginFramework::RangeWriteManager::SetFreeAddress()
070023f4 000001c4 T CTRPluginFramework::RangeWriteManager::SearchDataInput()
070025b8 00000264 T CTRPluginFramework::RangeWriteManager::SearchWrite()
0700281c 000000cc T CTRPluginFramework::RangeWriteManager::ReturnWrite()
070028e8 00000018 t __tcf_0
07002900 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07002984 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070029f4 000000e4 W unsigned long CTRPluginFramework::Utils::Search<unsigned long>(unsigned long, unsigned long, std::vector<unsigned long, std::allocator<unsigned long> > const&)
07002ad8 000001e0 t CTRPluginFramework::ToggleTouchscreenForceOn()
07002cb8 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
07002cbc 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07002d2c 000000f4 W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::vector(std::initializer_list<CTRPluginFramework::Hotkey>, std::allocator<CTRPluginFramework::Hotkey> const&)
07002d2c 000000f4 W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::vector(std::initializer_list<CTRPluginFramework::Hotkey>, std::allocator<CTRPluginFramework::Hotkey> const&)
07002e20 0000003c W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::~vector()
07002e20 0000003c W std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::~vector()
07002e5c 000006b4 T CTRPluginFramework::InitMenu(CTRPluginFramework::PluginMenu&)
07003510 00000208 T CTRPluginFramework::main()
07003718 0000003c t __tcf_0
07003754 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
070037d8 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07003848 00000080 T CTRPluginFramework::getFilePath[abi:cxx11]()
070038c8 00000028 T CTRPluginFramework::fileDelete(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070038f0 00000054 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07003944 000000e0 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
07003a24 00000254 T CTRPluginFramework::fileWriter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&, unsigned long&)
07003c78 0000080c T CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)
07004484 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07004508 00000070 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07004578 0000003c T CTRPluginFramework::codeASM(unsigned long)
070045b8 000004f8 T CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)
07004ab0 00000084 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.0]
07004b38 00000230 t CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::MenuEntry*)#1}::_FUN(CTRPluginFramework::MenuEntry*)
07004d68 00000170 T CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)
07004ed8 00000008 t CTRPluginFramework::GetWFAR()::{lambda()#1}::_FUN()
07004ee0 00000008 t CTRPluginFramework::GetDSCR()::{lambda()#1}::_FUN()
07004ee8 00000008 t CTRPluginFramework::WatchPointManager::Initialize()::{lambda()#1}::_FUN()
07004ef0 0000009c T CTRPluginFramework::WatchPointManager::Initialize()
07004f8c 0000010c T CTRPluginFramework::WatchPointManager::SetWatchPoint(unsigned long, unsigned long, unsigned long)
07005098 00000090 T CTRPluginFramework::WatchPointManager::DisableWatchPoint(unsigned long)
07005128 00000144 W void std::vector<CTRPluginFramework::WatchPointHit, std::allocator<CTRPluginFramework::WatchPointHit> >::_M_realloc_insert<unsigned long&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::WatchPointHit*, std::vector<CTRPluginFramework::WatchPointHit, std::allocator<CTRPluginFramework::WatchPointHit> > >, unsigned long&)
0700526c 0000007c T CTRPluginFramework::WatchPoint::GetHitData(unsigned long)
070052e8 0000012c T CTRPluginFramework::WatchPointManager::HandleException(ERRF_ExceptionInfo*, CpuRegisters*)
07005414 0000003c T CTRPluginFramework::__ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07005450 00000070 t _GLOBAL__sub_I__ZN18CTRPluginFramework17WatchPointManager10_singletonE
070054c0 0000004c t _GLOBAL__sub_D__ZN18CTRPluginFramework17WatchPointManager10_singletonE
0700550c T svcCustomBackdoor
07005514 T svcConvertVAToPA
0700551c T svcFlushDataCacheRange
07005524 T svcInvalidateEntireInstructionCache
0700552c T svcMapProcessMemoryEx
07005540 T svcUnmapProcessMemoryEx
07005548 T svcControlProcess
07005550 0000023c t CTRPluginFramework::ScreenToBMP(CTRPluginFramework::BMPImage::Pixel*, unsigned long, unsigned long, CTRPluginFramework::Screenshot::ImageBuffer*)
0700578c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070057e4 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
070057f8 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
07005820 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::capacity() const
0700583c 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned int)
07005864 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_move(char*, char const*, unsigned int)
0700588c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
07005938 000000f8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
07005a30 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07005ac0 00000280 T CTRPluginFramework::Screenshot::UpdateFileCount()
07005d40 00000048 T CTRPluginFramework::Screenshot::Initialize()
07005d88 00000374 T CTRPluginFramework::Screenshot::OSDCallback(unsigned long, void*, void*, int, int)
070060fc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0700618c 00000300 T CTRPluginFramework::Screenshot::TaskCallback(void*)
0700648c 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework10Screenshot9IsEnabledE
070064c8 000000d4 t _GLOBAL__sub_D__ZN18CTRPluginFramework10Screenshot9IsEnabledE
0700659c 00000024 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormat)
070065c0 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
070065c0 00000070 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
07006630 00000100 T CTRPluginFramework::ScreenImpl::Initialize()
07006730 00000050 T CTRPluginFramework::ScreenImpl::ApplyCtrpfScreens()
07006780 000000e0 T CTRPluginFramework::ScreenImpl::Fade(float)
07006860 0000005c T CTRPluginFramework::ScreenImpl::ImportFromGsp()
070068bc 00000028 T CTRPluginFramework::ScreenImpl::Release()
070068e4 00000070 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long, bool)
07006954 00000040 T CTRPluginFramework::ScreenImpl::Flush()
07006994 00000098 T CTRPluginFramework::ScreenImpl::Clear(bool)
07006a2c 00000044 T CTRPluginFramework::ScreenImpl::Copy()
07006a70 000000cc T CTRPluginFramework::ScreenImpl::Acquire(bool)
07006b3c 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
07006b44 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
07006ba0 00000050 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
07006bf0 0000003c T CTRPluginFramework::ScreenImpl::Clean()
07006c2c 0000008c T CTRPluginFramework::ScreenImpl::SwitchFrameBuffers(bool)
07006cb8 00000070 T CTRPluginFramework::ScreenImpl::AcquireFromGsp(bool)
07006d28 00000030 T CTRPluginFramework::ScreenImpl::CheckGspFrameBuffersInfo()
07006d58 00000060 T CTRPluginFramework::ScreenImpl::SwapBuffer()
07006db8 00000014 T CTRPluginFramework::ScreenImpl::SwapBufferInternal()
07006dcc 0000001c T CTRPluginFramework::ScreenImpl::GetBacklight()
07006de8 0000001c T CTRPluginFramework::ScreenImpl::SetBacklight(unsigned long)
07006e04 00000008 T CTRPluginFramework::ScreenImpl::GetFormat() const
07006e0c 00000008 T CTRPluginFramework::ScreenImpl::GetStride() const
07006e14 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel() const
07006e1c 0000001c T CTRPluginFramework::ScreenImpl::GetFrameBufferInfos(int&, int&, GSPGPU_FramebufferFormat&) const
07006e38 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(bool)
07006e54 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFrameBuffer(int, int)
07006ea8 0000002c T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(bool)
07006ed4 00000058 T CTRPluginFramework::ScreenImpl::GetRightFrameBuffer(int, int)
07006f2c 0000005c T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
07006f88 0000004c t CTRPluginFramework::ThreadPredicate(KThread*)
07006fd4 00000094 T CTRPluginFramework::ProcessImpl::Play(bool)
07007068 0000003c T CTRPluginFramework::ProcessImpl::LockGameThreads()
070070a4 00000038 T CTRPluginFramework::ProcessImpl::UnlockGameThreads()
070070dc 00000064 T CTRPluginFramework::ProcessImpl::IsValidAddress(unsigned long)
07007140 00000070 T CTRPluginFramework::ProcessImpl::GetMemRegion(unsigned long)
070071b0 00000094 T CTRPluginFramework::ProcessImpl::GetNextRegion(MemInfo const&)
07007244 000000a8 T CTRPluginFramework::ProcessImpl::GetPreviousRegion(MemInfo const&)
070072ec 00000038 T CTRPluginFramework::ProcessImpl::EnableExceptionHandlers()
07007324 0000001c T CTRPluginFramework::ProcessImpl::DisableExceptionHandlers()
07007340 00000038 T CTRPluginFramework::ProcessImpl::ReturnFromException(CpuRegisters*)
07007358 t _store_reg_loop
07007378 0000000c T CTRPluginFramework::ProcessImpl::SignalExit()
07007384 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
07007384 00000028 W std::_Vector_base<MemInfo, std::allocator<MemInfo> >::~_Vector_base()
070073ac 000000ec W void std::vector<MemInfo, std::allocator<MemInfo> >::_M_realloc_insert<MemInfo const&>(__gnu_cxx::__normal_iterator<MemInfo*, std::vector<MemInfo, std::allocator<MemInfo> > >, MemInfo const&)
07007498 0000003c W std::vector<MemInfo, std::allocator<MemInfo> >::push_back(MemInfo const&)
070074d4 000000bc T CTRPluginFramework::ProcessImpl::UpdateMemRegions(bool)
07007590 00000424 T CTRPluginFramework::ProcessImpl::Initialize()
070079b4 0000006c T CTRPluginFramework::ProcessImpl::Pause(bool)
07007a20 000000e0 T CTRPluginFramework::ProcessImpl::ExceptionHandler(ERRF_ExceptionInfo*, CpuRegisters*)
07007b00 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07007b0c 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework11ProcessImpl13ProcessHandleE
07007b40 0000000c t KProcess::GetCurrent()::{lambda()#1}::_FUN()
07007b4c 00000018 t KProcess::PatchCategory(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07007b64 00000040 t KProcess::PatchMaxPriority(unsigned long)::{lambda(KProcess*, unsigned long, unsigned long)#1}::_FUN(KProcess*, unsigned long, unsigned long)
07007ba4 00000044 t KProcess::PatchMaxThreads()::{lambda(KProcess*, unsigned long)#1}::_FUN(KProcess*, unsigned long)
07007be8 00000010 t KProcess::PatchCore2Access()::{lambda(KProcess*)#1}::_FUN(KProcess*)
07007bf8 00000014 t Kernel::Memcpy(void*, void const*, unsigned long)::{lambda(void*, void*, unsigned long)#1}::_FUN(void*, void*, unsigned long)
07007c0c 00000004 T Kernel::Initialize()
07007c10 00000018 T Kernel::Memcpy(void*, void const*, unsigned long)
07007c28 0000000c T KProcess::GetCurrent()
07007c34 00000024 T KProcess::PatchCore2Access()
07007c58 0000002c T KProcess::PatchCategory(unsigned long)
07007c84 00000014 T KProcess__PatchCategory
07007c98 0000002c T KProcess::PatchMaxPriority(unsigned long)
07007cc4 00000014 T KProcess__PatchMaxPriority
07007cd8 00000028 T KProcess::PatchMaxThreads()
07007d00 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07007d00 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
07007d90 00000044 T CTRPluginFramework::Search::UpdateProgress()
07007dd4 00000048 T CTRPluginFramework::Search::Cancel()
07007e1c 00000184 T CTRPluginFramework::Search::CheckNextRegion()
07007fa0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07007ff8 0000015c W std::__cxx11::to_string(unsigned long)
07008154 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070081d4 00000008 T CTRPluginFramework::Search::GetHeader() const
070081dc 00000048 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
07008224 0000000c T CTRPluginFramework::Search::GetType() const
07008230 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
07008248 00000070 T CTRPluginFramework::Search::WriteHeader()
070082b8 00000058 T CTRPluginFramework::Search::WriteResults()
07008310 00000048 T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
07008358 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
07008358 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
070083b8 000000ec W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
070084a4 00000084 T CTRPluginFramework::Search::CreateIndexTable()
07008528 0000013c T CTRPluginFramework::Search::ExecuteSearch()
07008664 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
070086dc 00000034 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
07008710 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008710 000001f0 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07008900 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
0700894c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0700894c 00000250 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
07008b9c 0000022c T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
07008dc8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07008e20 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07008e60 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
07008f14 00000058 T CTRPluginFramework::SearchMenu::_JumpInEditor()
07008f6c 00000034 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
07008fa0 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07009020 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
07009020 00000094 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector<char const* const*, void>(char const* const*, char const* const*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
070090b4 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
070090b4 000000a0 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
07009154 00000198 T CTRPluginFramework::SearchMenu::Update()
070092ec 0000018c T CTRPluginFramework::SearchMenu::_Edit()
07009478 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
070094f4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070094f4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07009560 00000050 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
070095b0 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07009658 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
070097b4 0000014c T CTRPluginFramework::SearchMenu::_Export()
07009900 000005b8 T CTRPluginFramework::SearchMenu::Draw()
07009eb8 0000011c T CTRPluginFramework::SearchMenu::_ShowGame()
07009fd8 00000518 T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0700a4f0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0700a504 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0700a518 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0700a52c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0700a530 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0700a534 00000028 t CTRPluginFramework::Screenshot_Enabler(CTRPluginFramework::MenuEntryTools*)
0700a55c 000000bc t __tcf_1
0700a618 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0700a658 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700a6b0 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0700a6f0 00000024 W CTRPluginFramework::Preferences::Toggle(unsigned long long)
0700a714 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0700a728 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0700a73c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0700a750 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0700a764 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0700a778 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0700a78c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0700a7a0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0700a7b4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0700a7c8 00000150 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0700a918 0000014c T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0700aa64 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0700aaa4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0700ab24 00000180 t CTRPluginFramework::InitFsTryOpenFileHook() [clone .part.0]
0700aca4 000000c0 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700ad64 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0700adc8 00000b2c T CTRPluginFramework::PluginMenuTools::InitMenu()
0700b8f4 00000080 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700b974 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0700b9dc 00000108 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0700bae4 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700bae4 00000190 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0700bc74 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0700bd20 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned int, char)
0700bd90 00000114 W std::__cxx11::to_string(int)
0700bea4 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700beb4 00000190 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0700c044 0000016c t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0700c1b0 00000048 t CTRPluginFramework::Reboot()
0700c1f8 00000054 t CTRPluginFramework::Shutdown()
0700c24c 0000013c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > CTRPluginFramework::operator<< <unsigned long, (void*)0>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0700c388 000001fc t CTRPluginFramework::UpdateScreenshotText()
0700c584 00000460 t CTRPluginFramework::ScreenshotMenuCallback()
0700c9e4 00000130 T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0700cb14 00000164 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0700cc78 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0700ccac 00000044 t CTRPluginFramework::ScreenshotMenuCallback()::{lambda(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)#1}::_FUN(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)
0700ccf0 0000065c t CTRPluginFramework::EditBacklight(CTRPluginFramework::MenuEntryTools*)
0700d34c 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700d36c 00000048 t _GLOBAL__sub_D__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0700d3b4 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0700d3f0 00000010 t CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
0700d400 0000002c t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .isra.0]
0700d42c 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700d42c 00000028 W CTRPluginFramework::Mutex::~Mutex()
0700d454 00000024 W CTRPluginFramework::File::~File()
0700d454 00000024 W CTRPluginFramework::File::~File()
0700d478 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700d478 00000038 W CTRPluginFramework::TextBox::~TextBox()
0700d4b0 00000020 W CTRPluginFramework::TextBox::~TextBox()
0700d4d0 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700d4d0 00000108 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long)
0700d5d8 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0700d5e0 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0700d600 00000190 T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700d790 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0700d7b0 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0700d7cc 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0700d7e8 00000010 T CTRPluginFramework::PluginMenuImpl::GetRunningInstance()
0700d7f8 00000008 T CTRPluginFramework::PluginMenuImpl::GetHexEditorState() const
0700d800 00000008 T CTRPluginFramework::PluginMenuImpl::ShowWelcomeMessage(bool)
0700d808 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0700d810 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0700d818 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700d818 00000028 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0700d840 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700d840 00000028 W std::_Vector_base<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::~_Vector_base()
0700d868 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700d868 00000028 W std::_Vector_base<void (*)(), std::allocator<void (*)()> >::~_Vector_base()
0700d890 00000138 W __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > std::find<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (*)()>(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, __gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >, void (* const&)())
0700d9c8 0000003c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuImpl::Run()::{lambda(void (*)())#1}>::operator()<__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > > >(__gnu_cxx::__normal_iterator<void (**)(), std::vector<void (*)(), std::allocator<void (*)()> > >) [clone .isra.0]
0700da04 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700da04 00000050 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
0700da54 00000100 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0700db58 00000750 T CTRPluginFramework::PluginMenuImpl::Run()
0700e2a8 00000050 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0700e2f8 000000a0 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0700e398 00000104 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700e49c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700e49c 00000074 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0700e510 00000198 W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0700e6a8 00000120 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0700e7c8 000001a4 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
0700e96c 00000048 W unsigned long* std::__uninitialized_default_n_1<true>::__uninit_default_n<unsigned long*, unsigned int>(unsigned long*, unsigned int)
0700e9b4 000000b0 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0700ea64 0000003c W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0700eaa0 00000134 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700ebd4 00000140 T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV11 const&, CTRPluginFramework::File&)
0700ed14 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700ed20 00000014 t _GLOBAL__sub_D__ZN18CTRPluginFramework14PluginMenuImpl16_runningInstanceE
0700ed34 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700ed34 000001a4 W CTRPluginFramework::PluginMenuSearch::~PluginMenuSearch()
0700eed8 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700eed8 000001c4 T CTRPluginFramework::PluginMenuImpl::~PluginMenuImpl()
0700f09c 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0700f0f4 000000c0 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700f1b4 000000ec t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0700f2a0 000000bc t __tcf_1
0700f35c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0700f3b4 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0700f3c0 00000328 T CTRPluginFramework::PluginMenuHome::_RenderTop()
0700f6e8 00000134 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0700f820 00000498 T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0700fcb8 00000118 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0700fdd0 00000090 T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0700fe60 00000038 T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0700fe98 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0700fec4 000000ec T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0700ffb0 00000084 T CTRPluginFramework::PluginMenuHome::_StarItem()
07010034 00000080 T CTRPluginFramework::PluginMenuHome::Init()
070100b4 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
07010110 000000c0 T CTRPluginFramework::PluginMenuHome::UpdateNote()
070101d0 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070101d0 000004ac T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0701067c 00000130 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
070107ac 00000050 t CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::{lambda(void*)#1}::_FUN(void*)
070107fc 00000088 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
07010888 000003ac T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
07010c34 00000224 T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
07010e58 00000024 t std::_Vector_base<unsigned long, std::allocator<unsigned long> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
07010e7c 00000064 t std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl* const*, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07010ee0 00000064 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >) [clone .isra.0]
07010f44 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07010f44 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
07010f80 00000138 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
070110b8 0000017c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
07011234 00000058 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0701128c 00000194 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
07011420 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
07011438 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV11&, CTRPluginFramework::File&)
070115f8 000000e8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
070116e0 000001c0 T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
070118a0 000000e8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
07011988 00000088 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
07011a10 00000014 t CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::{lambda(void*)#1}::_FUN(void*)
07011a24 00000024 t CTRPluginFramework::PluginMenuActionReplay::Initialize()::{lambda(void*)#1}::_FUN(void*)
07011a48 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07011aa0 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
07011ae0 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07011b20 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07011b74 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
07011b98 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
07011bc0 00000030 W CTRPluginFramework::ARCode::~ARCode()
07011bc0 00000030 W CTRPluginFramework::ARCode::~ARCode()
07011bf0 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07011bf0 000000bc W std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
07011cac 00000034 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
07011ce0 00000014 t __tcf_1
07011cf4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07011d74 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
07011e94 000000e4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
07011f78 0000005c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07011fd4 00000178 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
0701214c 0000011c t CTRPluginFramework::ProcessPathString(unsigned char*)
07012268 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
07012268 00000254 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
070124bc 000001cc T CTRPluginFramework::PluginMenuActionReplay::_OpenFileBtn_OnClick()
07012688 00000104 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0701278c 00000178 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
07012904 00000120 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07012a24 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
07012a60 0000014c T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
07012bac 0000003c W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long const, unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
07012be8 00000104 t std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&) [clone .isra.0]
07012cec 0000026c T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
07012f58 000000cc T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
07013024 000001bc T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
070131e0 000001a0 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
07013380 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
07013390 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
070133a0 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
070133b0 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
070133b8 00000024 t std::_Vector_base<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_allocate(unsigned int) [clone .part.0] [clone .isra.0]
070133dc 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
070133dc 00000030 W CTRPluginFramework::MenuItem::~MenuItem()
0701340c 00000020 W CTRPluginFramework::MenuItem::~MenuItem()
0701342c 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0701342c 000000e4 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013510 00000020 T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
07013530 00000010 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
07013540 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
07013590 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](unsigned long)
070135a8 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
070135cc 000000b0 T CTRPluginFramework::MenuFolderImpl::Clear()
0701367c 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
0701368c 00000020 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
070136ac 000000e8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
07013794 00000058 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
070137ec 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070137ec 000000d4 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070138c0 00000020 T CTRPluginFramework::MenuEntryTools::Disable()
070138e0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
070138e0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07013900 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
07013920 00000058 T CTRPluginFramework::MenuEntryTools::Enable()
07013978 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
07013978 00000084 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
070139fc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070139fc 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013a5c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013a5c 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07013abc 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
07013ac0 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
07013ad4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07013b2c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07013b2c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07013b54 00000020 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
07013b74 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
07013b7c 00000014 T CTRPluginFramework::MenuEntryImpl::WasJustActivated() const
07013b90 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
07013b9c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
07013ba4 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
07013bc8 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
07013bf8 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
07013c14 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
07013c7c 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07013c7c 000000ec T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07013d68 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07013d68 000000f0 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
07013e58 00000204 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
0701405c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
07014098 00000058 T CTRPluginFramework::Menu::CloseAll()
070140f0 00000030 T CTRPluginFramework::Menu::~Menu()
070140f0 00000030 T CTRPluginFramework::Menu::~Menu()
07014120 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0701412c 00000008 T CTRPluginFramework::Menu::GetFolder() const
07014134 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0701413c 00000044 T CTRPluginFramework::Menu::GetSelectedItem()
07014180 000003b4 T CTRPluginFramework::Menu::Draw() const
07014538 00000098 T CTRPluginFramework::Menu::_ScrollUp(int)
070145d0 00000098 T CTRPluginFramework::Menu::_ScrollDown(int)
07014668 00000244 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
070148b0 0000016c T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
07014a1c 00000068 T CTRPluginFramework::Menu::ShowNote()
07014a84 00000008 T CTRPluginFramework::Menu::CloseNote()
07014a8c 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
07014a94 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07014a94 000000e4 T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
07014b78 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07014b78 0000012c T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
07014ca4 00000054 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
07014cf8 00000044 T CTRPluginFramework::Menu::Pop()
07014d3c 000000b4 T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
07014df0 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07014e48 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
07014e70 00000038 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.0]
07014ea8 00000040 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_allocate(unsigned int) [clone .isra.0]
07014ee8 00000014 t std::_Vector_base<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_deallocate(CTRPluginFramework::TouchKey*, unsigned int) [clone .isra.0]
07014efc 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07014efc 0000007c T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
07014f78 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
07014f80 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(unsigned long)
07014f88 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
07014f90 00000008 T CTRPluginFramework::KeyboardImpl::GetMessage[abi:cxx11]()
07014f98 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
07014fa0 00000008 T CTRPluginFramework::KeyboardImpl::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&))
07014fa8 0000005c T CTRPluginFramework::KeyboardImpl::Clear()
07015004 000001cc T CTRPluginFramework::KeyboardImpl::_RenderTop()
070151d0 000004e0 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
070156b0 000001c4 T CTRPluginFramework::KeyboardImpl::_UpdateScroll(float, bool)
07015874 00000040 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
070158b4 00000068 T CTRPluginFramework::UnitsToNextChar(char const*, int)
0701591c 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
070159ac 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
07015a2c 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
07015ab0 0000015c T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
07015c0c 0000016c T CTRPluginFramework::KeyboardImpl::_Update(float)
07015d78 00000060 T CTRPluginFramework::KeyboardImpl::_CheckInput()
07015dd8 00000074 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
07015e4c 000000a8 T CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)
07015ef4 0000051c T CTRPluginFramework::KeyboardImpl::_HandleManualKeyPress(CTRPluginFramework::Key)
07016410 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
07016418 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07016418 00000028 W std::_Vector_base<float, std::allocator<float> >::~_Vector_base()
07016440 00000074 W CTRPluginFramework::Rect<int>::Contains(int, int) const
070164b4 00000060 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_check_len(unsigned int, char const*) const
07016514 000000ec W void std::vector<float, std::allocator<float> >::_M_realloc_insert<float const&>(__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<float> > >, float const&)
07016600 0000002c W std::vector<float, std::allocator<float> >::push_back(float const&)
0701662c 000000e8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString* const&)
07016714 0000002c W std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::push_back(CTRPluginFramework::TouchKeyString* const&)
07016740 000002c0 T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07016a00 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
07016a64 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07016ac4 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016b18 00000054 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [3]>)(), (declval<CTRPluginFramework::Rect<int>&>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [3], CTRPluginFramework::Rect<int>&>(CTRPluginFramework::TouchKey*, char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07016b6c 00000058 t decltype (::new ((void*)(0)) CTRPluginFramework::TouchKey((declval<char const (&) [4]>)(), (declval<CTRPluginFramework::Rect<int>&>)(), (declval<int>)())) std::construct_at<CTRPluginFramework::TouchKey, char const (&) [4], CTRPluginFramework::Rect<int>&, int>(CTRPluginFramework::TouchKey*, char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07016bc4 000000f4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07016cb8 00000054 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07016d0c 00000714 T CTRPluginFramework::KeyboardImpl::_CheckKeys()
07017420 0000007c T CTRPluginFramework::KeyboardImpl::operator()(int&)
0701749c 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
070174d0 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070174d0 000001d8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070176a8 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070176a8 000001c8 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07017870 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
0701789c 00000118 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<int, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&>(int&&, int (&)(int, int, bool), CTRPluginFramework::Rect<int>&) [clone .isra.0]
070179b4 000000d8 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&, int>(char const (&) [4], CTRPluginFramework::Rect<int>&, int&&) [clone .isra.0]
07017a8c 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [3], CTRPluginFramework::Rect<int>&>(char const (&) [3], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07017b5c 000000d0 t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char const (&) [4], CTRPluginFramework::Rect<int>&>(char const (&) [4], CTRPluginFramework::Rect<int>&) [clone .isra.0]
07017c2c 000008bc T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
070184e8 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char&, CTRPluginFramework::Rect<int>&>(char&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
070185f4 0000010c t CTRPluginFramework::TouchKey& std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<char, CTRPluginFramework::Rect<int>&>(char&&, CTRPluginFramework::Rect<int>&) [clone .isra.0]
07018700 000001a8 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
070188a8 00000048 T CTRPluginFramework::KeyboardImpl::_Decimal()
070188f0 00000054 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
07018944 00000a54 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
07019398 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
07019914 0000057c T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
07019e90 00000040 T CTRPluginFramework::KeyboardImpl::_Qwerty()
07019ed0 0000004c T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
07019f20 0000049c T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
0701a3bc 00000368 T CTRPluginFramework::KeyboardImpl::Run()
0701a724 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701a724 00000038 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0701a75c 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
0701a788 00000030 t CTRPluginFramework::GetIndex(int)
0701a7b8 00000134 T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0701a8ec 00000074 T CTRPluginFramework::HotkeysModifier::_Update()
0701a960 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701a960 0000006c W CTRPluginFramework::Button::Button(CTRPluginFramework::Button const&)
0701a9cc 00000094 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0701aa60 000001cc T CTRPluginFramework::HotkeysModifier::operator()()
0701ac2c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::Button*>(CTRPluginFramework::Button*, CTRPluginFramework::Button*)
0701ac58 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701ac58 00000038 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0701ac90 00000110 W void std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::_M_realloc_insert<CTRPluginFramework::Button const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Button*, std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> > >, CTRPluginFramework::Button const&)
0701ada0 0000003c W std::vector<CTRPluginFramework::Button, std::allocator<CTRPluginFramework::Button> >::push_back(CTRPluginFramework::Button const&)
0701addc 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701addc 0000015c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701af38 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701af38 00000004 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701af3c 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701af3c 00000004 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701af40 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701af40 00000004 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701af44 00000018 W CTRPluginFramework::HexEditor::AsmView::~AsmView()
0701af5c 00000018 W CTRPluginFramework::HexEditor::IntegerView::~IntegerView()
0701af74 00000018 W CTRPluginFramework::HexEditor::ByteView::~ByteView()
0701af8c 0000019c T CTRPluginFramework::HexEditor::ByteView::Draw()
0701b128 0000013c T CTRPluginFramework::HexEditor::AsmView::Draw()
0701b264 000000f4 T CTRPluginFramework::HexEditor::IntegerView::Draw()
0701b358 00000040 t std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned int) [clone .isra.0]
0701b398 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701b3f0 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701b430 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
0701b430 0000014c T CTRPluginFramework::HexEditor::~HexEditor()
0701b57c 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0701b598 0000001c T CTRPluginFramework::HexEditor::_ClearHistory()
0701b5b4 00000074 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0701b628 0000002c T CTRPluginFramework::HexEditor::_MoveBackward()
0701b654 0000003c T CTRPluginFramework::HexEditor::_MoveForward()
0701b690 00000010 T CTRPluginFramework::HexEditor::Refresh()
0701b6a0 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0701b6e4 00000038 T CTRPluginFramework::HexEditor::_DiscardChanges()
0701b71c 0000002c T CTRPluginFramework::HexEditor::_GetSelectedItem()
0701b748 00000080 T CTRPluginFramework::HexEditor::Context::ScrollUp(unsigned long, bool)
0701b7c8 00000094 T CTRPluginFramework::HexEditor::Context::ScrollDown(unsigned long, bool)
0701b85c 000000cc T CTRPluginFramework::HexEditor::ByteView::EditValueAtCursor(unsigned long)
0701b928 000000c0 T CTRPluginFramework::HexEditor::IntegerView::EditValueAtCursor(unsigned long)
0701b9e8 000000b0 T CTRPluginFramework::HexEditor::AsmView::EditValueAtCursor(unsigned long)
0701ba98 000001b4 T CTRPluginFramework::HexEditor::IView::ProcessEventsCommon(CTRPluginFramework::HexEditor::Context&, CTRPluginFramework::Event&, short)
0701bc4c 00000010 T CTRPluginFramework::HexEditor::ByteView::ProcessEvent(CTRPluginFramework::Event&)
0701bc5c 00000010 T CTRPluginFramework::HexEditor::IntegerView::ProcessEvent(CTRPluginFramework::Event&)
0701bc6c 00000010 T CTRPluginFramework::HexEditor::AsmView::ProcessEvent(CTRPluginFramework::Event&)
0701bc7c 00000040 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_erase_at_end(CTRPluginFramework::HexEditor::Item*)
0701bcbc 0000006c T CTRPluginFramework::HexEditor::SetView(unsigned long)
0701bd28 000000d4 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0701bdfc 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0701be54 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701bed8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701bed8 00000200 T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0701c0d8 000001c8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0701c2a0 000000e4 T CTRPluginFramework::HexEditor::_JumpTo(int)
0701c384 000000b8 T CTRPluginFramework::HexEditor::_CreateCheat()
0701c43c 00000260 T CTRPluginFramework::HexEditor::_RenderTop(void*)
0701c69c 00000184 T CTRPluginFramework::HexEditor::_BrowseHistory()
0701c820 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
0701c8b0 000002b0 T CTRPluginFramework::HexEditor::ByteView::UpdateView()
0701cb60 00000270 T CTRPluginFramework::HexEditor::AsmView::UpdateView()
0701cdd0 000001e0 T CTRPluginFramework::HexEditor::IntegerView::UpdateView()
0701cfb0 00000060 W CTRPluginFramework::HexEditor::Item* std::__uninitialized_default_n_1<false>::__uninit_default_n<CTRPluginFramework::HexEditor::Item*, unsigned int>(CTRPluginFramework::HexEditor::Item*, unsigned int)
0701d010 00000184 W std::vector<CTRPluginFramework::HexEditor::Item, std::allocator<CTRPluginFramework::HexEditor::Item> >::_M_default_append(unsigned int)
0701d194 000001c8 T CTRPluginFramework::HexEditor::_Update()
0701d35c 0000028c T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0701d5e8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701d640 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
0701d680 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
0701d6f8 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0701d758 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
0701d7b4 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
0701d80c 00000344 t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0701db50 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701db50 000001e8 T CTRPluginFramework::GuideReader::GuideReader()
0701dd38 000000d4 T CTRPluginFramework::GuideReader::_LoadBMP()
0701de0c 000003d8 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0701e1e4 0000015c T CTRPluginFramework::GuideReader::Draw()
0701e340 00000074 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0701e3b4 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0701e40c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701e40c 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
0701e458 000000b0 T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
0701e508 00000098 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0701e5a0 000000f0 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
0701e690 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0701e710 00000360 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
0701ea70 0000013c T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
0701ebac 00000028 t CTRPluginFramework::GatewayRAMDumper::operator()()::{lambda(void*)#1}::_FUN(void*)
0701ebd4 000000b4 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0701ec88 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0701ecb8 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0701ed08 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0701ed74 00000280 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
0701eff4 0000032c T CTRPluginFramework::GatewayRAMDumper::operator()()
0701f320 000000e4 T CTRPluginFramework::Converter::Converter()
0701f320 000000e4 T CTRPluginFramework::Converter::Converter()
0701f404 00000010 T CTRPluginFramework::Converter::Instance()
0701f414 00000110 T CTRPluginFramework::Converter::_Draw()
0701f524 00000228 T CTRPluginFramework::Converter::operator()(unsigned long)
0701f74c 00000218 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0701f964 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0701f990 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0701f9cc 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0701fa08 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0701fa44 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0701fa80 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0701fabc 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0701fae8 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0701fb24 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0701fb60 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0701fb9c 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0701fbd8 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0701fc04 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0701fc40 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0701fc6c 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0701fc98 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0701fcc4 0000003c T CTRPluginFramework::Icon::DrawGameController25(int, int, bool)
0701fd00 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0701fd2c 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0701fd68 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0701fd94 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0701fdc8 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0701fe04 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0701fe30 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0701fe6c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0701fe98 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0701fec4 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0701fef0 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0701ff1c 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0701ff48 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0701ff74 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0701ffa0 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0701ffcc 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
07020008 0000002c T CTRPluginFramework::Icon::DrawUnsplash(int, int)
07020034 0000001c T CTRPluginFramework::Icon::DrawCustomIcon(CTRPluginFramework::CustomIcon const&, int, int)
07020050 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Icon17DefaultCustomIconE
07020084 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07020084 000000bc T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
07020140 00000028 T CTRPluginFramework::Window::~Window()
07020140 00000028 T CTRPluginFramework::Window::~Window()
07020168 00000064 T CTRPluginFramework::Window::Draw() const
070201cc 000000dc T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070202a8 00000018 T CTRPluginFramework::Window::DrawButton() const
070202c0 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
070202d8 00000018 T CTRPluginFramework::Window::MustClose() const
070202f0 00000028 T CTRPluginFramework::Window::Close() const
07020318 00000004 T CTRPluginFramework::Window::GetRect() const
0702031c 00000034 T CTRPluginFramework::Window::UpdateBackgrounds()
07020350 00000080 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
070203d0 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Window12BottomWindowE
070203f0 00000014 T CTRPluginFramework::UIContainer::UIContainer()
070203f0 00000014 T CTRPluginFramework::UIContainer::UIContainer()
07020404 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
07020404 00000028 T CTRPluginFramework::UIContainer::~UIContainer()
0702042c 00000024 T CTRPluginFramework::UIContainer::Draw()
07020450 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
07020484 000000e8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0702056c 00000034 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
070205a0 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
070205a0 00000074 T CTRPluginFramework::TouchKeyString::TouchKeyString(CTRPluginFramework::Rect<int>, bool)
07020614 00000008 T CTRPluginFramework::TouchKeyString::ForcePressed(bool)
0702061c 00000034 T CTRPluginFramework::TouchKeyString::CanUse()
07020650 000000cc T CTRPluginFramework::TouchKeyString::Draw()
0702071c 000000e8 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
07020804 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0702081c 00000014 T CTRPluginFramework::TouchKeyString::GetPosition(unsigned short&, float&)
07020830 00000018 T CTRPluginFramework::TouchKeyString::SetPosition(unsigned short, float)
07020848 00000048 T CTRPluginFramework::TouchKeyString::operator()()
07020890 00000008 T CTRPluginFramework::TouchKeyString::GetAcceptSoundEvent()
07020898 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07020898 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
07020944 00000008 W CTRPluginFramework::Drawable::operator()()
0702094c 000000e4 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
07020a30 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07020a88 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07020a88 0000008c T CTRPluginFramework::TouchKey::TouchKey(CTRPluginFramework::TouchKey&&)
07020b14 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07020b14 000000b8 T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
07020bcc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07020bcc 0000008c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
07020c58 0000004c T CTRPluginFramework::TouchKey::Clear()
07020ca4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020ca4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020cc4 00000020 T CTRPluginFramework::TouchKey::~TouchKey()
07020ce4 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
07020cec 00000008 T CTRPluginFramework::TouchKey::IsEnabled()
07020cf4 00000070 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Color const&)
07020d64 00000070 T CTRPluginFramework::TouchKey::Draw()
07020dd4 00000008 T CTRPluginFramework::TouchKey::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07020ddc 000000e8 W void std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> >::_M_realloc_insert<CTRPluginFramework::Glyph* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Glyph**, std::vector<CTRPluginFramework::Glyph*, std::allocator<CTRPluginFramework::Glyph*> > >, CTRPluginFramework::Glyph* const&)
07020ec4 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07020ec4 000000d4 W CTRPluginFramework::KeyContent::KeyContent(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07020f98 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07020f98 000000d0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
07021068 00000168 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070211d0 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070211d4 000002fc T CTRPluginFramework::TextBox::Draw()
070214d0 0000002c t std::_Vector_base<unsigned char*, std::allocator<unsigned char*> >::_M_allocate(unsigned int) [clone .isra.0]
070214fc 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07021554 00000094 T CTRPluginFramework::TextBox::TextBox()
07021554 00000094 T CTRPluginFramework::TextBox::TextBox()
070215e8 0000000c T CTRPluginFramework::TextBox::Open() const
070215f4 0000000c T CTRPluginFramework::TextBox::Close() const
07021600 00000008 T CTRPluginFramework::TextBox::IsOpen() const
07021608 00000228 T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
07021830 0000000c T CTRPluginFramework::TextBox::DrawConst() const
0702183c 00000094 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
070218d0 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
07021984 00000050 W std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_check_len(unsigned int, char const*) const
070219d4 000000a0 W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
07021a74 0000023c T CTRPluginFramework::TextBox::_GetTextInfos()
07021cb0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07021cb0 00000184 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
07021e34 00000160 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07021f94 0000012c T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
070220c0 0000011c T CTRPluginFramework::Renderer::GetTextSize(char const*)
070221dc 000001a4 T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
07022380 000001c8 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
07022548 00000064 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color, unsigned long)
070225ac 00000238 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::ScreenImpl*, CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color, unsigned long)
070227e4 000005a8 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int, unsigned long)
07022d8c 00000484 T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*, unsigned long)
07023210 00000074 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
07023284 00000070 T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
070232f4 00000084 T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
07023378 00000180 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
070234f8 000001f4 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070236ec 000000a0 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0702378c 000001ec T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
07023978 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
070239a8 00000170 t CTRPluginFramework::DrawLineV(unsigned long, CTRPluginFramework::Color const&, unsigned char*, unsigned long)
07023b18 00000020 t __tcf_1
07023b38 000001ec t CTRPluginFramework::Vector<int>& std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&) [clone .isra.0]
07023d24 000001a4 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
07023ec8 00000114 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
07023fdc 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
07024070 000000a4 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
07024114 000002b8 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
070243cc 00000050 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0702441c 00000104 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
07024520 0000003c t CTRPluginFramework::Line<int>& std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&) [clone .isra.0]
07024560 0000069c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
07024bfc 00000198 T CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07024d94 0000004c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
07024de0 000002c8 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
070250a8 000000c4 T CTRPluginFramework::ProcessingLogo::Draw(int, int)
0702516c 0000014c T CTRPluginFramework::Renderer::EndFrame(bool)
070252b8 00000020 T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
070252d8 00000020 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
070252f8 0000002c T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
07025324 00000034 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
07025358 00000028 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
07025380 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
070253a8 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
070253c8 00000030 T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
070253f8 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
07025440 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
07025484 00000144 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormat)
070255c8 0000002c T CTRPluginFramework::PrivColor::UseClamp(bool)
070255f4 00000040 t __tls_init
070255f4 00000040 T TLS init function for CTRPluginFramework::PrivColor::_clampArea
07025634 0000004c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int> const&)
07025680 0000009c T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702571c 00000094 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
070257b0 000000b0 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
07025860 000000bc T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0702591c 000000b8 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
070259d8 00000054 t CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask::{lambda(void*)#1}::_FUN(void*)
07025a2c 0000000c T CTRPluginFramework::OSDImpl::Lock()
07025a38 0000001c T CTRPluginFramework::OSDImpl::TryLock()
07025a54 0000000c T CTRPluginFramework::OSDImpl::Unlock()
07025a60 000000e8 T CTRPluginFramework::OSDImpl::PauseFrame()
07025b48 00000194 T CTRPluginFramework::OSDImpl::WaitFramePaused()
07025cdc 000000ac T CTRPluginFramework::OSDImpl::ResumeFrame(unsigned long)
07025d88 00000030 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl4LockEv
07025db8 000000dc t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl4LockEv
07025e94 00000094 T CTRPluginFramework::OSDImpl::DrawNotif_TaskFunc(void*)
07025f28 00000064 t CTRPluginFramework::GetBuffer(unsigned long)
07025f8c 000000ac t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.0]
07026038 00000030 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long) [clone .constprop.0]
07026068 00000010 t void std::__advance<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, int>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >&, int, std::random_access_iterator_tag) [clone .isra.0]
07026078 0000016c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)::{lambda(bool (*)(CTRPluginFramework::Screen const&))#1}>::operator()<__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > > >(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >) [clone .isra.0]
070261e8 00000058 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::OSDImpl::Update()::{lambda(CTRPluginFramework::OSDImpl::OSDMessage*)#1}>::operator()<__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > > >(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >) [clone .isra.0]
07026240 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07026240 00000130 T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
07026370 000000e0 T CTRPluginFramework::OSDImpl::UpdateScreens()
07026450 000000d0 T CTRPluginFramework::InstallOSD()
07026520 000000ac T CTRPluginFramework::OSDImpl::_Initialize()
070265cc 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
070265cc 00000028 W std::_Vector_base<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~_Vector_base()
070265f4 000000b4 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070266a8 000001a4 T CTRPluginFramework::OSDImpl::Update()
0702684c 00000058 T CTRPluginFramework::OSDImpl::OnTopScreenFrame()
070268a4 000000c8 T CTRPluginFramework::OSDImpl::OnBottomScreenFrame()
0702696c 000005e0 T CTRPluginFramework::OSDImpl::CallbackCommon(unsigned long, void*, void*, int, int, int)
07026f4c 0000008c T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
07026fd8 00000094 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0702706c 00000070 t _GLOBAL__sub_D__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
070270dc 0000007c T CTRPluginFramework::NumericTextBox::Draw()
07027158 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027158 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027178 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
07027198 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07027230 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.0]
07027268 00000060 T CTRPluginFramework::NumericTextBox::_UpdateVal()
070272c8 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
070272d8 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
070272e0 0000000c T CTRPluginFramework::NumericTextBox::Clear()
070272ec 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
070272ec 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
07027354 000000f4 T CTRPluginFramework::NumericTextBox::operator()()
07027448 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
07027458 00000074 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070274cc 00000024 t fontGetSystemFont
070274f0 00000010 T CTRPluginFramework::Glyph::Width() const
07027500 000004e4 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
070279e4 0000034c T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
07027d30 000000c4 T CTRPluginFramework::Font::Initialize()
07027df4 0000001c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07027e10 0000018c W std::_Hashtable<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int, unsigned int, std::__detail::_Hash_node<std::pair<unsigned long const, unsigned long>, false>*, unsigned int)
07027f9c 000000c8 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, unsigned long>, std::allocator<std::pair<unsigned long const, unsigned long> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
07028064 0000012c T CTRPluginFramework::Font::CacheGlyph(unsigned long)
07028190 0000008c T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0702821c 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0702823c 00000048 t _GLOBAL__sub_I__ZN18CTRPluginFramework15g_fontAllocatedE
07028284 00000078 t _GLOBAL__sub_D__ZN18CTRPluginFramework15g_fontAllocatedE
070282fc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
070282fc 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
07028300 00000014 T CTRPluginFramework::FloatingButton::Draw()
07028314 00000014 T CTRPluginFramework::FloatingButton::operator()()
07028328 00000018 T CTRPluginFramework::FloatingButton::~FloatingButton()
07028340 00000198 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
070284d8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
070284d8 00000040 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028518 00000094 T CTRPluginFramework::ComboBox::Draw()
070285ac 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__relocate_a_1<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.0]
07028624 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07028624 00000054 W CTRPluginFramework::ComboBox::~ComboBox()
07028678 00000020 W CTRPluginFramework::ComboBox::~ComboBox()
07028698 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
07028698 0000004c T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
070286e4 0000003c T CTRPluginFramework::ComboBox::Clear()
07028720 00000080 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
070287a0 000000a8 T CTRPluginFramework::ComboBox::operator()()
07028848 000000e8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028930 00000050 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07028980 0000015c T CTRPluginFramework::Button::Draw()
07028adc 00000070 T CTRPluginFramework::Button::operator()()
07028b4c 00000184 T CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)
07028cd0 00000038 T CTRPluginFramework::Button::~Button()
07028cd0 00000038 T CTRPluginFramework::Button::~Button()
07028d08 00000020 T CTRPluginFramework::Button::~Button()
07028d28 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028d28 00000194 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028ebc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07028ebc 00000020 T CTRPluginFramework::Button::Button(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07028edc 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028edc 00000098 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int))
07028f74 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07028f74 00000014 T CTRPluginFramework::Button::Button(unsigned long, CTRPluginFramework::Rect<int> const&, int (*)(int, int, bool))
07028f88 00000018 T CTRPluginFramework::Button::Enable(bool)
07028fa0 00000010 T CTRPluginFramework::Button::Enable()
07028fb0 00000010 T CTRPluginFramework::Button::Disable()
07028fc0 00000010 T CTRPluginFramework::Button::Lock()
07028fd0 00000010 T CTRPluginFramework::Button::Execute()
07028fe0 00000018 T CTRPluginFramework::Button::SetState(bool)
07028ff8 00000010 T CTRPluginFramework::Button::GetState() const
07029008 00000008 T CTRPluginFramework::Button::SetAcceptSoundEvent(CTRPluginFramework::SoundEngine::Event)
07029010 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
07029038 00000024 T CTRPluginFramework::BMPImage::BitmapFileHeader::Read(CTRPluginFramework::File&)
0702905c 00000024 T CTRPluginFramework::BMPImage::BitmapInformationHeader::Read(CTRPluginFramework::File&)
07029080 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
07029080 00000038 T CTRPluginFramework::BMPImage::~BMPImage()
070290b8 00000008 T CTRPluginFramework::BMPImage::IsLoaded() const
070290c0 00000008 T CTRPluginFramework::BMPImage::Width() const
070290c8 00000008 T CTRPluginFramework::BMPImage::Height() const
070290d0 00000008 T CTRPluginFramework::BMPImage::GetDimensions() const
070290d8 00000010 T CTRPluginFramework::BMPImage::data() const
070290e8 0000001c T CTRPluginFramework::BMPImage::end() const
07029104 00000014 W CTRPluginFramework::BMPImage::DataClear()
07029118 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
07029118 0000008c T CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
070291a4 00000034 T CTRPluginFramework::BMPImage::Unload()
070291d8 00000048 T CTRPluginFramework::BMPImage::ReverseChannels()
07029220 00000030 T CTRPluginFramework::BMPImage::RGBtoBGR()
07029250 000000d0 T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
07029320 0000006c T CTRPluginFramework::BMPImage::_CreateBitmap()
0702938c 00000024 T CTRPluginFramework::BMPImage::SetWidthHeight(unsigned long, unsigned long)
070293b0 0000011c T CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
070294cc 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
070294cc 00000054 T CTRPluginFramework::BMPImage::BMPImage(CTRPluginFramework::BMPImage const&, unsigned long, unsigned long)
07029520 000001dc T CTRPluginFramework::BMPImage::SaveImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070296fc 0000012c T CTRPluginFramework::BMPImage::OptimiseForRendering()
07029828 000000d4 T CTRPluginFramework::BMPImage::Draw(int, int)
070298fc 00000008 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Vector<int> const&)
07029904 000000fc T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
07029a00 00000318 T CTRPluginFramework::BMPImage::_LoadBitmap()
07029d18 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029d18 000000b0 T CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07029dc8 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07029e20 00000108 t RegBlock& std::vector<RegBlock, std::allocator<RegBlock> >::emplace_back<int&, int&>(int&, int&) [clone .isra.0]
07029f28 00000038 T ARM_Disasm::DisassembleBKPT[abi:cxx11](unsigned long)
07029f60 000000a8 T ARM_Disasm::DisassemblePLD[abi:cxx11](unsigned long)
0702a008 00000140 T ARM_Disasm::Decode01(unsigned long)
0702a148 00000028 T ARM_Disasm::Decode10(unsigned long)
0702a170 00000078 T ARM_Disasm::Decode11(unsigned long)
0702a1e8 00000054 T ARM_Disasm::DecodeMUL(unsigned long)
0702a23c 00000050 T ARM_Disasm::DecodeLDRH(unsigned long)
0702a28c 00000110 T ARM_Disasm::DecodeALU(unsigned long)
0702a39c 000000c4 T ARM_Disasm::Decode00(unsigned long)
0702a460 00000030 T ARM_Disasm::Decode(unsigned long)
0702a490 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
0702a510 0000035c T ARM_Disasm::DisassembleALU[abi:cxx11](Opcode, unsigned long)
0702a86c 00000078 T ARM_Disasm::DisassembleBranch[abi:cxx11](unsigned long, Opcode, unsigned long)
0702a8e4 00000070 T ARM_Disasm::DisassembleBX[abi:cxx11](unsigned long)
0702a954 00000080 T ARM_Disasm::DisassembleCLZ[abi:cxx11](unsigned long)
0702a9d4 00000448 T ARM_Disasm::DisassembleMem[abi:cxx11](unsigned long)
0702ae1c 00000220 T ARM_Disasm::DisassembleMemHalf[abi:cxx11](unsigned long)
0702b03c 000000a4 T ARM_Disasm::DisassembleMCR[abi:cxx11](Opcode, unsigned long)
0702b0e0 000000c0 T ARM_Disasm::DisassembleMLA[abi:cxx11](Opcode, unsigned long)
0702b1a0 000000c0 T ARM_Disasm::DisassembleUMLAL[abi:cxx11](Opcode, unsigned long)
0702b260 000000b0 T ARM_Disasm::DisassembleMUL[abi:cxx11](Opcode, unsigned long)
0702b310 00000090 T ARM_Disasm::DisassembleMRS[abi:cxx11](unsigned long)
0702b3a0 00000178 T ARM_Disasm::DisassembleMSR[abi:cxx11](unsigned long)
0702b518 00000114 T ARM_Disasm::DisassemblePackUnpack[abi:cxx11](Opcode, unsigned long)
0702b62c 00000064 T ARM_Disasm::DisassembleSWI[abi:cxx11](unsigned long)
0702b690 00000094 T ARM_Disasm::DisassembleSWP[abi:cxx11](Opcode, unsigned long)
0702b724 00000354 T ARM_Disasm::DisassembleMemblock[abi:cxx11](Opcode, unsigned long)
0702ba78 000002fc T ARM_Disasm::Disassemble[abi:cxx11](unsigned long, unsigned long)
0702bd74 00000050 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0702bdc4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702bdc4 00000078 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702be3c 00000020 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0702be5c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702be5c 0000004c T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702bea8 00000068 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702bf10 00000098 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702bfa8 00000130 T CTRPluginFramework::MenuEntryActionReplay::Update()
0702c0d8 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0702c0fc 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0702c120 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0702c144 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0702c16c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0702c194 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0702c1bc 00000100 W void std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> >::_M_realloc_insert<CTRPluginFramework::Hook const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hook*, std::vector<CTRPluginFramework::Hook, std::allocator<CTRPluginFramework::Hook> > >, CTRPluginFramework::Hook const&)
0702c2bc 00000050 W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0702c30c 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0702c334 0000010c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
0702c440 00001a50 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0702de90 000000b0 T CTRPluginFramework::ARHandler::Execute(CTRPluginFramework::ARCodeContext&)
0702df40 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0702df60 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0702dfd4 0000014c t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e120 00000360 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
0702e480 00000020 t __tcf_1
0702e4a0 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.0]
0702e4b8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0702e4e0 00000018 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0702e4f8 00000050 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0702e548 00000050 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e598 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702e5e0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702e5e0 00000050 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0702e630 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
0702e650 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
0702e6fc 00000040 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::size() const
0702e73c 00000068 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
0702e7a4 000000f0 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0702e894 00000104 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702e998 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .isra.0]
0702e9a8 00000118 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
0702eac0 00000038 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*) [clone .isra.0]
0702eaf8 000004b8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0702efb0 00000154 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_reserve_map_at_back(unsigned int)
0702f104 0000074c T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
0702f850 000000b0 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0702f900 00000140 t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0702fa40 00000040 t std::_Vector_base<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_allocate(unsigned int) [clone .isra.0]
0702fa80 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0702fad8 00000028 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check(unsigned int, char const*) const [clone .isra.0]
0702fb00 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702fb00 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702fb00 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0702fb00 0000004c T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0702fb4c 00000044 W bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0702fb90 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702fb90 00000020 W CTRPluginFramework::ARCodeEditor::CodeLine::~CodeLine()
0702fbb0 00000034 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0702fbe4 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
0702fc44 00000040 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0702fc84 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702fc84 00000144 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0702fdc8 000002b8 T CTRPluginFramework::ARCodeEditor::_RenderTop()
07030080 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
070300dc 00000050 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*) [clone .isra.0]
0703012c 00000068 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.0]
07030194 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07030240 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
07030240 00000078 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
070302b8 0000001c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
070302d4 0000003c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07030310 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07030344 00001454 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
07031798 0000008c T CTRPluginFramework::ARCodeEditor::_Update()
07031824 00000060 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
07031884 0000003c t CTRPluginFramework::ARCode& std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&) [clone .isra.0]
070318c0 00000030 t __tcf_1
070318f0 0000012c W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
07031a1c 0000003c t CTRPluginFramework::ARCodeEditor::CodeLine& std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&) [clone .isra.0]
07031a58 000002f4 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
07031d4c 00000688 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
070323d4 000001a8 t CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&) [clone .isra.0]
0703257c 000000b8 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
07032638 00000474 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
07032aac 000003cc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
07032e78 000001f4 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0703306c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
070330c4 00000090 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
07033154 0000003c T CTRPluginFramework::ARCode::IsCodeWithData() const
07033190 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
07033190 00000024 T CTRPluginFramework::ARCodeContext::ARCodeContext()
070331b4 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
070331dc 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
070331dc 00000034 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
07033210 000000b0 T CTRPluginFramework::ARCodeContext::Clear()
070332c0 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070332c0 00000110 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
070333d0 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070333d0 00000124 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
070334f4 000000f0 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070335e4 00000084 T CTRPluginFramework::ARCode::Update()
07033668 0000003c T CTRPluginFramework::ARCodeContext::Update()
070336a4 000000c0 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
07033764 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework11g_codeTypesE
07033784 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
070337b0 00000108 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
070338b8 000000f4 T CTRPluginFramework::Preferences::LoadBackgrounds()
070339ac 00000060 T CTRPluginFramework::Preferences::ApplyBacklight()
07033a0c 00000004 T CTRPluginFramework::Preferences::Initialize()
07033a10 00000214 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV11&)
07033c24 000000bc T CTRPluginFramework::Preferences::LoadSettings()
07033ce0 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
07033d3c 000000bc T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
07033df8 000000bc T CTRPluginFramework::Preferences::LoadSavedFavorites()
07033eb4 00000158 T CTRPluginFramework::Preferences::WriteSettings()
0703400c 0000020c t CTRPluginFramework::Preferences::LoadBackgrounds()::{lambda(void*)#1}::_FUN(void*)
07034218 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
070342c0 0000002c t _GLOBAL__sub_D__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
070342ec 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07034344 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07034384 000000bc T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07034440 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
07034478 0000005c T CTRPluginFramework::InitializeRandomEngine()
070344d4 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
07034554 0000005c t CTRPluginFramework::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070345b0 00000044 T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
070345f4 0000005c T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
07034650 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
070346d0 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703472c 000000dc T CTRPluginFramework::Utils::ConvertUTF16ToUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned short const*)
07034808 0000029c t CTRPluginFramework::ListFolders(CTRPluginFramework::MenuFolderImpl&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07034aa4 00000104 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int) [clone .isra.0]
07034ba8 00000034 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
07034bdc 0000013c T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07034d18 00000024 W std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> >::_M_dispose()
07034d3c 00000700 t CTRPluginFramework::SDExplorerInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0703543c 00000008 T CTRPluginFramework::Utils::FilePicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07035444 00000044 T CTRPluginFramework::Utils::DirectoryPicker(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035488 000000c8 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::_M_gen_rand()
07035550 00000054 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
070355a4 00000080 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
07035624 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
07035640 00000024 T CTRPluginFramework::ResetColor[abi:cxx11]()
07035664 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
07035678 00000014 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703568c 00000024 t __tcf_0
070356b0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070356b0 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
070356d8 0000004c T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
07035724 00000048 T CTRPluginFramework::LineWriter::Flush()
0703576c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
0703576c 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
07035788 00000064 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070357ec 00000018 T CTRPluginFramework::LineWriter::Close()
07035804 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07035804 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
07035830 00000018 T CTRPluginFramework::LineReader::~LineReader()
07035830 00000018 T CTRPluginFramework::LineReader::~LineReader()
07035848 0000005c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
070358a4 000000fc T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
070359a0 00000028 T CTRPluginFramework::Touch::IsDown()
070359c8 00000028 T CTRPluginFramework::Touch::GetPosition()
070359f0 00000020 T CTRPluginFramework::Time::AsSeconds() const
07035a10 00000028 T CTRPluginFramework::Time::AsMicroseconds() const
07035a38 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07035a38 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07035a3c 00000004 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
07035a40 00000030 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
07035a70 00000018 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
07035a88 00000008 W std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
07035a90 000000ac W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
07035b3c 00000034 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
07035b70 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07035b70 000000ac T CTRPluginFramework::Task::Task(long (*)(void*), void*, long)
07035c1c 00000048 T CTRPluginFramework::Task::Start() const
07035c64 0000004c T CTRPluginFramework::Task::Start(void*) const
07035cb0 00000064 T CTRPluginFramework::Task::Wait() const
07035d14 00000010 T CTRPluginFramework::System::IsNew3DS()
07035d24 00000010 T CTRPluginFramework::System::Reboot()
07035d34 00000040 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
07035d74 00000010 T CTRPluginFramework::Process::GetHandle()
07035d84 00000010 T CTRPluginFramework::Process::GetTitleID()
07035d94 00000024 T CTRPluginFramework::Process::GetTextSize()
07035db8 00000008 T CTRPluginFramework::Process::Pause()
07035dc0 00000010 T CTRPluginFramework::Process::Play(unsigned long)
07035dd0 000000a8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
07035e78 00000004 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
07035e7c 0000004c T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
07035ec8 0000001c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
07035ee4 00000020 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
07035f04 00000020 T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
07035f24 00000020 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
07035f44 00000024 T CTRPluginFramework::Process::ReturnToHomeMenu()
07035f68 0000005c T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035fc4 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
07035ffc 0000000c T CTRPluginFramework::HookContext::GetCurrent()
07036008 00000028 T CTRPluginFramework::HookContext::GetCallCode()
07036030 00000048 T CTRPluginFramework::Hook::Hook()
07036030 00000048 T CTRPluginFramework::Hook::Hook()
07036078 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
07036078 00000028 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook const&)
070360a0 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
070360a0 00000014 T CTRPluginFramework::Hook::Hook(CTRPluginFramework::Hook&&)
070360b4 00000064 T CTRPluginFramework::Hook::operator=(CTRPluginFramework::Hook&&)
07036118 00000050 T CTRPluginFramework::Hook::~Hook()
07036118 00000050 T CTRPluginFramework::Hook::~Hook()
07036168 0000001c T CTRPluginFramework::Hook::Initialize(unsigned long, unsigned long)
07036184 00000028 T CTRPluginFramework::Hook::InitializeForMitm(unsigned long, unsigned long)
070361ac 00000010 T CTRPluginFramework::Hook::SetFlags(unsigned long)
070361bc 0000001c T CTRPluginFramework::Hook::IsEnabled()
070361d8 00000120 T CTRPluginFramework::Hook::Enable()
070362f8 00000030 T CTRPluginFramework::Hook::Disable()
07036328 00000008 T CTRPluginFramework::Hook::GetContext() const
07036330 0000000c T CTRPluginFramework::FwkSettings::Get()
0703633c 000000cc T CTRPluginFramework::FwkSettings::SetThemeDefault()
07036408 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07036460 00000044 W CTRPluginFramework::FSPath::operator FS_Path()
070364a4 000000bc T CTRPluginFramework::File::Read(void*, unsigned long) const
07036560 000000f4 T CTRPluginFramework::File::Write(void const*, unsigned long)
07036654 000000d8 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0703672c 00000008 T CTRPluginFramework::File::Tell() const
07036734 0000002c T CTRPluginFramework::File::Rewind() const
07036760 00000030 T CTRPluginFramework::File::Flush() const
07036790 00000064 T CTRPluginFramework::File::GetSize() const
070367f4 00000008 T CTRPluginFramework::File::IsOpen() const
070367fc 00000044 T CTRPluginFramework::File::File()
070367fc 00000044 T CTRPluginFramework::File::File()
07036840 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07036840 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
07036868 00000094 T CTRPluginFramework::File::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070368fc 000000d4 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070369d0 00000084 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036a54 000000a0 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07036af4 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
07036b08 000000a8 T CTRPluginFramework::File::Close() const
07036bb0 0000017c T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07036d2c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07036d2c 0000005c T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
07036d88 0000009c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
07036e24 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07036e7c 00000078 t CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}::operator()(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&) const [clone .isra.0]
07036ef4 00000048 T CTRPluginFramework::Directory::Close() const
07036f3c 00000008 T CTRPluginFramework::Directory::IsOpen() const
07036f44 00000040 T CTRPluginFramework::Directory::Directory()
07036f44 00000040 T CTRPluginFramework::Directory::Directory()
07036f84 00000034 W std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> >::clear()
07036fb8 0000007c T CTRPluginFramework::Directory::~Directory()
07036fb8 0000007c T CTRPluginFramework::Directory::~Directory()
07037034 00000060 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.0]
07037094 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
07037094 0000004c T CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(unsigned long, char const*)
070370e0 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
070370f4 00000098 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703718c 000000a4 T CTRPluginFramework::Directory::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037230 000000d4 T CTRPluginFramework::Directory::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037304 00000094 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07037398 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
07037444 0000000c t CTRPluginFramework::Directory::DirectoryEntry::operator=(CTRPluginFramework::Directory::DirectoryEntry&&) [clone .isra.0]
07037450 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
070374e0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0703751c 000000dc T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070375f8 0000014c T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07037744 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
07037744 00000058 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0703779c 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
0703779c 0000001c W CTRPluginFramework::Directory::DirectoryEntry::DirectoryEntry(CTRPluginFramework::Directory::DirectoryEntry&&)
070377b8 0000011c t void std::__adjust_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, int, CTRPluginFramework::Directory::DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070378d4 00000084 t void std::__pop_heap<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>&)
07037958 00000068 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
070379c0 000000b4 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07037a74 00000044 W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<CTRPluginFramework::Directory::DirectoryEntry> >, std::is_move_constructible<CTRPluginFramework::Directory::DirectoryEntry>, std::is_move_assignable<CTRPluginFramework::Directory::DirectoryEntry> >::value, void>::type std::swap<CTRPluginFramework::Directory::DirectoryEntry>(CTRPluginFramework::Directory::DirectoryEntry&, CTRPluginFramework::Directory::DirectoryEntry&)
07037ab8 000001ec t void std::__introsort_loop<__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::Directory::DirectoryEntry*, std::vector<CTRPluginFramework::Directory::DirectoryEntry, std::allocator<CTRPluginFramework::Directory::DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(CTRPluginFramework::Directory::DirectoryEntry const&, CTRPluginFramework::Directory::DirectoryEntry const&)#1}>)
07037ca4 00000288 T CTRPluginFramework::Directory::_List() const
07037f2c 000000d4 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07038000 000000dc T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
070380dc 0000003c T CTRPluginFramework::Controller::Update()
07038118 00000018 T CTRPluginFramework::Clock::Clock()
07038118 00000018 T CTRPluginFramework::Clock::Clock()
07038130 0000002c T CTRPluginFramework::Clock::GetElapsedTime() const
0703815c 00000038 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
07038194 00000034 T CTRPluginFramework::Clock::Restart()
070381c8 00000004 T CTRPluginFramework::SoundEngine::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
070381cc 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
070381cc 00000074 T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long)
07038240 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuEntry*) const
07038254 00000004 T CTRPluginFramework::PluginMenu::operator+=(CTRPluginFramework::MenuEntry const*) const
07038258 00000048 T CTRPluginFramework::PluginMenu::Run() const
070382a0 00000008 T CTRPluginFramework::PluginMenu::ShowWelcomeMessage(bool) const
070382a8 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
070382b0 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
070382c0 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
070382cc 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
070382cc 00000030 W std::unique_ptr<CTRPluginFramework::PluginMenuImpl, std::default_delete<CTRPluginFramework::PluginMenuImpl> >::~unique_ptr()
070382fc 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
070382fc 00000018 T CTRPluginFramework::PluginMenu::~PluginMenu()
07038314 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038314 00000048 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703835c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
0703835c 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07038398 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
07038398 00000040 T CTRPluginFramework::MessageBox::~MessageBox()
070383d8 00000008 T CTRPluginFramework::MessageBox::operator()() const
070383e0 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
070383e0 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
07038408 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07038460 00000018 T CTRPluginFramework::Hotkey::~Hotkey()
07038460 00000018 T CTRPluginFramework::Hotkey::~Hotkey()
07038478 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
07038480 00000038 T CTRPluginFramework::Hotkey::IsPressed() const
070384b8 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070384b8 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
070384d4 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
070384d4 00000048 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0703851c 00000030 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
0703854c 0000001c T CTRPluginFramework::HotkeyManager::Count()
07038568 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
070385e8 0000001c T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
070385e8 0000001c T CTRPluginFramework::Hotkey::Hotkey(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038604 0000014c W void std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> >::_M_realloc_insert<CTRPluginFramework::Hotkey const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Hotkey*, std::vector<CTRPluginFramework::Hotkey, std::allocator<CTRPluginFramework::Hotkey> > >, CTRPluginFramework::Hotkey const&)
07038750 0000004c T CTRPluginFramework::HotkeyManager::operator+=(CTRPluginFramework::Hotkey const&)
0703879c 00000088 T CTRPluginFramework::Hotkey::AskForKeys()
07038824 00000138 T CTRPluginFramework::HotkeyManager::AskForKeys()
0703895c 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
070389d8 000000fc T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
07038ad4 000000c8 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
07038b9c 00000148 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
07038ce4 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6HotkeyC2Ev
07038d18 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038d18 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038d64 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038d64 00000050 T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038db4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07038db4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
07038de4 00000010 T CTRPluginFramework::MenuEntry::Disable() const
07038df4 0000000c T CTRPluginFramework::MenuEntry::SetGameFunc(void (*)(CTRPluginFramework::MenuEntry*)) const
07038e00 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
07038e08 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07038e60 000000c0 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07038f20 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038f20 00000048 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07038f68 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07038f68 0000006c T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07038fd4 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07038fd4 00000030 T CTRPluginFramework::Keyboard::~Keyboard()
07039004 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0703900c 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool)
07039028 00000044 T CTRPluginFramework::Keyboard::Open() const
0703906c 00000098 T CTRPluginFramework::Keyboard::Open(float&) const
07039104 00000008 T CTRPluginFramework::Keyboard::GetInput[abi:cxx11]() const
0703910c 00000008 T CTRPluginFramework::Keyboard::GetMessage[abi:cxx11]() const
07039114 00000008 T CTRPluginFramework::Keyboard::OnKeyboardEvent(void (*)(CTRPluginFramework::Keyboard&, CTRPluginFramework::KeyboardEvent&)) const
0703911c 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0703911c 00000090 T CTRPluginFramework::Keyboard::Keyboard(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070391ac 000000d0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) [clone .isra.0]
0703927c 00000094 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
07039310 00000090 T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070393a0 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
07039464 00000090 T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
070394f4 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
070395b8 00000090 T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
07039648 000000c4 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
0703970c 000000ac t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070397b8 000000d0 T CTRPluginFramework::Keyboard::Open(float&, float) const
07039888 00000104 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0703998c 00000104 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
07039a90 00000104 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
07039b94 00000074 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
07039c08 00000088 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
07039c90 00000070 t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned int, int const&, unsigned int) const [clone .isra.0]
07039d00 0000005c t std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&) [clone .isra.0]
07039d5c 000000c4 T CTRPluginFramework::Render::PullRandomCharacter[abi:cxx11](int)
07039e20 0000001c W std::_Hashtable<int, std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > >, std::allocator<std::pair<int const, std::__cxx11::basic_string<unsigned short, std::char_traits<unsigned short>, std::allocator<unsigned short> > > >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets()
07039e3c 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07039e74 00000064 t _GLOBAL__sub_D__ZN18CTRPluginFramework6Render11_randomSetsB5cxx11E
07039ed8 0000004c T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
07039f24 0000000c T CTRPluginFramework::OSD::GetTopScreen()
07039f30 000000e8 W void std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::_M_realloc_insert<CTRPluginFramework::OSDImpl::OSDMessage*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::OSDImpl::OSDMessage**, std::vector<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> > >, CTRPluginFramework::OSDImpl::OSDMessage*&&)
0703a018 00000088 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0703a0a0 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703a0a0 00000010 T CTRPluginFramework::CustomIcon::CustomIcon(CTRPluginFramework::CustomIcon::Pixel*, int, int, bool)
0703a0b0 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703a0b0 0000001c T CTRPluginFramework::CustomIcon::CustomIcon()
0703a0cc 00000110 T CTRPluginFramework::Color::Fade(float)
0703a1dc 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
0703a21c 0000007c T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
0703a298 00000220 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
0703a4b8 000000c8 T OnSharedMemMap(unsigned long, void*, MemPerm, MemPerm)
0703a580 00000008 t CTRPluginFramework::KeepThreadMain(void*)::{lambda(void const*)#1}::_FUN(void const*)
0703a588 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0703a5ec 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703a644 00000018 W CTRPluginFramework::ProcessImpl::UserProcessEventCallback(CTRPluginFramework::Process::Event)
0703a65c 00000028 T OnLoadCro
0703a684 000000ac T CTRPluginFramework::ThreadExit()
0703a730 00000054 T abort
0703a784 000000c8 T __entrypoint
0703a84c 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .isra.0]
0703a8cc 00000074 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int) [clone .isra.0]
0703a940 00000030 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703a970 000006f0 T CTRPluginFramework::KeepThreadMain(void*)
0703b060 000000b0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) [clone .isra.0]
0703b110 0000020c T CTRPluginFramework::Initialize()
0703b31c 00000044 T CTRPluginFramework::ThreadInit(void*)
0703b360 00000048 t _GLOBAL__sub_I_g_gspEventThreadPriority
0703b3a8 0000002c t _GLOBAL__sub_D_g_gspEventThreadPriority
0703b3d8 000000b8 t NCSNDCmd_Add
0703b490 00000084 t NCSNDCmd_Execute.constprop.0
0703b514 00000068 T ncsndNotifyAptEvent
0703b57c 00000004 t ncsndAptHook
0703b580 000001c8 T ncsndInit
0703b748 000000ac T ncsndExit
0703b7f4 00000024 T ncsndInitializeSound
0703b818 00000264 T ncsndPlaySound
0703ba7c 00000040 T ncsndStopSound
0703babc 00000090 T ncsndIsPlaying
0703bb4c T LoadCROHooked
0703bb60 T AR__ExecuteRoutine
0703bb88 t stackBak
0703bb90 0000003c T __syscall_getreent
0703bbcc 0000000c T __aeabi_read_tp
0703bbd8 0000003c T __getThreadLocalStorage
0703bc14 00000070 T __syscall_gettod_r
0703bc84 00000004 T __syscall_lock_acquire
0703bc88 00000004 T __syscall_lock_release
0703bc8c 00000004 T __syscall_lock_acquire_recursive
0703bc90 00000004 T __syscall_lock_release_recursive
0703bc94 00000054 T initThreadVars
0703bce8 0000005c T __system_initSyscalls
0703bd44 00000020 T __libctru_exit
0703bd64 0000001c T __appExit
0703bd80 00000190 T __createThread
0703bf10 00000110 T __startThread
0703c020 00000024 T threadGetHandle
0703c044 0000002c T threadFree
0703c070 00000024 T threadJoin
0703c094 00000020 T threadGetCurrent
0703c0b4 0000003c T threadExit
0703c0f0 00000020 t _thread_begin
0703c110 0000004c T hidInitFake
0703c15c 0000003c T hidExitFake
0703c198 0000002c T hidSetSharedMem
0703c1c4 0000003c T fontEnsureMappedExtension
0703c200 00000070 T plgLdrExit
0703c270 000000d4 T plgLdrInit
0703c344 00000050 T PLGLDR__GetPluginPath
0703c394 00000024 T PLGLDR__FetchEvent
0703c3b8 000000e8 T PLGLDR__Reply
0703c4a0 000000b0 T __system_allocateHeaps
0703c550 0000002c t CTRPluginFrameworkImpl::Services::GSP::GSPGPU__RegisterInterruptHook()
0703c57c 00000028 t CTRPluginFrameworkImpl::Services::GSP::ClearInterrupts()
0703c5a4 00000154 t CTRPluginFrameworkImpl::Services::GSP::InterruptReceiver(void*)
0703c6f8 00000080 t CTRPluginFrameworkImpl::Services::GSP::EnqueueEvent(signed char, bool)
0703c778 00000028 t CTRPluginFrameworkImpl::Services::GSP::plgVAtoGameVa(unsigned long*)
0703c7a0 00000028 t unsigned char* std::copy<unsigned char*, unsigned char*>(unsigned char*, unsigned char*, unsigned char*) [clone .isra.0]
0703c7c8 00000064 t void std::vector<unsigned long, std::allocator<unsigned long> >::_M_range_initialize<unsigned long const*>(unsigned long const*, unsigned long const*, std::forward_iterator_tag) [clone .isra.0]
0703c82c 000000d0 T CTRPluginFrameworkImpl::Services::GSP::Update(unsigned long, unsigned long, unsigned long)
0703c8fc 00000004 T __gsp__Update
0703c900 00000288 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo::FillFrameBufferFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfo&)
0703cb88 00000018 T CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared::FillFrameBuffersFrom(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&)
0703cba0 00000020 T CTRPluginFrameworkImpl::Services::GSP::TriggerPSCEvents()
0703cbc0 00000048 T CTRPluginFrameworkImpl::Services::GSP::PauseInterruptReceiver()
0703cc08 00000034 T CTRPluginFrameworkImpl::Services::GSP::ResumeInterruptReceiver()
0703cc3c 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank()
0703cc60 00000024 T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlank1()
0703cc84 0000003c T CTRPluginFrameworkImpl::Services::GSP::WaitForVBlankBoth()
0703ccc0 0000002c T CTRPluginFrameworkImpl::Services::GSP::SwapBuffer(int)
0703ccec 00000090 T CTRPluginFrameworkImpl::Services::GSP::WaitBufferSwapped(int)
0703cd7c 00000034 T CTRPluginFrameworkImpl::Services::GSP::ImportFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int)
0703cdb0 000000a8 T CTRPluginFrameworkImpl::Services::GSP::SetFrameBufferInfo(CTRPluginFrameworkImpl::Services::GSP::FrameBufferInfoShared&, int, bool)
0703ce58 0000017c T CTRPluginFrameworkImpl::Services::GSP::Initialize()
0703cfd4 0000003c t _GLOBAL__sub_I__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0703d010 00000020 t _GLOBAL__sub_D__ZN22CTRPluginFrameworkImpl8Services3GSP11BufferFlagsE
0703d030 000000ac T CTRPluginFramework::SystemImpl::Initialize()
0703d0dc 00000050 T CTRPluginFramework::SystemImpl::CheckCitra()
0703d12c 00000018 T CTRPluginFramework::SystemImpl::WantsToSleep()
0703d144 0000001c T CTRPluginFramework::SystemImpl::IsSleeping()
0703d160 0000003c T CTRPluginFramework::SystemImpl::ReadyToSleep()
0703d19c 00000020 T CTRPluginFramework::SystemImpl::WakeUpFromSleep()
0703d1bc 00000044 T CTRPluginFramework::SystemImpl::Status()
0703d200 00000010 t std::__atomic_base<unsigned long>::operator=(unsigned long) [clone .isra.0]
0703d210 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0703d210 00000060 T CTRPluginFramework::Scheduler::Core::Core()
0703d270 00000098 T CTRPluginFramework::Scheduler::Initialize()
0703d308 0000004c T CTRPluginFramework::Scheduler::Exit()
0703d354 00000040 t std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<CTRPluginFramework::TaskContext, (__gnu_cxx::_Lock_policy)2>&&) [clone .isra.0]
0703d394 00000044 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
0703d3d8 00000040 t std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [clone .isra.0]
0703d418 000001a4 T CTRPluginFramework::Scheduler::_PollTask(CTRPluginFramework::Scheduler::Core&)
0703d5bc 00000104 T CTRPluginFramework::Scheduler__CoreHandler(void*)
0703d6c0 00000058 T CTRPluginFramework::Scheduler::Core::Assign(CTRPluginFramework::Task const&)
0703d718 00000140 W void std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > >::_M_realloc_insert<std::shared_ptr<CTRPluginFramework::TaskContext> const&>(__gnu_cxx::__normal_iterator<std::shared_ptr<CTRPluginFramework::TaskContext>*, std::vector<std::shared_ptr<CTRPluginFramework::TaskContext>, std::allocator<std::shared_ptr<CTRPluginFramework::TaskContext> > > >, std::shared_ptr<CTRPluginFramework::TaskContext> const&)
0703d858 00000174 T CTRPluginFramework::Scheduler::Schedule(CTRPluginFramework::Task const&)
0703d9cc 00000044 t _GLOBAL__sub_I__ZN18CTRPluginFramework9Scheduler10_singletonE
0703da10 00000088 t _GLOBAL__sub_D__ZN18CTRPluginFramework9Scheduler10_singletonE
0703da98 00000020 t SetHookContextInTLS(CTRPluginFramework::HookContext*)
0703dab8 00000014 t decltype (::new ((void*)(0)) CTRPluginFramework::AsmWrapper()) std::construct_at<CTRPluginFramework::AsmWrapper>(CTRPluginFramework::AsmWrapper*) [clone .isra.0]
0703dacc 00000240 t GenerateAsm(CTRPluginFramework::AsmWrapper&, CTRPluginFramework::HookContext&)
0703dd0c 00000044 W CTRPluginFramework::Lock::~Lock()
0703dd0c 00000044 W CTRPluginFramework::Lock::~Lock()
0703dd50 000000d4 T CTRPluginFramework::HookManager::HookManager()
0703dd50 000000d4 T CTRPluginFramework::HookManager::HookManager()
0703de24 00000074 T CTRPluginFramework::HookManager::GetFreeHookWrapper(long&)
0703de98 00000064 T CTRPluginFramework::HookManager::GetAsmWrapper(CTRPluginFramework::HookContext*)
0703defc 000000d0 T CTRPluginFramework::HookManager::DisableHook(CTRPluginFramework::HookContext&)
0703dfcc 0000000c T CTRPluginFramework::HookManager::Lock()
0703dfd8 0000000c T CTRPluginFramework::HookManager::Unlock()
0703dfe4 00000068 T CTRPluginFramework::HookManager::PrepareToUnmapMemory()
0703e04c 00000078 T CTRPluginFramework::HookManager::RecoverFromUnmapMemory()
0703e0c8 000000c8 T __hook__CheckTlsValue
0703e190 00000144 W void std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> >::_M_realloc_insert<>(__gnu_cxx::__normal_iterator<CTRPluginFramework::AsmWrapper*, std::vector<CTRPluginFramework::AsmWrapper, std::allocator<CTRPluginFramework::AsmWrapper> > >)
0703e2d4 00000084 T CTRPluginFramework::HookManager::GetFreeAsmWrapper()
0703e358 0000015c T CTRPluginFramework::HookManager::ApplyHook(CTRPluginFramework::HookContext&)
0703e4b4 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework11HookManager10_singletonE
0703e4c0 00000044 t _GLOBAL__sub_D__ZN18CTRPluginFramework11HookManager10_singletonE
0703e504 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0703e528 00000004 t addrMapNodeDestructor(rbtree_node*)
0703e52c 00000144 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0703e670 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0703e678 0000006c T CTRPluginFramework::Heap::Free(void*)
0703e6e4 0000000c T CTRPluginFramework::Heap::SpaceFree()
0703e6f0 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0703e6fc 00000020 t _GLOBAL__sub_D__ZN18CTRPluginFramework4Heap12__ctrpf_heapE
0703e71c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703e774 000002b4 T CTRPluginFramework::FSPath::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0703ea28 0000003c W unsigned short* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned short, unsigned short>(unsigned short*, unsigned short*, unsigned short*)
0703ea64 000001d4 W std::vector<unsigned short, std::allocator<unsigned short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned int, unsigned short const&)
0703ec38 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0703ec38 000000c4 T CTRPluginFramework::FSPath::FSPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0703ecfc 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework6FSPath7FSMutexE
0703ed08 00000034 t _GLOBAL__sub_D__ZN18CTRPluginFramework6FSPath7FSMutexE
0703ed3c 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0703ed3c 000000a0 T CTRPluginFramework::EventManager::EventManager(unsigned long)
0703eddc 00000050 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::pop_front()
0703ee2c 00000038 T CTRPluginFramework::EventManager::Clear()
0703ee64 000001e8 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0703f050 00000068 T CTRPluginFramework::EventManager::PushEvent(CTRPluginFramework::Event const&)
0703f0b8 000002f0 T CTRPluginFramework::EventManager::ProcessEvents()
0703f3a8 000000cc T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0703f474 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0703f47c 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
0703f4d4 00000008 T CTRPluginFramework::SoundEngineImpl::Initializelibcwav()
0703f4dc 00000004 T CTRPluginFramework::SoundEngineImpl::NotifyAptEvent(APT_HookType)
0703f4e0 00000004 T CTRPluginFramework::SoundEngineImpl::SetVaToPaConvFunction(unsigned long (*)(void const*))
0703f4e4 00000048 T CTRPluginFramework::SoundEngineImpl::RegisterMenuSoundEvent(CTRPluginFramework::SoundEngine::Event, CTRPluginFramework::Sound&)
0703f52c 00000024 T CTRPluginFramework::SoundEngineImpl::PlayMenuSound(CTRPluginFramework::SoundEngine::Event)
0703f550 00000044 T CTRPluginFramework::SoundEngineImpl::ClearMenuSounds()
0703f594 00000128 W std::vector<CTRPluginFramework::Sound, std::allocator<CTRPluginFramework::Sound> >::_M_default_append(unsigned int)
0703f6bc 00000090 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int) [clone .isra.0]
0703f74c 00000200 T CTRPluginFramework::SoundEngineImpl::InitializeMenuSounds()
0703f94c 0000000c t _GLOBAL__sub_I__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0703f958 00000050 t _GLOBAL__sub_D__ZN18CTRPluginFramework15SoundEngineImpl10menuSoundsE
0703f9a8 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703fc38 000002a8 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
0703fee0 00000290 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
07040170 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
070401a4 0000031c T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
070404c0 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
070404c0 00000044 T CTRPluginFramework::SubMenu::~SubMenu()
07040504 0000001c T CTRPluginFramework::SubMenu::operator()()
07040520 000001f8 T CTRPluginFramework::SubMenu::Draw()
07040718 000000e0 T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
070407f8 00000008 T CTRPluginFramework::SubMenu::IsOpen()
07040800 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0704081c 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
07040854 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07040854 00000084 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
070408d8 000001ac T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
07040a84 00000058 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int) [clone .isra.0]
07040adc 00000040 t std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector() [clone .isra.0]
07040b1c 00000118 T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
07040c34 00000058 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
07040c8c 00000010 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
07040c9c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
07040cd0 0000002c W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
07040cfc 00000070 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
07040d6c 000000ec W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
07040e58 0000003c W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
07040e94 00000080 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&) [clone .constprop.0] [clone .isra.0]
07040f14 00000060 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
07040f74 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
070410e0 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
070410e0 00000470 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
07041550 00000264 T CTRPluginFramework::PluginMenuSearch::_ListRegion()
070417b4 00000040 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
070417f4 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
070418a0 000002bc T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
07041b5c 0000016c t CTRPluginFramework::ClearSearchFolder()
07041cc8 000000e8 T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
07041db0 000005f0 T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)
070423a0 0000003c W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region const, CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
070423dc 000002f0 T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
070426cc 000003ac T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
07042a78 000000c4 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
07042b3c 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07042b3c 00000178 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07042cb4 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07042cb4 00000158 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType, CTRPluginFramework::ClearScreen)
07042e0c 000002c0 T CTRPluginFramework::MessageBoxImpl::_Draw()
070430cc 000001f4 T CTRPluginFramework::MessageBoxImpl::operator()()
070432c0 00000030 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, ThreadVars*> >*) [clone .isra.0]
070432f0 00000090 t std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_get_insert_unique_pos(unsigned long const&) [clone .isra.0]
07043380 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
07043380 00000034 T CTRPluginFramework::ThreadEx::ThreadEx(void (*)(void*), unsigned long, unsigned long, int)
070433b4 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070433b4 00000020 T CTRPluginFramework::ThreadEx::~ThreadEx()
070433d4 00000054 T CTRPluginFramework::ThreadEx::Start(void*)
07043428 00000048 T CTRPluginFramework::ThreadEx::Join(bool)
07043470 00000008 T CTRPluginFramework::ThreadEx::GetStatus()
07043478 00000170 W std::_Rb_tree_iterator<std::pair<unsigned long const, ThreadVars*> > std::_Rb_tree<unsigned long, std::pair<unsigned long const, ThreadVars*>, std::_Select1st<std::pair<unsigned long const, ThreadVars*> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, ThreadVars*> > >::_M_emplace_hint_unique<std::pair<unsigned long, ThreadVars*> >(std::_Rb_tree_const_iterator<std::pair<unsigned long const, ThreadVars*> >, std::pair<unsigned long, ThreadVars*>&&)
070435e8 00000218 T __ctrpf_getThreadVars
07043800 00000038 t _GLOBAL__sub_I___ctrpf_getThreadVars
07043838 00000038 t _GLOBAL__sub_D___ctrpf_getThreadVars
07043870 0000000c T CTRPluginFramework::Sound::Sound()
07043870 0000000c T CTRPluginFramework::Sound::Sound()
0704387c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
0704387c 00000014 T CTRPluginFramework::Sound::Sound(CTRPluginFramework::Sound&&)
07043890 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07043890 00000034 T CTRPluginFramework::Sound::Sound(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070438c4 00000090 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound const&)
07043954 00000070 T CTRPluginFramework::Sound::operator=(CTRPluginFramework::Sound&&)
070439c4 00000058 T CTRPluginFramework::Sound::~Sound()
070439c4 00000058 T CTRPluginFramework::Sound::~Sound()
07043a1c 00000018 T CTRPluginFramework::Sound::GetLoadStatus()
07043a34 00000040 T CTRPluginFramework::Sound::Play(int, int)
07043a74 00000008 T CTRPluginFramework::Sound::Play(int)
07043a7c 00000008 T CTRPluginFramework::Sound::Play()
07043a84 00000384 t cwav_initialize
07043e08 000000f4 t cwav_stopImpl.part.0
07043efc 00000004 T cwavUseEnvironment
07043f00 00000034 T cwavSetVAToPACallback
07043f34 00000050 T cwavLoad
07043f84 000004d8 T cwavPlay
0704445c 00000064 T cwavStop
070444c0 00000170 T cwavFree
07044630 0000002c W MemBlock::Create(unsigned char*, unsigned long)
0704465c 00000034 W MemPool::DelBlock(MemBlock*)
07044690 0000005c T MemPool::CoalesceRight(MemBlock*)
070446ec 000000fc T MemPool::Allocate(MemChunk&, unsigned long, int)
070447e8 00000100 T MemPool::Deallocate(MemChunk const&)
070448e8 00000020 T MemPool::GetFreeSpace()
07044908 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
07044908 000000c4 T CTRPluginFramework::SoundImpl::SoundImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
070449cc 00000008 T CTRPluginFramework::SoundImpl::GetLoadStatus()
070449d4 00000018 T CTRPluginFramework::SoundImpl::Play(int, int)
070449ec 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
070449ec 00000028 T CTRPluginFramework::SoundImpl::~SoundImpl()
07044a14 000000d0 T CTRPluginFramework::Search32::FirstSearchUnknown()
07044ae4 000000c4 T CTRPluginFramework::Search32::FirstSearchSpecified()
07044ba8 00000064 W CTRPluginFramework::Search::~Search()
07044ba8 00000064 W CTRPluginFramework::Search::~Search()
07044c0c 00000044 T CTRPluginFramework::Search32::~Search32()
07044c0c 00000044 T CTRPluginFramework::Search32::~Search32()
07044c50 00000020 T CTRPluginFramework::Search32::~Search32()
07044c70 00000024 W CTRPluginFramework::Search::~Search()
07044c94 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07044c94 00000204 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
07044e98 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07044e98 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
07044eb8 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07044eb8 00000094 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
07044f4c 0000010c W std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07045058 000001b4 T CTRPluginFramework::Search32::SecondSearchSpecified()
0704520c 00000100 W std::vector<unsigned long, IAllocator<unsigned long> >::_M_default_append(unsigned int)
0704530c 0000019c T CTRPluginFramework::Search32::SecondSearchUnknown()
070454a8 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
070455e0 0000004c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
0704562c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
07045770 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
070458b4 0000003c t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .isra.0]
070458f0 00000068 W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
07045958 000000d8 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
07045a30 0000003c W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
07045a6c 00000080 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
07045aec 000000f8 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
07045be4 0000004c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
07045c30 0000032c T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
07045f5c 00000004 T cwav_defaultVAToPA
07045f60 00000004 T cwavEnvUseEnvironment
07045f64 00000008 T cwavEnvGetEnvironment
07045f6c 00000004 T cwavEnvInitialize
07045f70 00000004 T cwavEnvFinalize
07045f74 00000014 T cwavEnvCompatibleEncoding
07045f88 00000008 T cwavEnvGetChannelAmount
07045f90 00000018 T cwavEnvIsChannelAvailable
07045fa8 000000f4 T cwavEnvPlay
0704609c 00000004 T cwavEnvChannelIsPlaying
070460a0 00000004 T cwavEnvStop
070460a4 00000920 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070469c4 00000910 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
070472d4 000008e8 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07047bbc 00000c54 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048810 00000484 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07048c94 00000488 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704911c 0000047c T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049598 00000628 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
07049bc0 00000c88 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704a848 0000075c T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704afa4 00000408 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704b3ac 000006d4 T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704ba80 000008a4 T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704c324 00000928 T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704cc4c 00000924 T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704d570 00000de4 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0704e354 00000084 W envGetHandle
0704e3d8 00000050 W envDestroyHandles
0704e428 000000a4 T errfInit
0704e4cc 00000058 T errfExit
0704e524 0000003c T ERRF_Throw
0704e560 00000090 T ERRF_ExceptionHandler
0704e5f0 00000094 T fontEnsureMapped
0704e684 00000100 T fontGlyphIndexFromCodePoint
0704e784 00000070 T fontGetCharWidthInfo
0704e7f4 00000074 T osConvertVirtToPhys
0704e868 00000054 T osGetTimeRef
0704e8bc 000000ec T osGetTime
0704e9a8 0000012c T srvInit
0704ead4 00000058 T srvExit
0704eb2c 000000a0 T srvGetServiceHandleDirect
0704ebcc 00000038 T srvGetServiceHandle
0704ec04 00000038 T srvPublishToSubscriber
0704ec3c 0000000c T __sync_init
0704ec48 00000018 T __sync_fini
0704ec60 0000002c T syncArbitrateAddressWithTimeout
0704ec8c 0000001c T LightLock_Init
0704eca8 000000ac T LightLock_Lock
0704ed54 00000040 T LightLock_Unlock
0704ed94 00000024 T RecursiveLock_Init
0704edb8 00000030 T RecursiveLock_Lock
0704ede8 00000078 T RecursiveLock_TryLock
0704ee60 00000054 T RecursiveLock_Unlock
0704eeb4 00000040 T LightEvent_Init
0704eef4 000000a4 T LightEvent_Clear
0704ef98 00000048 T LightEvent_Pulse
0704efe0 000000c8 T LightEvent_Signal
0704f0a8 000000a0 T LightEvent_Wait
0704f148 00000014 T LightSemaphore_Init
0704f15c 00000094 T LightSemaphore_Acquire
0704f1f0 00000064 T LightSemaphore_Release
0704f254 000000b4 t mappableFindAddressWithin
0704f308 00000028 T mappableInit
0704f330 00000080 T mappableAlloc
0704f3b0 00000004 T mappableFree
0704f3b4 0000008c T acInit
0704f440 0000003c T acExit
0704f47c 000000a4 T amInit
0704f520 0000003c T amExit
0704f55c 00000158 T aptSendCommand
0704f6b4 00000030 T aptHook
0704f6e4 00000030 T aptUnhook
0704f714 00000028 T APT_PrepareToCloseApplication
0704f73c 00000048 T APT_CloseApplication
0704f784 0000007c T APT_CheckNew3DS
0704f800 00000048 T APT_GetSharedFont
0704f848 000000a4 T cfguInit
0704f8ec 0000003c T cfguExit
0704f928 00000054 T CFGU_GetSystemLanguage
0704f97c 000000cc T fsInit
0704fa48 0000003c T fsExit
0704fa84 000000cc T FSUSER_OpenFile
0704fb50 000000bc T FSUSER_DeleteFile
0704fc0c 000000f8 T FSUSER_RenameFile
0704fd04 000000bc T FSUSER_DeleteDirectoryRecursively
0704fdc0 000000d4 T FSUSER_CreateFile
0704fe94 000000c4 T FSUSER_CreateDirectory
0704ff58 000000f8 T FSUSER_RenameDirectory
07050050 000000b4 T FSUSER_OpenDirectory
07050104 00000094 T FSUSER_OpenArchive
07050198 00000058 T FSFILE_Read
070501f0 00000060 T FSFILE_Write
07050250 00000038 T FSFILE_GetSize
07050288 00000028 T FSFILE_SetSize
070502b0 0000003c T FSFILE_Close
070502ec 00000024 T FSFILE_Flush
07050310 00000028 T FSFILE_SetPriority
07050338 00000050 T FSDIR_Read
07050388 0000003c T FSDIR_Close
070503c4 000000f0 T gspExit
070504b4 00000024 W hidShouldUseIrrst
070504d8 0000018c T hidInit
07050664 000000e8 T hidExit
0705074c 000002a4 T hidScanInput
070509f0 00000010 T hidKeysHeld
07050a00 00000010 T hidKeysDown
07050a10 00000010 T hidKeysUp
07050a20 00000018 T hidTouchRead
07050a38 00000160 T irrstInit
07050b98 000000cc T irrstExit
07050c64 000000b4 T irrstScanInput
07050d18 00000024 T irrstKeysHeld
07050d3c 0000000c T srvPmGetSessionHandle
07050d48 000000b4 T sslcInit
07050dfc 00000048 T sslcExit
07050e44 00000048 T sslcGenerateRandomData
07050e8c 00000074 T rbtree_find
07050f00 00000010 T rbtree_init
07050f10 000001b0 t do_insert
070510c0 00000008 T rbtree_insert
070510c8 00000318 T rbtree_remove
070513e0 00000090 T rbtree_rotate
07051470 00000064 T decode_utf16
070514d4 0000013c T decode_utf8
07051610 00000054 T encode_utf16
07051664 000000e0 T encode_utf8
07051744 000000c0 T utf8_to_utf16
07051804 T svcQueryMemory
07051834 T svcExitProcess
0705183c T svcCreateThread
0705185c T svcExitThread
07051864 T svcSleepThread
0705186c T svcSetThreadPriority
07051874 T svcReleaseMutex
0705187c T svcCreateEvent
07051890 T svcSignalEvent
07051898 T svcClearEvent
070518a0 T svcMapMemoryBlock
070518a8 T svcUnmapMemoryBlock
070518b0 T svcCreateAddressArbiter
070518c4 T svcArbitrateAddress
070518dc T svcArbitrateAddressNoTimeout
070518e4 T svcCloseHandle
070518ec T svcWaitSynchronization
070518f4 T svcWaitSynchronizationN
0705191c T svcDuplicateHandle
07051930 T svcGetSystemTick
07051938 T svcGetSystemInfo
07051950 T svcGetProcessInfo
07051968 T svcConnectToPort
0705197c T svcSendSyncRequest
07051984 T svcOpenProcess
07051998 T svcGetProcessId
070519ac T svcGetThreadId
070519c0 T svcBreak
070519c8 T svcInvalidateProcessDataCache
070519d0 T svcFlushProcessDataCache
070519d8 T svcKernelSetState
070519e0 T svcQueryProcessMemory
07051a04 0000005c T rbtree_node_next
07051a60 00000004 T operator delete(void*)
07051a64 00000004 T operator delete(void*, std::nothrow_t const&)
07051a68 00000004 T operator delete(void*, unsigned int)
07051a6c 00000004 T operator delete[](void*)
07051a70 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
07051a7c 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
07051a88 0000000c W __gnu_cxx::__concurrence_broadcast_error::what() const
07051a94 0000000c W __gnu_cxx::__concurrence_wait_error::what() const
07051aa0 00000038 t (anonymous namespace)::init()
07051ad8 00000024 t (anonymous namespace)::init_static_cond()
07051afc 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07051afc 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07051b1c 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
07051b48 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07051b48 00000020 W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07051b68 0000002c W __gnu_cxx::__concurrence_wait_error::~__concurrence_wait_error()
07051b94 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07051b94 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07051bb4 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
07051be0 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
07051be0 00000020 W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
07051c00 0000002c W __gnu_cxx::__concurrence_broadcast_error::~__concurrence_broadcast_error()
07051c2c 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
07051c58 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
07051c84 0000002c W __gnu_cxx::__throw_concurrence_broadcast_error()
07051cb0 000001a4 T __cxa_guard_acquire
07051e54 000000b0 T __cxa_guard_release
07051f04 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07051f04 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
07051f24 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
07051f50 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07051f50 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
07051f60 00000014 T std::get_new_handler()
07051f74 0000005c T operator new(unsigned int)
07051fd0 0000001c T operator new(unsigned int, std::nothrow_t const&)
07051fec 00000004 T operator new[](unsigned int)
07051ff0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07051ff0 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
07052010 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0705203c 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07052174 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
070521fc 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07052240 00000004 T std::type_info::~type_info()
07052240 00000004 T std::type_info::~type_info()
07052244 00000008 T std::type_info::__is_pointer_p() const
07052244 00000008 T std::type_info::__is_function_p() const
0705224c 00000014 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
07052260 00000014 T std::__detail::_List_node_base::_M_unhook()
07052274 00000058 T std::_Rb_tree_increment(std::_Rb_tree_node_base*)
070522cc 00000070 T std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
0705233c 00000284 T std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
070525c0 0000002c T std::__throw_bad_alloc()
070525ec 0000002c T std::__throw_bad_array_new_length()
07052618 00000040 T std::__throw_logic_error(char const*)
07052658 00000040 T std::__throw_invalid_argument(char const*)
07052698 00000040 T std::__throw_length_error(char const*)
070526d8 00000040 T std::__throw_out_of_range(char const*)
07052718 00000010 T std::__throw_out_of_range_fmt(char const*, ...)
07052728 000000e4 T std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const
07052810 000000e0 T std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned int, unsigned int, unsigned int) const
070528f0 00000044 T std::_Sp_make_shared_tag::_S_eq(std::type_info const&)
07052934 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
07052988 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
070529ac 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
070529d0 00000140 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_cold(char*, unsigned int, char const*, unsigned int, unsigned int)
07052b10 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
07052b74 0000000c T std::bad_alloc::what() const
07052b80 00000020 T std::bad_alloc::~bad_alloc()
07052b80 00000020 T std::bad_alloc::~bad_alloc()
07052ba0 0000002c T std::bad_alloc::~bad_alloc()
07052bcc 0000000c T std::bad_array_new_length::what() const
07052bd8 00000020 T std::bad_array_new_length::~bad_array_new_length()
07052bd8 00000020 T std::bad_array_new_length::~bad_array_new_length()
07052bf8 0000002c T std::bad_array_new_length::~bad_array_new_length()
07052c24 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
07052c80 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
07052c94 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07052c94 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
07052cb4 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
07052ce0 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
07052d44 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
07052dc0 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
07052e94 00000118 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
07052fac 000000d4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
07053080 00000044 T __cxa_allocate_exception
070530c4 0000002c T __cxa_free_exception
070530f0 000001b4 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
070532a4 T __cxa_end_cleanup
070532b4 00000134 T __cxa_type_match
070533e8 000000b4 T __cxa_begin_cleanup
0705349c 000000b4 T __gnu_end_cleanup
07053550 000000cc T __cxa_begin_catch
0705361c 000000e0 T __cxa_end_catch
070536fc 00000004 T std::exception::~exception()
070536fc 00000004 T std::exception::~exception()
07053700 00000004 T std::bad_exception::~bad_exception()
07053700 00000004 T std::bad_exception::~bad_exception()
07053704 0000000c T transaction clone for std::exception::what() const
07053704 0000000c T std::exception::what() const
07053710 0000000c T transaction clone for std::bad_exception::what() const
07053710 0000000c T std::bad_exception::what() const
0705371c 00000018 T std::bad_exception::~bad_exception()
07053734 0000003c t eh_globals_dtor(void*)
07053770 00000038 T __cxa_get_globals_fast
070537a8 00000074 T __cxa_get_globals
0705381c 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0705385c 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
07053890 0000016c t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
070539fc 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
07053a54 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
07053b2c 000006a0 T __gxx_personality_v0
070541cc 00000014 T __cxxabiv1::__terminate(void (*)())
070541e0 00000018 T std::terminate()
070541f8 0000000c T __cxxabiv1::__unexpected(void (*)())
07054204 00000018 T std::unexpected()
0705421c 00000014 T std::get_terminate()
07054230 00000014 T std::get_unexpected()
07054244 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
070542a4 00000054 T __cxa_init_primary_exception
070542f8 00000054 T __cxa_throw
0705434c 000000b0 T __cxa_rethrow
070543fc 00000008 T std::logic_error::what() const
070543fc 00000008 T std::runtime_error::what() const
07054404 00000098 T std::logic_error::~logic_error()
07054404 00000098 T std::logic_error::~logic_error()
0705449c 00000098 T std::length_error::~length_error()
0705449c 00000098 T std::length_error::~length_error()
07054534 00000098 T std::invalid_argument::~invalid_argument()
07054534 00000098 T std::invalid_argument::~invalid_argument()
070545cc 00000098 T std::out_of_range::~out_of_range()
070545cc 00000098 T std::out_of_range::~out_of_range()
07054664 000000a0 T std::logic_error::~logic_error()
07054704 000000a0 T std::length_error::~length_error()
070547a4 000000a0 T std::invalid_argument::~invalid_argument()
07054844 000000a0 T std::out_of_range::~out_of_range()
070548e4 000000d4 T std::logic_error::logic_error(char const*)
070548e4 000000d4 T std::logic_error::logic_error(char const*)
070549b8 00000020 T std::invalid_argument::invalid_argument(char const*)
070549b8 00000020 T std::invalid_argument::invalid_argument(char const*)
070549d8 00000020 T std::length_error::length_error(char const*)
070549d8 00000020 T std::length_error::length_error(char const*)
070549f8 00000020 T std::out_of_range::out_of_range(char const*)
070549f8 00000020 T std::out_of_range::out_of_range(char const*)
07054a18 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
07054a9c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
07054aa0 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
07054b10 0000002c T __cxa_call_terminate
07054b3c 00000150 T __cxa_call_unexpected
07054c90 0000027c T log2
07054f0c 000000c0 T ceilf
07054fd0 0000013c T ceil
0705510c 000000c0 T floorf
070551d0 00000144 T floor
07055314 00000068 T roundf
0705537c 00000024 t with_errno
070553a0 00000050 T __math_divzero
070553f0 0000001c T __math_invalid
0705540c 00000044 T __popcountsi2
07055450 00000030 T __aeabi_f2lz
07055450 00000030 T __fixsfdi
07055480 00000040 T __aeabi_f2ulz
07055480 00000040 T __fixunssfdi
070554c0 00000120 T __udivmoddi4
070555e0 00000018 t selfrel_offset31
070555f8 00000090 t search_EIT_table
07055688 00000040 t __gnu_unwind_get_pr_addr
070556c8 0000010c t get_eit_entry
070557d4 00000088 t restore_non_core_regs
0705585c 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
07055870 00000004 t _Unwind_DebugHook
07055874 00000064 t unwind_phase2
070558d8 00000140 t unwind_phase2_forced
07055a18 000000a4 T __gnu_Unwind_RaiseException
07055abc 00000028 T __gnu_Unwind_ForcedUnwind
07055ae4 00000074 T __gnu_Unwind_Resume
07055b58 00000020 T __gnu_Unwind_Resume_or_Rethrow
07055b78 00000004 T _Unwind_Complete
07055b7c 00000018 T _Unwind_DeleteException
07055b94 0000006c T _Unwind_VRS_Get
07055c00 0000002c t _Unwind_GetGR
07055c2c 0000006c T _Unwind_VRS_Set
07055c98 0000002c t _Unwind_SetGR
07055cc4 000000c0 T __gnu_Unwind_Backtrace
07055d84 00000410 t __gnu_unwind_pr_common
07056194 00000008 T __aeabi_unwind_cpp_pr0
0705619c 00000008 W __aeabi_unwind_cpp_pr1
070561a4 00000008 W __aeabi_unwind_cpp_pr2
070561ac 00000424 T _Unwind_VRS_Pop
070565d0 00000064 t next_unwind_byte
07056634 0000002c t _Unwind_GetGR.constprop.0
07056660 00000004 t unwind_UCB_from_context
07056664 00000464 T __gnu_unwind_execute
07056ac8 00000048 T __gnu_unwind_frame
07056b10 00000010 T _Unwind_GetRegionStart
07056b20 0000001c T _Unwind_GetLanguageSpecificData
07056b3c 00000008 T _Unwind_GetDataRelBase
07056b44 00000008 T _Unwind_GetTextRelBase
07056b4c 0000025c t _strtoull_l.isra.0
07056da8 00000030 T _strtoull_r
07056dd8 00000020 T memalign
07056df8 0000014c T _memalign_r
07056f44 00000014 T atexit
07056f58 000000cc T snprintf
07057024 00000018 T isxdigit
0705703c 00000064 T sprintf
070570a0 00000020 T calloc
070570c0 000000c0 T _calloc_r
07057180 000000f8 T _malloc_trim_r
07057278 000002e8 T _free_r
07057560 00000018 T isspace
07057578 00000130 T strchr
070576a8 000000d8 T memcmp
07057780 00000148 T _fclose_r
070578c8 0000064c t get_arg
07057f18 00003324 T _svfprintf_r
0705b23c 00000018 T malloc
0705b254 00000018 T free
0705b26c 0000079c T _malloc_r
0705ba08 00000024 T getenv
0705ba2c 00000150 T memmove
0705bb7c 000000a4 T _vsnprintf_r
0705bc20 00000038 T vsnprintf
0705bc58 000000c8 T _findenv_r
0705bd20 00000018 T _getenv_r
0705bd38 000000f4 T memset
0705be2c 0000000c T __malloc_lock
0705be38 0000000c T __malloc_unlock
0705be44 00000090 T strlen
0705bed4 0000022c T __sflush_r
0705c100 00000094 T _fflush_r
0705c194 000000e4 T strncmp
0705c278 00000070 T _fwalk_sglue
0705c2e8 00000020 T localtime
0705c308 000000c4 T strncpy
0705c3cc 0000001c t stdio_exit_handler
0705c3e8 0000005c t cleanup_stdio
0705c444 00000154 t global_stdio_init.part.0
0705c598 0000005c T __sinit
0705c5f4 0000000c T __sfp_lock_acquire
0705c600 0000000c T __sfp_lock_release
0705c60c 00000360 T localtime_r
0705c96c 00000010 T ctime
0705c97c 00000048 T strnlen
0705c9c4 00000064 t sulp
0705ca28 000013a4 T _strtod_l
0705ddd0 00000108 T strtof
0705ded8 00000010 T _tzset_unlocked
0705dee8 00000664 T _tzset_unlocked_r
0705e54c 00000020 T realloc
0705e56c 0000012c t iso_year_adjust
0705e698 0000126c t __strftime.isra.0
0705f904 00000030 T strftime
0705f934 0000000c T __gettzinfo
0705f940 000001d8 t _strtoul_l.isra.0
0705fb18 00000030 T _strtoul_r
0705fb48 00000034 T strtoul
0705fb7c 00000024 T __locale_mb_cur_max
0705fba0 0000004c T time
0705fbec 00000024 T _localeconv_r
0705fc10 00000254 T __tzcalc_limits
0705fe64 000000f0 T strcpy
0705ff54 000000e0 T memchr
07060034 000000f0 T __utf8_wctomb
07060124 0000011c T memcpy
07060240 00000084 T __libc_init_array
070602c4 0000000c T __errno
070602d0 00000010 T nan
070602e0 0000000c T nanf
070602f0 00000088 T frexp
07060378 0000012c T __smakebuf_r
070604a4 000000a0 T _wcrtomb_r
07060544 00000028 T _wcsrtombs_r
0706056c 000000b0 T __register_exitproc
0706061c 0000000c T abs
07060628 00000044 T __sread
0706066c 00000008 T __seofread
07060674 00000068 T __swrite
070606dc 00000044 T __sseek
07060720 00000008 T __sclose
07060728 00000074 T siscanf
0706079c 0000000c T __env_lock
070607a8 0000000c T __env_unlock
070607b4 000000cc T sniprintf
07060880 0000064c t get_arg
07060ecc 0000018c T __ssprint_r
07061058 00002230 T _svfiprintf_r
07063288 00000050 t get_arg
070632d8 000000e0 T _sungetc_r
070633b8 0000006c T __ssrefill_r
07063424 000000c4 T _sfread_r
070634e8 000022cc T __ssvfiscanf_r
070657b4 0000000c T labs
070657c0 000000f0 t rshift
070658b0 0000089c T __gethex
0706614c 000001b4 t quorem
07066300 00001218 T _dtoa_r
07067518 0000004c T __match
07067564 0000029c T __hexnan
07067800 00000088 T _Balloc
07067888 0000001c T _Bfree
070678a4 000000f4 T __multadd
07067998 00000110 T __s2b
07067aa8 00000060 T __hi0bits
07067b08 0000009c T __lo0bits
07067ba4 000000a4 T __i2b
07067c48 00000204 T __multiply
07067e4c 00000128 T __pow5mult
07067f74 00000140 T __lshift
070680b4 00000058 T __mcmp
0706810c 000001fc T __mdiff
07068308 00000068 T __ulp
07068370 000000d0 T __b2d
07068440 00000124 T __d2b
07068564 00000078 T __ratio
070685dc 00000088 T __copybits
07068664 0000005c T __any_on
070686c0 00000020 T asctime
070686e0 00000268 T gmtime_r
07068948 00000080 T asctime_r
070689c8 000004a0 T _realloc_r
07068e68 0000000c T __tz_lock
07068e74 0000000c T __tz_unlock
07068e80 000002f8 T __utf8_mbtowc
07069178 000001b0 t _strtol_l.part.0
07069328 00000060 T _strtol_r
07069388 00000234 t _strtoll_l.isra.0
070695bc 00000030 T _strtoll_r
070695ec 00000008 T iswspace
070695f4 000000b4 T _mbrtowc_r
070696a8 00000038 T iswspace_l
070696e0 00000188 T _wcsnrtombs_l
07069868 00000064 T _wcsnrtombs_r
070698cc 000000f0 T __sccl
070699bc 00000064 T siprintf
07069a20 000000a8 T __submore
07069ac8 00000090 T category
07069b58 0000005c T __assert_func
07069bb4 0000003c T fiprintf
07069bf0 0000064c t get_arg
0706a23c 00000030 T __sprint_r
0706a26c 00002304 T _vfiprintf_r
0706c570 000000b8 t __sbprintf
0706c628 00000138 T __swsetup_r
0706c760 000004b4 T __sfvwrite_r
0706cc14 00000078 T _fstat_r
0706cc8c 0000002c T __getreent
0706ccb8 00000030 T _gettimeofday_r
0706cce8 0000003c T __get_handle
0706cd24 000000f4 T _close_r
0706ce18 00000008 t null_write
0706ce20 00000008 T _isatty_r
0706ce28 00000084 T _lseek_r
0706ceac 00000080 T _read_r
0706cf2c 00000078 W _sbrk_r
0706cfa4 0000001c T __libc_lock_acquire
0706cfc0 0000001c T __libc_lock_release
0706cfdc 0000001c T __libc_lock_acquire_recursive
0706cff8 0000001c T __libc_lock_release_recursive
0706d014 00000080 T _write_r
0706d094 00000038 T __aeabi_d2lz
0706d094 00000038 T __fixdfdi
0706d0d0 00000040 T __aeabi_d2ulz
0706d0d0 00000040 T __fixunsdfdi
0706d110 T _fini
07070ac0 00000038 R vtable for CTRPluginFramework::Search
07070af8 00000023 r CTRPluginFramework::g_copyrightText
07070b1b 0000001e r CTRPluginFramework::g_ctrpfText
07070b3c 00000014 V vtable for CTRPluginFramework::MenuItem
07070b50 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
07070b64 0000001c R vtable for CTRPluginFramework::MenuEntryTools
07070b80 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
07070ba0 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
07070ba8 00000008 r CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
07070bb0 00000038 r CTRPluginFramework::stable
07070be8 00000038 r CTRPluginFramework::ktable
07070c20 00000020 R vtable for CTRPluginFramework::HexEditor::ByteView
07070c40 00000020 R vtable for CTRPluginFramework::HexEditor::IntegerView
07070c60 00000020 R vtable for CTRPluginFramework::HexEditor::AsmView
07070c80 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
07070c88 0000001c R vtable for CTRPluginFramework::TouchKey
07070ca4 0000001c R vtable for CTRPluginFramework::TextBox
07070cc0 00000a00 r font
070716c0 00000058 r CTRPluginFramework::g_OSDPattern
07071718 0000001c R vtable for CTRPluginFramework::NumericTextBox
07071734 0000001c R vtable for CTRPluginFramework::FloatingButton
07071750 0000001c R vtable for CTRPluginFramework::ComboBox
0707176c 0000001c R vtable for CTRPluginFramework::Button
07071788 00000008 r CTRPluginFramework::Button::Update(bool, CTRPluginFramework::Vector<int> const&)::halfSecond
07071790 00000040 r RegNames
070717d0 00000010 r shift_names
070717e0 00000040 r cond_names
07071820 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0707183c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
07071844 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
0707184c 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
07071854 00000014 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
07071868 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::_data
07071874 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
070718f8 00000008 R CTRPluginFramework::Time::Zero
07071900 0000001c V vtable for std::_Sp_counted_ptr_inplace<CTRPluginFramework::TaskContext, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>
0707191c 00000008 V std::_Sp_make_shared_tag::_S_ti()::__tag
07071924 00000018 r IsInstructionPCDependant(unsigned long)::forbiddenInstructions
0707193c 00000004 R CTRPluginFramework::Color::Turquoise
07071940 00000004 R CTRPluginFramework::Color::SkyBlue
07071944 00000004 R CTRPluginFramework::Color::Orange
07071948 00000004 R CTRPluginFramework::Color::LimeGreen
0707194c 00000004 R CTRPluginFramework::Color::ForestGreen
07071950 00000004 R CTRPluginFramework::Color::Gainsboro
07071954 00000004 R CTRPluginFramework::Color::DimGrey
07071958 00000004 R CTRPluginFramework::Color::DeepSkyBlue
0707195c 00000004 R CTRPluginFramework::Color::DarkGrey
07071960 00000004 R CTRPluginFramework::Color::Brown
07071964 00000004 R CTRPluginFramework::Color::BlackGrey
07071968 00000004 R CTRPluginFramework::Color::Green
0707196c 00000004 R CTRPluginFramework::Color::Gray
07071970 00000004 R CTRPluginFramework::Color::Silver
07071974 00000004 R CTRPluginFramework::Color::Magenta
07071978 00000004 R CTRPluginFramework::Color::Cyan
0707197c 00000004 R CTRPluginFramework::Color::Yellow
07071980 00000004 R CTRPluginFramework::Color::Blue
07071984 00000004 R CTRPluginFramework::Color::Lime
07071988 00000004 R CTRPluginFramework::Color::Red
0707198c 00000004 R CTRPluginFramework::Color::White
07071990 00000004 R CTRPluginFramework::Color::Black
07072018 00000384 r UserManualFilled15_array
0707239c 00000384 r Unsplash15_array
07072720 00000384 r UnCheckedCheckbox_array
07072aa4 000009c4 r TrashFilled25_array
07073468 000009c4 r Trash25_array
07073e2c 00000384 r Star15_array
070741b0 00000384 r Shutdown15_array
07074534 00000384 r Settings15_array
070748b8 00000384 r Search15_array
07074c3c 000009c4 r Save25_array
07075600 00001900 r Rocket40_array
07076f00 00000384 r Restart15_array
07077284 00000384 r RAM15_array
07077608 000009c4 r PlusFilled25_array
07077fcc 000009c4 r Plus25_array
07078990 00000384 r More15_array
07078d14 00000384 r Maintenance15_array
07079098 000009c4 r KeyboardFilled25_array
07079a5c 000009c4 r Keyboard25_array
0707a420 000009c4 r InfoFilled25_array
0707ade4 000009c4 r Info25_array
0707b7a8 00000384 r HandCursor15_array
0707bb2c 00000384 r Grid15_array
0707beb0 000009c4 r GameControllerFilled25_array
0707c874 000009c4 r GameController25_array
0707d238 00000384 r GameController15_array
0707d5bc 00000384 r FolderFilled_array
0707d940 00000384 r File15_array
0707dcc4 00000384 r EnterKeyFilled15_array
0707e048 00000384 r EnterKey15_array
0707e3cc 000009c4 r EditFilled25_array
0707ed90 000009c4 r Edit25_array
0707f754 000009c4 r DuplicateFilled25_array
07080118 000009c4 r Duplicate25_array
07080adc 00000e10 r DefaultKeyboardCustomIcon_array
070818ec 000009c4 r CutFilled25_array
070822b0 000009c4 r Cut25_array
07082c74 00000384 r Controller15_array
07082ff8 00000640 r CloseWindowFilled20_array
07083638 00000640 r CloseWindow20_array
07083c78 000009c4 r ClipboardFilled25_array
0708463c 000009c4 r Clipboard25_array
07085000 00000384 r ClearSymbolFilled15_array
07085384 00000384 r ClearSymbol15_array
07085708 00000384 r CheckedCheckbox_array
07085a8c 00000384 r CapsLockOnFilled15_array
07085e10 00000384 r CapsLockOn15_array
07086194 000009c4 r AddFavoriteFilled25_array
07086b58 000009c4 r AddFavorite25_array
0708751c 00000384 r About15_array
070878a0 00000014 r CTRPluginFramework::defaultSoundFiles
070878b4 00000038 R vtable for CTRPluginFramework::Search32
070878ec 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
07087914 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
07087920 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
0708794c 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
07087958 0000002c V typeinfo name for __gnu_cxx::__concurrence_broadcast_error
07087984 0000000c V typeinfo for __gnu_cxx::__concurrence_broadcast_error
07087990 00000027 V typeinfo name for __gnu_cxx::__concurrence_wait_error
070879b8 0000000c V typeinfo for __gnu_cxx::__concurrence_wait_error
070879c4 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
070879d8 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
070879ec 00000014 V vtable for __gnu_cxx::__concurrence_broadcast_error
07087a00 00000014 V vtable for __gnu_cxx::__concurrence_wait_error
07087a14 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
07087a38 0000000c R typeinfo for __gnu_cxx::recursive_init_error
07087a44 00000014 R vtable for __gnu_cxx::recursive_init_error
07087a58 00000001 R std::nothrow
07087a5c 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
07087a84 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
07087a90 0000002c R vtable for __cxxabiv1::__si_class_type_info
07087abc 0000000d R typeinfo name for std::type_info
07087acc 00000008 R typeinfo for std::type_info
07087ad4 0000000e r std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned int) const::__fast_bkt
07087ae4 00000404 R std::__detail::__prime_list
07087ee8 00000018 V typeinfo name for std::_Sp_make_shared_tag
07087f00 0000000d R typeinfo name for std::bad_alloc
07087f10 0000000c R typeinfo for std::bad_alloc
07087f1c 00000014 R vtable for std::bad_alloc
07087f30 00000019 R typeinfo name for std::bad_array_new_length
07087f4c 0000000c R typeinfo for std::bad_array_new_length
07087f58 00000014 R vtable for std::bad_array_new_length
07087f6c 00000022 R typeinfo name for __cxxabiv1::__class_type_info
07087f90 0000000c R typeinfo for __cxxabiv1::__class_type_info
07087f9c 0000002c R vtable for __cxxabiv1::__class_type_info
07087fc8 0000000d R typeinfo name for std::exception
07087fd8 00000008 R typeinfo for std::exception
07087fe0 00000012 R typeinfo name for std::bad_exception
07087ff4 0000000c R typeinfo for std::bad_exception
07088000 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
07088020 00000008 R typeinfo for __cxxabiv1::__forced_unwind
07088028 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0708804c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
07088054 00000014 R vtable for std::bad_exception
07088068 00000010 R typeinfo name for std::logic_error
07088078 0000000c R typeinfo for std::logic_error
07088084 00000015 R typeinfo name for std::invalid_argument
0708809c 0000000c R typeinfo for std::invalid_argument
070880a8 00000011 R typeinfo name for std::length_error
070880bc 0000000c R typeinfo for std::length_error
070880c8 00000011 R typeinfo name for std::out_of_range
070880dc 0000000c R typeinfo for std::out_of_range
070880e8 00000014 R vtable for std::logic_error
070880fc 00000014 R vtable for std::invalid_argument
07088110 00000014 R vtable for std::length_error
07088124 00000014 R vtable for std::out_of_range
07088138 00000890 R __log2_data
070889c8 00000101 R _ctype_
07088acc 00000010 r zeroes.0
07088adc 00000010 r blanks.1
07088aec 00000014 r fpinan.0
07088b00 00000014 r fpi.1
07088b18 00000028 r tinytens
07088b40 00000060 R __month_lengths
07088ba0 000000fc R _C_time_locale
07088c9c 00000010 r zeroes.0
07088cac 00000010 r blanks.1
07088cbc 0000006c R __action_table
07088d28 0000006c R __state_table
07088d94 00000100 R __chclass
07088e94 00000022 r basefix.0
07088eb8 00000100 R __hexdig
07088fb8 0000000c r p05.0
07088fc8 00000028 R __mprec_bigtens
07088ff0 000000c8 R __mprec_tens
070890b8 00000024 r mon_name.0
070890dc 00000015 r day_name.1
070890f4 00003528 r categories
0708c61c 00000010 r zeroes.0
0708c62c 00000010 r blanks.1
0708c63c 00000080 R dotab_stdnull
0708c6bc R __tdata_align
0708c81c R __exidx_start
0708ca64 R __exidx_end
0708ca64 00000004 D CTRPluginFramework::RangeWriteManager::freeAddress
0708ca68 00000001 d CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::isFirstTime
0708ca6c 00000001 d CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::isFirstTime
0708ca70 00000004 d CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::watchKind
0708ca74 00000004 D cwavCurrentVAPAConvCallback
0708ca78 00000018 D CTRPluginFramework::Screenshot::Prefix[abi:cxx11]
0708ca90 00000018 D CTRPluginFramework::Screenshot::Path[abi:cxx11]
0708caa8 00000004 D CTRPluginFramework::Screenshot::Screens
0708caac 00000004 D CTRPluginFramework::Screenshot::Hotkeys
0708cab0 00000004 d CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::selector
0708cab4 00000001 d CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)::firstActivation
0708cab8 00000004 D CTRPluginFramework::RendererPriv::g_customColor
0708cabc 000001f4 D opcode_names
0708ccb0 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0708ccb4 00000018 D CTRPluginFramework::Preferences::ScreenshotPrefix[abi:cxx11]
0708cccc 00000018 D CTRPluginFramework::Preferences::ScreenshotPath[abi:cxx11]
0708cce4 00000018 D CTRPluginFramework::Preferences::CheatsFile[abi:cxx11]
0708ccfc 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
0708cd00 00000018 d CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
0708cd18 00000004 D CTRPluginFramework::FwkSettings::Header
0708cd1c 00000001 D CTRPluginFramework::g_keepRunning
0708cd20 00000004 D g_charPerSheet
0708cd24 00000004 D UserManualFilled15
0708cd28 00000004 D Unsplash15
0708cd2c 00000004 D UnCheckedCheckbox
0708cd30 00000004 D TrashFilled25
0708cd34 00000004 D Trash25
0708cd38 00000004 D Star15
0708cd3c 00000004 D Shutdown15
0708cd40 00000004 D Settings15
0708cd44 00000004 D Search15
0708cd48 00000004 D Save25
0708cd4c 00000004 D Rocket40
0708cd50 00000004 D Restart15
0708cd54 00000004 D RAM15
0708cd58 00000004 D PlusFilled25
0708cd5c 00000004 D Plus25
0708cd60 00000004 D More15
0708cd64 00000004 D Maintenance15
0708cd68 00000004 D KeyboardFilled25
0708cd6c 00000004 D Keyboard25
0708cd70 00000004 D InfoFilled25
0708cd74 00000004 D Info25
0708cd78 00000004 D HandCursor15
0708cd7c 00000004 D Grid15
0708cd80 00000004 D GameControllerFilled25
0708cd84 00000004 D GameController25
0708cd88 00000004 D GameController15
0708cd8c 00000004 D FolderFilled
0708cd90 00000004 D File15
0708cd94 00000004 D EnterKeyFilled15
0708cd98 00000004 D EnterKey15
0708cd9c 00000004 D EditFilled25
0708cda0 00000004 D Edit25
0708cda4 00000004 D DuplicateFilled25
0708cda8 00000004 D Duplicate25
0708cdac 00000004 D DefaultKeyboardCustomIcon
0708cdb0 00000004 D CutFilled25
0708cdb4 00000004 D Cut25
0708cdb8 00000004 D Controller15
0708cdbc 00000004 D CloseWindowFilled20
0708cdc0 00000004 D CloseWindow20
0708cdc4 00000004 D ClipboardFilled25
0708cdc8 00000004 D Clipboard25
0708cdcc 00000004 D ClearSymbolFilled15
0708cdd0 00000004 D ClearSymbol15
0708cdd4 00000004 D CheckedCheckbox
0708cdd8 00000004 D CapsLockOnFilled15
0708cddc 00000004 D CapsLockOn15
0708cde0 00000004 D AddFavoriteFilled25
0708cde4 00000004 D AddFavorite25
0708cde8 00000004 D About15
0708cdec 00000001 d CTRPluginFrameworkImpl::Services::GSP::RunInterruptReceiver
0708cded 00000001 D CTRPluginFramework::SystemImpl::Language
0708cdf0 00000018 D CTRPluginFramework::FSPath::CurrentWorkingDirectory[abi:cxx11]
0708ce08 00000001 D CTRPluginFramework::EventManager::_refresh
0708ce0c 00000004 d kCount
0708ce10 00000004 d kInterval
0708ce14 00000004 d kDelay
0708ce18 00000004 D __cxxabiv1::__unexpected_handler
0708ce1c 00000004 D __cxxabiv1::__terminate_handler
0708ce20 00000004 D __malloc_sbrk_base
0708ce24 00000004 D __malloc_trim_threshold
0708ce28 00000408 D __malloc_av_
0708d230 0000000c D __sglue
0708d23c 00000008 D _tzname
0708d248 00000058 d tzinfo
0708d2a0 0000016c D __global_locale
0708d40c 00000004 D _impure_ptr
0708d410 00000120 D _impure_data
0708d530 00000004 D environ
0708d534 00001000 d handles
0708e534 0000000c d __stderr_handle
0708e540 0000000c d __stdout_handle
0708e54c 0000000c d __stdin_handle
0708e558 0000008c D devoptab_list
0708e5f8 d _GLOBAL_OFFSET_TABLE_
0708e604 D __tdata_lma
0708e610 d __frame_dummy_init_array_entry
0708e610 D __init_array_start
0708e610 B __preinit_array_end
0708e610 B __preinit_array_start
0708e610 D __tdata_lma_end
0708e67c d __do_global_dtors_aux_fini_array_entry
0708e67c D __init_array_end
0708e6dc D __bss_start__
0708e6dc 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::number1
0708e6e0 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcAdd
0708e6e1 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcSub
0708e6e2 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcMul
0708e6e3 00000001 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::calcDiv
0708e6e4 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::number2
0708e6e8 00000004 b CTRPluginFramework::calcHex(CTRPluginFramework::MenuEntry*)::answer
0708e6ec 00000004 b CTRPluginFramework::maxMinValue(CTRPluginFramework::MenuEntry*)::address
0708e6f0 00000014 b CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::address
0708e704 00000004 b CTRPluginFramework::addressConf(CTRPluginFramework::MenuEntry*)::menu
0708e708 00000004 B CTRPluginFramework::Draw::posY
0708e70c 00000004 B CTRPluginFramework::RangeWriteManager::startAddress
0708e710 00000004 B CTRPluginFramework::RangeWriteManager::endAddress
0708e714 00000004 B CTRPluginFramework::RangeWriteManager::targetValue
0708e718 00000004 B CTRPluginFramework::RangeWriteManager::writeValue
0708e71c 00000004 B CTRPluginFramework::RangeWriteManager::hits
0708e720 00000001 B CTRPluginFramework::RangeWriteManager::searched
0708e724 0000000c b CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708e730 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::patchAddress
0708e734 00000004 b CTRPluginFramework::ToggleTouchscreenForceOn()::original
0708e738 00000004 b guard variable for CTRPluginFramework::ToggleTouchscreenForceOn()::pattern
0708e73c 0000000c b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::kInputList
0708e748 00000004 b guard variable for CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::kInputList
0708e74c 00000004 b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::startAddress
0708e750 00000004 b CTRPluginFramework::autoPatchCode(CTRPluginFramework::MenuEntry*)::endAddress
0708e754 00000004 b guard variable for CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::changeAddress
0708e758 00000004 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::changeAddress
0708e75c 00000001 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::isHotkey
0708e760 00000004 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::initValue
0708e764 00000001 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::isCheck
0708e768 00000004 b CTRPluginFramework::regConf(CTRPluginFramework::MenuEntry*)::regAddress
0708e76c 00000004 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::byte
0708e770 00000004 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::address
0708e774 00000001 b CTRPluginFramework::doWPManager(CTRPluginFramework::MenuEntry*)::isWatched
0708e778 00000050 B CTRPluginFramework::WatchPointManager::_singleton
0708e7c8 0000005c B CTRPluginFramework::exceptionData
0708e828 00001000 B CTRPluginFramework::stack
0708f828 00000004 b ncsndMutex
0708f82c 00000004 b ncsndCmdCurOff
0708f830 00000004 b ncsndCmdStartOff
0708f834 00000004 B ncsndSharedMem
0708f838 00000004 B ncsndCSNDHandle
0708f83c 00000004 b ncsndRefCount
0708f840 00000004 B ncsndChannels
0708f844 00000010 B ncsndOffsets
0708f854 00000004 B ncsndSharedMemSize
0708f858 00000004 b ncsndSharedMemBlock
0708f85c 00000001 b ncsndCookieHooked
0708f860 0000000c b ncsndCookie
0708f86c b saved_stack
0708f874 00000004 b cwavListCount
0708f878 00000004 b cwavList
0708f87c 00000004 b cwavAddedToList
0708f880 b completed.1
0708f884 b object.0
0708f89c 00000004 b CTRPluginFramework::isReady
0708f8a0 00000008 B CTRPluginFramework::Screenshot::_resumeEvent
0708f8a8 00000008 B CTRPluginFramework::Screenshot::_readyEvent
0708f8b0 00000008 B CTRPluginFramework::Screenshot::_task
0708f8b8 00000008 B CTRPluginFramework::Screenshot::_hotkeyTimer
0708f8c0 00000008 B CTRPluginFramework::Screenshot::_timer
0708f8c8 00000004 B CTRPluginFramework::Screenshot::_display
0708f8cc 00000004 B CTRPluginFramework::Screenshot::_filecount
0708f8d0 00000004 B CTRPluginFramework::Screenshot::_mode
0708f8d4 00000004 B CTRPluginFramework::Screenshot::ScreenshotCallback
0708f8d8 00000004 B CTRPluginFramework::Screenshot::ImgBuffer
0708f8e0 00000008 B CTRPluginFramework::Screenshot::Timer
0708f8e8 00000001 B CTRPluginFramework::Screenshot::IsEnabled
0708f8ec 00000004 B CTRPluginFramework::ScreenImpl::Bottom
0708f8f0 00000004 B CTRPluginFramework::ScreenImpl::Top
0708f8f4 000000ac b CTRPluginFramework::_botBuf
0708f9a0 000000ac b CTRPluginFramework::_topBuf
0708fa4c 00000044 b CTRPluginFramework::g_previousException
0708fa90 00000004 B CTRPluginFramework::ProcessImpl::processEventCallback
0708fa94 00000004 B CTRPluginFramework::ProcessImpl::exceptionCount
0708fa98 00000008 B CTRPluginFramework::ProcessImpl::waitForExitEvent
0708faa0 0000000c B CTRPluginFramework::ProcessImpl::MemRegions
0708faac 0000000c B CTRPluginFramework::ProcessImpl::MemoryMutex
0708fab8 00000010 B CTRPluginFramework::ProcessImpl::InvalidRegion
0708fac8 00000004 B CTRPluginFramework::ProcessImpl::MainThreadTls
0708facc 00000064 B CTRPluginFramework::ProcessImpl::CodeSet
0708fb30 00000004 B CTRPluginFramework::ProcessImpl::KProcessPtr
0708fb34 00000004 B CTRPluginFramework::ProcessImpl::MainThread
0708fb38 00000008 B CTRPluginFramework::ProcessImpl::TitleId
0708fb40 00000004 B CTRPluginFramework::ProcessImpl::ProcessId
0708fb44 00000004 B CTRPluginFramework::ProcessImpl::Status
0708fb48 00000004 B CTRPluginFramework::ProcessImpl::IsPaused
0708fb4c 00000004 B CTRPluginFramework::ProcessImpl::ProcessHandle
0708fb50 00000004 B CTRPluginFramework::_pool
0708fb54 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708fb58 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
0708fb60 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708fb68 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
0708fb70 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708fb74 00000008 b CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::task
0708fb7c 00000001 b CTRPluginFramework::g_manualScreenshotTrigger
0708fb80 00000004 b CTRPluginFramework::g_screenshotEntry
0708fb84 00000001 b CTRPluginFramework::InitFsTryOpenFileHook()::isInitialized
0708fb88 00000004 b CTRPluginFramework::g_OpenFileLock
0708fb8c 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
0708fb90 00000040 b CTRPluginFramework::g_hookExportFile
0708fbd0 00000004 b CTRPluginFramework::g_HookMode
0708fbd4 00000004 b CTRPluginFramework::g_FsTryOpenFileHook
0708fbd8 00000008 b CTRPluginFramework::g_textXpos
0708fbe0 00000004 b CTRPluginFramework::g_mode
0708fbe4 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
0708fbe8 0000000c B CTRPluginFramework::PluginMenuImpl::_trashBinMutex
0708fbf4 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
0708fbf8 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
0708fbfc 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
0708fc00 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708fc08 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708fc10 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708fc18 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
0708fc20 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708fc24 00000008 b CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)::top
0708fc2c 00000004 b CTRPluginFramework::g_radioId
0708fc30 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
0708fc34 00000004 b guard variable for CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708fc38 00000008 b CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)::top
0708fc40 00000004 b CTRPluginFramework::__pmARinstance
0708fc44 00000004 B CTRPluginFramework::MenuItem::_uidCounter
0708fc48 00000001 b CTRPluginFramework::KeyboardImpl::_ChangeManualKey(int, bool)::preventRecursion
0708fc4c 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
0708fc50 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708fc58 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
0708fc60 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708fc64 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
0708fc74 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708fc78 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
0708fc80 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708fc84 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
0708fc94 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708fc98 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
0708fca8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708fcac 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
0708fcbc 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708fcc0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
0708fcd0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708fcd4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
0708fce4 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
0708fcf0 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
0708fcfc 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
0708fd08 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708fd0c 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
0708fd1c 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
0708fd20 00000004 B CTRPluginFramework::__g_hexEditor
0708fd24 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
0708fd28 00000010 b CTRPluginFramework::GuideReader::Draw()::background
0708fd38 00000004 b guard variable for CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708fd40 00000010 b CTRPluginFramework::GatewayRAMDumper::_DrawProgress()::logo
0708fd50 00000001 b CTRPluginFramework::g_progressLoop
0708fd54 00000004 b CTRPluginFramework::__converter
0708fd58 00000010 B CTRPluginFramework::Icon::DefaultCustomIcon
0708fd68 00000028 B CTRPluginFramework::Window::TopWindow
0708fd90 00000028 B CTRPluginFramework::Window::BottomWindow
0708fdb8 00000004 b guard variable for CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708fdbc 0000000c b CTRPluginFramework::Renderer::DrawRoundedRectangle(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)::_lines
0708fdc8 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
0708fdcc 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
0708fdd0 00000008 b CTRPluginFramework::(anonymous namespace)::CheckFrameResumedTask
0708fdd8 00000001 b CTRPluginFramework::(anonymous namespace)::HasGameResumed
0708fdd9 00000001 b CTRPluginFramework::(anonymous namespace)::IsForced
0708fddc 0000000c b CTRPluginFramework::(anonymous namespace)::FrameLockingMutex
0708fde8 00000050 b CTRPluginFramework::g_fpsCounter
0708fe38 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask2
0708fe40 00000008 B CTRPluginFramework::OSDImpl::DrawNotifTask1
0708fe48 00000008 B CTRPluginFramework::OSDImpl::OnFrameResume
0708fe50 00000008 B CTRPluginFramework::OSDImpl::OnFramePaused
0708fe58 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
0708fe60 00000001 B CTRPluginFramework::OSDImpl::WritesToPrevFB
0708fe61 00000001 B CTRPluginFramework::OSDImpl::NeedToPauseFrame
0708fe62 00000001 B CTRPluginFramework::OSDImpl::IsFramePaused
0708fe64 00000020 B CTRPluginFramework::OSDImpl::previousFBAddr
0708fe84 0000000c B CTRPluginFramework::OSDImpl::CallbacksTrashBin
0708fe90 0000000c B CTRPluginFramework::OSDImpl::Callbacks
0708fe9c 0000000c B CTRPluginFramework::OSDImpl::Notifications
0708fea8 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
0708fecc 0000000c B CTRPluginFramework::OSDImpl::RecLock
0708fed8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
0708fef0 00000018 B CTRPluginFramework::OSDImpl::TopScreen
0708ff08 00000004 B CTRPluginFramework::OSDImpl::OSDHook
0708ff0c 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
0708ff10 00000004 B CTRPluginFramework::OSDImpl::WaitingForScreenshot
0708ff14 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
0708ff18 0000001c b CTRPluginFramework::(anonymous namespace)::defaultSysFont
0708ff34 00000004 b CTRPluginFramework::(anonymous namespace)::defaultGlyph
0708ff38 00000004 b CTRPluginFramework::(anonymous namespace)::glyph
0708ff3c 0000000c B CTRPluginFramework::Font::_mutex
0708ff48 00000004 B CTRPluginFramework::g_glyphAllocated
0708ff4c 00000004 B CTRPluginFramework::g_fontAllocated
0708ff50 00000004 b CTRPluginFramework::g_context
0708ff54 00000001 b CTRPluginFramework::ToggleFloat
0708ff55 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
0708ff58 00000004 B CTRPluginFramework::ARHandler::ActiveStorage
0708ff5c 00000004 B CTRPluginFramework::ARHandler::ActiveData
0708ff60 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
0708ff64 00000008 B CTRPluginFramework::ARHandler::Storage
0708ff6c 00000010 B CTRPluginFramework::ARHandler::Data
0708ff7c 00000008 B CTRPluginFramework::ARHandler::Offset
0708ff88 00000fa0 b CTRPluginFramework::arStack
07090f28 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07090f2c 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
07090f38 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07090f3c 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
07090f48 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
07090f49 00000001 b CTRPluginFramework::g_newCondDataToggle
07090f4a 00000001 b CTRPluginFramework::g_condAgainstData
07090f4c 00000004 b CTRPluginFramework::__arCodeEditor
07090f50 0000000c B CTRPluginFramework::g_codeTypes
07090f5c 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
07090f5d 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
07090f60 000000a8 B CTRPluginFramework::Preferences::Settings
07091008 00000008 B CTRPluginFramework::Preferences::Backlights
07091010 00000008 B CTRPluginFramework::Preferences::Flags
07091018 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
0709101c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
07091020 000009c4 b CTRPluginFramework::g_rng
070919e4 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
070919e8 00000004 B CTRPluginFramework::System::OnAbort
070919ec 00000001 B CTRPluginFramework::Process::ThrowOldExceptionOnCallbackException
070919f0 00000004 B CTRPluginFramework::Process::OnPauseResume
070919f4 00000004 B CTRPluginFramework::Process::exceptionCallback
070919f8 00000004 B CTRPluginFramework::Controller::_keysReleased
070919fc 00000004 B CTRPluginFramework::Controller::_keysHeld
07091a00 00000004 B CTRPluginFramework::Controller::_keysDown
07091a04 00000004 b CTRPluginFramework::g_runningInstance
07091a08 0000001c b CTRPluginFramework::g_dummy
07091a24 00000180 b CTRPluginFramework::g_keyName
07091ba4 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07091ba8 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07091bac 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07091bae 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
07091bb0 0000001c B CTRPluginFramework::Render::_randomSets[abi:cxx11]
07091bcc 00000004 b g_onLoadCroLock
07091bd0 00000004 b g_onSharedMemMapHook
07091bd4 00000004 b g_onLoadCroHook
07091bd8 00000008 b CTRPluginFramework::g_mainThread
07091be0 00000004 B CTRPluginFramework::g_keepEvent
07091be4 00000004 B CTRPluginFramework::g_keepThreadHandle
07091be8 00000004 B CTRPluginFramework::g_continueGameEvent
07091bf0 00000008 B CTRPluginFramework::_sdmcArchive
07091bf8 00001000 b CTRPluginFramework::keepThreadStack
07092bf8 00000004 b g_mainThreadVars
07092bfc 00000001 b properInit
07092bfd 00000001 b fakeInit
07092c00 00000004 b plgLdrRefCount
07092c04 00000004 b plgReply
07092c08 00000004 b plgEvent
07092c0c 00000004 b plgLdrArbiter
07092c10 00000004 b plgLdrHandle
07092c14 00000004 B CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThreadPriority
07092c18 00000004 B CTRPluginFrameworkImpl::Services::GSP::BufferFlags
07092c1c 00000008 b CTRPluginFrameworkImpl::Services::GSP::SharedFrameBuffers
07092c24 00000008 b CTRPluginFrameworkImpl::Services::GSP::InterruptReceiverThread
07092c2c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPRegisterInterruptReceiverHook
07092c30 00000008 b CTRPluginFrameworkImpl::Services::GSP::Semaphore
07092c38 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank1Event
07092c40 00000008 b CTRPluginFrameworkImpl::Services::GSP::VBlank0Event
07092c48 00000004 b CTRPluginFrameworkImpl::Services::GSP::WakeEvent
07092c4c 00000004 b CTRPluginFrameworkImpl::Services::GSP::GSPEvent
07092c50 00000004 b CTRPluginFrameworkImpl::Services::GSP::EventData
07092c54 00000004 b CTRPluginFrameworkImpl::Services::GSP::SharedMemoryBlock
07092c58 00000001 b CTRPluginFrameworkImpl::Services::GSP::CatchInterrupt
07092c5c 00000008 b CTRPluginFramework::g_sleepEvent
07092c64 00000004 B CTRPluginFramework::SystemImpl::AptStatus
07092c68 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
07092c6c 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
07092c70 00000001 B CTRPluginFramework::SystemImpl::IsCitra
07092c71 00000001 B CTRPluginFramework::SystemImpl::IsNew3DS
07092c72 00000001 B _g_isCitra
07092c74 000000a8 B CTRPluginFramework::Scheduler::_singleton
07092d1c 0000001c B CTRPluginFramework::HookManager::_singleton
07092d38 00000008 b CTRPluginFramework::Heap::g_heapPool
07092d40 0000000c b CTRPluginFramework::Heap::_mutex
07092d4c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
07092d50 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
07092d54 0000000c b sAddrMap
07092d60 0000000c B CTRPluginFramework::FSPath::FSMutex
07092d6c 00000004 B CTRPluginFramework::EventManager::_firstTouch
07092d70 00000001 B CTRPluginFramework::EventManager::_isTouching
07092d74 00000004 B CTRPluginFramework::SoundEngineImpl::fallbackSound
07092d78 0000000c B CTRPluginFramework::SoundEngineImpl::menuSounds
07092d84 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
07092d88 00000010 b CTRPluginFramework::SubMenu::Draw()::background
07092d98 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
07092d9c 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background2
07092dac 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
07092db0 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow(void*)::background
07092dc0 00000018 b __threads
07092dd8 0000000c b __mutex
07092de4 00000004 b errfRefCount
07092de8 00000004 b errfHandle
07092dec 00000004 b sharedFontAddr
07092df0 00000004 B g_sharedFont
07092df4 00000004 b srvRefCount
07092df8 00000004 b srvHandle
07092dfc 00000004 b arbiter
07092e00 00000004 b currentAddr
07092e04 00000004 b maxAddr
07092e08 00000004 b minAddr
07092e0c 00000004 b acRefCount
07092e10 00000004 b acHandle
07092e14 00000004 b amRefCount
07092e18 00000004 b amHandle
07092e1c 00000001 b flagValue.0
07092e1d 00000001 b flagInit.1
07092e20 00000004 b serviceName.6
07092e24 0000000c b aptFirstHook
07092e30 00000004 b aptLockHandle
07092e34 00000004 b cfguRefCount
07092e38 00000004 b cfguHandle
07092e40 00000080 b fsExemptArchives
07092ec0 00000004 b fsuRefCount
07092ec4 00000004 b fsuHandle
07092ec8 00000001 b gspRunEvents
07092ecc 00000004 b gspEventThread
07092ed0 00000004 b gspEvent
07092ed4 00000001 b gspGpuRight
07092ed8 00000004 b gspSharedMem
07092edc 00000004 b gspSharedMemHandle
07092ee0 00000004 b gspRefCount
07092ee4 00000004 b gspGpuHandle
07092ee8 00000001 b usingIrrst
07092eec 00000004 b hidRefCount
07092ef0 00000006 b gRate
07092ef8 00000006 b aVec
07092f00 00000004 b cPos
07092f04 00000004 b tPos
07092f08 00000004 b kRepeat
07092f0c 00000004 b kUp
07092f10 00000004 b kDown
07092f14 00000004 b kHeld
07092f18 00000004 b kOld
07092f1c 00000004 B hidSharedMem
07092f20 00000014 B hidEvents
07092f34 00000004 B hidMemHandle
07092f38 00000004 B hidHandle
07092f3c 00000004 b irrstRefCount
07092f40 00000004 b csPos
07092f44 00000004 b kHeld
07092f48 00000004 B irrstSharedMem
07092f4c 00000004 B irrstEvent
07092f50 00000004 B irrstMemHandle
07092f54 00000004 B irrstHandle
07092f58 00000004 b srvPmHandle
07092f5c 00000004 b __sslc_refcount
07092f60 00000004 B __sslc_servhandle
07092f64 00000004 V __ctru_heap_size
07092f68 00000004 B __ctru_linear_heap
07092f6c 00000004 B __ctru_heap
07092f70 00000004 b (anonymous namespace)::get_static_cond()::once
07092f78 00000008 b (anonymous namespace)::fake_cond
07092f80 00000004 b (anonymous namespace)::static_cond
07092f84 00000004 b (anonymous namespace)::get_static_mutex()::once
07092f88 00000010 b (anonymous namespace)::fake_mutex
07092f98 00000004 b (anonymous namespace)::static_mutex
07092f9c 00000004 b (anonymous namespace)::__new_handler
07092fa0 0000001c b (anonymous namespace)::emergency_pool
07092fbc 00000004 b init
07092fc0 00000001 B __eh_globals_init::_S_init
07092fc4 0000000c b (anonymous namespace)::eh_globals
07092fd0 00000010 V std::string::_Rep::_S_empty_rep_storage
07092fe0 00000028 B __malloc_current_mallinfo
07093008 00000004 B __malloc_max_total_mem
0709300c 00000004 B __malloc_max_sbrked_mem
07093010 00000004 B __malloc_top_pad
07093014 0000000c b __malloc_recursive_mutex
07093020 0000000c b __sfp_recursive_mutex
07093030 00000168 B __sf
07093198 00000004 B __stdio_exit_handler
0709319c 00000004 b prev_tzenv
070931a0 0000000c b __tzname_dst
070931ac 0000000c b __tzname_std
070931b8 00000004 B _timezone
070931bc 00000004 B _daylight
070931c0 00000190 B __atexit0
07093350 00000004 B __atexit
07093354 0000000c B __atexit_recursive_mutex
07093360 00000004 b initial_env
07093364 0000000c b __env_recursive_mutex
07093370 00000004 b __tz_mutex
07093374 00000004 b __hndl_lock
07093378 00000004 B fake_heap_start
0709337c 00000004 B fake_heap_end
07093380 00000004 b heap_start.0
07093384 B __tls_start
070933b0 B __bss_end__
070933b0 A __end__
070933b0 B __tls_end
